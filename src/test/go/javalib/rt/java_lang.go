// Generated from Azul Zulu packaged OpenJDK JAR and carries the same GPL license with the classpath exception
package rt

import "sync"

type Java__lang__AbstractStringBuilder__Static struct{}

var Java__lang__AbstractStringBuilder__Var Java__lang__AbstractStringBuilder__Static

func Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Static {
	return &Java__lang__AbstractStringBuilder__Var
}

func (this *Java__lang__AbstractStringBuilder__Static) New() *Java__lang__AbstractStringBuilder__Impl {
	v := &Java__lang__AbstractStringBuilder__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__AbstractStringBuilder__InitDispatch(v)
	return v
}

type Java__lang__AbstractStringBuilder__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Impl__PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Capacity__desc____ret__I() int
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__EnsureCapacity__desc__I__ret__V(int)
	Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(ByteArray__Instance, int, int8)
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Impl__PrivTo__Java__lang__GetCoder__desc____ret__B() int8
	Impl__PrivTo__Java__lang__GetValue__desc____ret____arr__B() ByteArray__Instance
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(CharArray__Instance, int, int)
	Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__PrivTo__Java__lang__IsLatin1__desc____ret__Z() bool
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Impl__SetCharAt__desc__I__C__ret__V(int, rune)
	Impl__SetLength__desc__I__ret__V(int)
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__TrimToSize__desc____ret__V()
}

func (this *Java__lang__AbstractStringBuilder__Impl) Java__lang__AbstractStringBuilder__InitDispatch(v Java__lang__AbstractStringBuilder__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Capacity__desc____ret__I() int {
	return this._dispatch.Impl__Capacity__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) EnsureCapacity__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__EnsureCapacity__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0 ByteArray__Instance, var1 int, var2 int8) {
	this._dispatch.Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__GetCoder__desc____ret__B() int8 {
	return this._dispatch.Impl__PrivTo__Java__lang__GetCoder__desc____ret__B()
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__GetValue__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetValue__desc____ret____arr__B()
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) PrivTo__Java__lang__IsLatin1__desc____ret__Z() bool {
	return this._dispatch.Impl__PrivTo__Java__lang__IsLatin1__desc____ret__Z()
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder()
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	this._dispatch.Impl__SetCharAt__desc__I__C__ret__V(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetLength__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__SetLength__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) TrimToSize__desc____ret__V() {
	this._dispatch.Impl__TrimToSize__desc____ret__V()
}

type Java__lang__AbstractStringBuilder__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	SetLength__desc__I__ret__V(int)
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	CodePointCount__desc__I__I__ret__I(int, int) int
	Finalize__desc____ret__V()
	CharAt__desc__I__ret__C(int) rune
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__IsLatin1__desc____ret__Z() bool
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Capacity__desc____ret__I() int
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__GetValue__desc____ret____arr__B() ByteArray__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	NotifyAll__desc____ret__V()
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Wait__desc____ret__V()
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	HashCode__desc____ret__I() int
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(ByteArray__Instance, int, int8)
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	TrimToSize__desc____ret__V()
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__GetCoder__desc____ret__B() int8
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	Wait__desc__J__I__ret__V(int64, int)
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Length__desc____ret__I() int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Notify__desc____ret__V()
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(CharArray__Instance, int, int)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__AbstractStringBuilder__Coder() int8
	FieldSet__Java__lang__AbstractStringBuilder__Coder(v int8)
	FieldGet__Java__lang__AbstractStringBuilder__Count() int
	FieldSet__Java__lang__AbstractStringBuilder__Count(v int)
	FieldGet__Java__lang__AbstractStringBuilder__Value() ByteArray__Instance
	FieldSet__Java__lang__AbstractStringBuilder__Value(v ByteArray__Instance)
	RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AbstractStringBuilder__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__AbstractStringBuilder__Dispatch
	Coder     int8
	Count     int
	Value     ByteArray__Instance
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Coder() int8 {
	return this.Coder
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Coder(v int8) {
	this.Coder = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Count() int {
	return this.Count
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Count(v int) {
	this.Count = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Value() ByteArray__Instance {
	return this.Value
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Value(v ByteArray__Instance) {
	this.Value = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/AbstractStringBuilder.<init>()V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.<init>(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(D)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(F)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(J)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append([C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.append([CII)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.capacity()I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Method not implemented - java/lang/AbstractStringBuilder.charAt(I)C")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.codePointAt(I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.codePointBefore(I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.codePointCount(II)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.delete(II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.ensureCapacity(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0 ByteArray__Instance, var1 int, var2 int8) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.getBytes([BIB)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.getChars(II[CI)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__GetCoder__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/AbstractStringBuilder.getCoder()B")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__GetValue__desc____ret____arr__B() ByteArray__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.getValue()[B")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.initBytes([CII)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(IC)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(I[C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.insert(I[CII)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__PrivTo__Java__lang__IsLatin1__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/AbstractStringBuilder.isLatin1()Z")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.length()I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/AbstractStringBuilder.offsetByCodePoints(II)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.reverse()Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.setCharAt(IC)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/AbstractStringBuilder.setLength(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/AbstractStringBuilder.toString()Ljava/lang/String;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Method not implemented - java/lang/AbstractStringBuilder.trimToSize()V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl {
	return this
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Appendable__Static struct{}

var Java__lang__Appendable__Var Java__lang__Appendable__Static

func Java__lang__Appendable() *Java__lang__Appendable__Static {
	return &Java__lang__Appendable__Var
}

type Java__lang__Appendable__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__Static struct{}

var Java__lang__AutoCloseable__Var Java__lang__AutoCloseable__Static

func Java__lang__AutoCloseable() *Java__lang__AutoCloseable__Static {
	return &Java__lang__AutoCloseable__Var
}

type Java__lang__AutoCloseable__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Close__desc____ret__V()
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__dynproxy____Static struct{}

var Java__lang__AutoCloseable__dynproxy____Var Java__lang__AutoCloseable__dynproxy____Static

func Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Static {
	return &Java__lang__AutoCloseable__dynproxy____Var
}

func (this *Java__lang__AutoCloseable__dynproxy____Static) New() *Java__lang__AutoCloseable__dynproxy____Impl {
	v := &Java__lang__AutoCloseable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__AutoCloseable__dynproxy____InitDispatch(v)
	return v
}

type Java__lang__AutoCloseable__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Close__desc____ret__V()
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Java__lang__AutoCloseable__dynproxy____InitDispatch(v Java__lang__AutoCloseable__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Close__desc____ret__V() {
	this._dispatch.Impl__Close__desc____ret__V()
}

type Java__lang__AutoCloseable__dynproxy____Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Close__desc____ret__V()
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__AutoCloseable__dynproxy____Dispatch
	fn        func()
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) RawPtr__Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Impl {
	return this
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__lang__AutoCloseable__Static) DynProxy_Create(fn func()) Java__lang__AutoCloseable__Instance {
	v := &Java__lang__AutoCloseable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__lang__AutoCloseable__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Impl__Close__desc____ret__V() {
	this.fn()
}

type Java__lang__Boolean__Static struct {
	FALSE Java__lang__Boolean__Instance
	TRUE  Java__lang__Boolean__Instance
	TYPE  Java__lang__Class__Instance
	init  sync.Once
}

var Java__lang__Boolean__Var Java__lang__Boolean__Static

func Java__lang__Boolean() *Java__lang__Boolean__Static {
	Java__lang__Boolean__Var.init.Do(Java__lang__Boolean__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Boolean__Var
}

func (this *Java__lang__Boolean__Static) New() *Java__lang__Boolean__Impl {
	v := &Java__lang__Boolean__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Boolean__InitDispatch(v)
	return v
}

func (this *Java__lang__Boolean__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Boolean__Static) Impl__Compare__desc__Z__Z__ret__I(var0 bool, var1 bool) int {
	panic("Method not implemented - java/lang/Boolean.compare(ZZ)I")
}

func (this *Java__lang__Boolean__Static) Impl__GetBoolean__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/Boolean.getBoolean(Ljava/lang/String;)Z")
}

func (this *Java__lang__Boolean__Static) Impl__HashCode__desc__Z__ret__I(var0 bool) int {
	panic("Method not implemented - java/lang/Boolean.hashCode(Z)I")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalAnd__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Method not implemented - java/lang/Boolean.logicalAnd(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalOr__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Method not implemented - java/lang/Boolean.logicalOr(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalXor__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Method not implemented - java/lang/Boolean.logicalXor(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__ParseBoolean__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/Boolean.parseBoolean(Ljava/lang/String;)Z")
}

func (this *Java__lang__Boolean__Static) Impl__ToString__desc__Z__ret____obj__Java__lang__String(var0 bool) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Boolean.toString(Z)Ljava/lang/String;")
}

func (this *Java__lang__Boolean__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Boolean(var0 Java__lang__String__Instance) Java__lang__Boolean__Instance {
	panic("Method not implemented - java/lang/Boolean.valueOf(Ljava/lang/String;)Ljava/lang/Boolean;")
}

func (this *Java__lang__Boolean__Static) Impl__ValueOf__desc__Z__ret____obj__Java__lang__Boolean(var0 bool) Java__lang__Boolean__Instance {
	panic("Method not implemented - java/lang/Boolean.valueOf(Z)Ljava/lang/Boolean;")
}

type Java__lang__Boolean__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc__Z__ret__V(bool)
	Impl__BooleanValue__desc____ret__Z() bool
	Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(Java__lang__Boolean__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Boolean__Impl) Java__lang__Boolean__InitDispatch(v Java__lang__Boolean__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Boolean__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Boolean__Impl) Instance_Init__desc__Z__ret__V(var0 bool) {
	this._dispatch.Impl__Instance_Init__desc__Z__ret__V(var0)
}

func (this *Java__lang__Boolean__Impl) BooleanValue__desc____ret__Z() bool {
	return this._dispatch.Impl__BooleanValue__desc____ret__Z()
}

func (this *Java__lang__Boolean__Impl) CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0 Java__lang__Boolean__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0)
}

func (this *Java__lang__Boolean__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Boolean__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	CompareTo__desc____obj__Java__lang__Boolean__ret__I(Java__lang__Boolean__Instance) int
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	BooleanValue__desc____ret__Z() bool
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Boolean() *Java__lang__Boolean__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Boolean__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Boolean__Dispatch
	Value     bool
}

func (this *Java__lang__Boolean__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Boolean.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Boolean__Impl) Impl__Instance_Init__desc__Z__ret__V(var0 bool) {
	panic("Method not implemented - java/lang/Boolean.<init>(Z)V")
}

func (this *Java__lang__Boolean__Impl) Impl__BooleanValue__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Boolean.booleanValue()Z")
}

func (this *Java__lang__Boolean__Impl) Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0 Java__lang__Boolean__Instance) int {
	panic("Method not implemented - java/lang/Boolean.compareTo(Ljava/lang/Boolean;)I")
}

func (this *Java__lang__Boolean__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Boolean.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Boolean__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Boolean.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Boolean__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Boolean.hashCode()I")
}

func (this *Java__lang__Boolean__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Boolean.toString()Ljava/lang/String;")
}

func (this *Java__lang__Boolean__Impl) RawPtr__Java__lang__Boolean() *Java__lang__Boolean__Impl {
	return this
}

func (this *Java__lang__Boolean__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Byte__Static struct {
	BYTES     int
	MAX_VALUE int8
	MIN_VALUE int8
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Byte__Var Java__lang__Byte__Static

func Java__lang__Byte() *Java__lang__Byte__Static {
	Java__lang__Byte__Var.init.Do(Java__lang__Byte__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Byte__Var
}

func (this *Java__lang__Byte__Static) New() *Java__lang__Byte__Impl {
	v := &Java__lang__Byte__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Byte__InitDispatch(v)
	return v
}

func (this *Java__lang__Byte__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Byte__Static) Impl__Compare__desc__B__B__ret__I(var0 int8, var1 int8) int {
	panic("Method not implemented - java/lang/Byte.compare(BB)I")
}

func (this *Java__lang__Byte__Static) Impl__CompareUnsigned__desc__B__B__ret__I(var0 int8, var1 int8) int {
	panic("Method not implemented - java/lang/Byte.compareUnsigned(BB)I")
}

func (this *Java__lang__Byte__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance) Java__lang__Byte__Instance {
	panic("Method not implemented - java/lang/Byte.decode(Ljava/lang/String;)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__HashCode__desc__B__ret__I(var0 int8) int {
	panic("Method not implemented - java/lang/Byte.hashCode(B)I")
}

func (this *Java__lang__Byte__Static) Impl__ParseByte__desc____obj__Java__lang__String__ret__B(var0 Java__lang__String__Instance) int8 {
	panic("Method not implemented - java/lang/Byte.parseByte(Ljava/lang/String;)B")
}

func (this *Java__lang__Byte__Static) Impl__ParseByte__desc____obj__Java__lang__String__I__ret__B(var0 Java__lang__String__Instance, var1 int) int8 {
	panic("Method not implemented - java/lang/Byte.parseByte(Ljava/lang/String;I)B")
}

func (this *Java__lang__Byte__Static) Impl__ToString__desc__B__ret____obj__Java__lang__String(var0 int8) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Byte.toString(B)Ljava/lang/String;")
}

func (this *Java__lang__Byte__Static) Impl__ToUnsignedInt__desc__B__ret__I(var0 int8) int {
	panic("Method not implemented - java/lang/Byte.toUnsignedInt(B)I")
}

func (this *Java__lang__Byte__Static) Impl__ToUnsignedLong__desc__B__ret__J(var0 int8) int64 {
	panic("Method not implemented - java/lang/Byte.toUnsignedLong(B)J")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc__B__ret____obj__Java__lang__Byte(var0 int8) Java__lang__Byte__Instance {
	panic("Method not implemented - java/lang/Byte.valueOf(B)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance) Java__lang__Byte__Instance {
	panic("Method not implemented - java/lang/Byte.valueOf(Ljava/lang/String;)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance, var1 int) Java__lang__Byte__Instance {
	panic("Method not implemented - java/lang/Byte.valueOf(Ljava/lang/String;I)Ljava/lang/Byte;")
}

type Java__lang__Byte__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__B__ret__V(int8)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(Java__lang__Byte__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Byte__Impl) Java__lang__Byte__InitDispatch(v Java__lang__Byte__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Byte__Impl) Instance_Init__desc__B__ret__V(var0 int8) {
	this._dispatch.Impl__Instance_Init__desc__B__ret__V(var0)
}

func (this *Java__lang__Byte__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Byte__Impl) CompareTo__desc____obj__Java__lang__Byte__ret__I(var0 Java__lang__Byte__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(var0)
}

func (this *Java__lang__Byte__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Byte__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CompareTo__desc____obj__Java__lang__Byte__ret__I(Java__lang__Byte__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Byte() *Java__lang__Byte__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Byte__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Byte__Dispatch
	Value     byte
}

func (this *Java__lang__Byte__Impl) Impl__Instance_Init__desc__B__ret__V(var0 int8) {
	panic("Method not implemented - java/lang/Byte.<init>(B)V")
}

func (this *Java__lang__Byte__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Byte.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Byte__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Byte.byteValue()B")
}

func (this *Java__lang__Byte__Impl) Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(var0 Java__lang__Byte__Instance) int {
	panic("Method not implemented - java/lang/Byte.compareTo(Ljava/lang/Byte;)I")
}

func (this *Java__lang__Byte__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Byte.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Byte__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Byte.doubleValue()D")
}

func (this *Java__lang__Byte__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Byte.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Byte__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Byte.floatValue()F")
}

func (this *Java__lang__Byte__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Byte.hashCode()I")
}

func (this *Java__lang__Byte__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Byte.intValue()I")
}

func (this *Java__lang__Byte__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Byte.longValue()J")
}

func (this *Java__lang__Byte__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Byte.shortValue()S")
}

func (this *Java__lang__Byte__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Byte.toString()Ljava/lang/String;")
}

func (this *Java__lang__Byte__Impl) RawPtr__Java__lang__Byte() *Java__lang__Byte__Impl {
	return this
}

func (this *Java__lang__Byte__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Byte__innerclass__ByteCache__Static struct {
	Cache ObjectArray__Instance
	init  sync.Once
}

var Java__lang__Byte__innerclass__ByteCache__Var Java__lang__Byte__innerclass__ByteCache__Static

func Java__lang__Byte__innerclass__ByteCache() *Java__lang__Byte__innerclass__ByteCache__Static {
	Java__lang__Byte__innerclass__ByteCache__Var.init.Do(Java__lang__Byte__innerclass__ByteCache__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Byte__innerclass__ByteCache__Var
}

func (this *Java__lang__Byte__innerclass__ByteCache__Static) New() *Java__lang__Byte__innerclass__ByteCache__Impl {
	v := &Java__lang__Byte__innerclass__ByteCache__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Byte__innerclass__ByteCache__InitDispatch(v)
	return v
}

func (this *Java__lang__Byte__innerclass__ByteCache__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Byte__innerclass__ByteCache__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Byte__innerclass__ByteCache__Impl) Java__lang__Byte__innerclass__ByteCache__InitDispatch(v Java__lang__Byte__innerclass__ByteCache__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Byte__innerclass__ByteCache__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Byte__innerclass__ByteCache() *Java__lang__Byte__innerclass__ByteCache__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Byte__innerclass__ByteCache__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Byte__innerclass__ByteCache__Dispatch
}

func (this *Java__lang__Byte__innerclass__ByteCache__Impl) RawPtr__Java__lang__Byte__innerclass__ByteCache() *Java__lang__Byte__innerclass__ByteCache__Impl {
	return this
}

func (this *Java__lang__Byte__innerclass__ByteCache__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__CharSequence__Static struct{}

var Java__lang__CharSequence__Var Java__lang__CharSequence__Static

func Java__lang__CharSequence() *Java__lang__CharSequence__Static {
	return &Java__lang__CharSequence__Var
}

type Java__lang__CharSequence__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CharAt__desc__I__ret__C(int) rune
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Length__desc____ret__I() int
	Notify__desc____ret__V()
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__Static struct {
	__dollar__assertionsDisabled              bool
	BYTES                                     int
	COMBINING_SPACING_MARK                    int8
	CONNECTOR_PUNCTUATION                     int8
	CONTROL                                   int8
	CURRENCY_SYMBOL                           int8
	DASH_PUNCTUATION                          int8
	DECIMAL_DIGIT_NUMBER                      int8
	DIRECTIONALITY_ARABIC_NUMBER              int8
	DIRECTIONALITY_BOUNDARY_NEUTRAL           int8
	DIRECTIONALITY_COMMON_NUMBER_SEPARATOR    int8
	DIRECTIONALITY_EUROPEAN_NUMBER            int8
	DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR  int8
	DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR int8
	DIRECTIONALITY_FIRST_STRONG_ISOLATE       int8
	DIRECTIONALITY_LEFT_TO_RIGHT              int8
	DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING    int8
	DIRECTIONALITY_LEFT_TO_RIGHT_ISOLATE      int8
	DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE     int8
	DIRECTIONALITY_NONSPACING_MARK            int8
	DIRECTIONALITY_OTHER_NEUTRALS             int8
	DIRECTIONALITY_PARAGRAPH_SEPARATOR        int8
	DIRECTIONALITY_POP_DIRECTIONAL_FORMAT     int8
	DIRECTIONALITY_POP_DIRECTIONAL_ISOLATE    int8
	DIRECTIONALITY_RIGHT_TO_LEFT              int8
	DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC       int8
	DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING    int8
	DIRECTIONALITY_RIGHT_TO_LEFT_ISOLATE      int8
	DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE     int8
	DIRECTIONALITY_SEGMENT_SEPARATOR          int8
	DIRECTIONALITY_UNDEFINED                  int8
	DIRECTIONALITY_WHITESPACE                 int8
	ENCLOSING_MARK                            int8
	END_PUNCTUATION                           int8
	ERROR                                     int
	FINAL_QUOTE_PUNCTUATION                   int8
	FORMAT                                    int8
	INITIAL_QUOTE_PUNCTUATION                 int8
	LETTER_NUMBER                             int8
	LINE_SEPARATOR                            int8
	LOWERCASE_LETTER                          int8
	MATH_SYMBOL                               int8
	MAX_CODE_POINT                            int
	MAX_HIGH_SURROGATE                        rune
	MAX_LOW_SURROGATE                         rune
	MAX_RADIX                                 int
	MAX_SURROGATE                             rune
	MAX_VALUE                                 rune
	MIN_CODE_POINT                            int
	MIN_HIGH_SURROGATE                        rune
	MIN_LOW_SURROGATE                         rune
	MIN_RADIX                                 int
	MIN_SUPPLEMENTARY_CODE_POINT              int
	MIN_SURROGATE                             rune
	MIN_VALUE                                 rune
	MODIFIER_LETTER                           int8
	MODIFIER_SYMBOL                           int8
	NON_SPACING_MARK                          int8
	OTHER_LETTER                              int8
	OTHER_NUMBER                              int8
	OTHER_PUNCTUATION                         int8
	OTHER_SYMBOL                              int8
	PARAGRAPH_SEPARATOR                       int8
	PRIVATE_USE                               int8
	SIZE                                      int
	SPACE_SEPARATOR                           int8
	START_PUNCTUATION                         int8
	SURROGATE                                 int8
	TITLECASE_LETTER                          int8
	TYPE                                      Java__lang__Class__Instance
	UNASSIGNED                                int8
	UPPERCASE_LETTER                          int8
	init                                      sync.Once
}

var Java__lang__Character__Var Java__lang__Character__Static

func Java__lang__Character() *Java__lang__Character__Static {
	Java__lang__Character__Var.init.Do(Java__lang__Character__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Character__Var
}

func (this *Java__lang__Character__Static) New() *Java__lang__Character__Impl {
	v := &Java__lang__Character__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Character__InitDispatch(v)
	return v
}

func (this *Java__lang__Character__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Character__Static) Impl__CharCount__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.charCount(I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____obj__Java__lang__CharSequence__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Character.codePointAt(Ljava/lang/CharSequence;I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____arr__C__I__ret__I(var0 CharArray__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Character.codePointAt([CI)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointAt([CII)I")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__CodePointAtImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointAtImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____obj__Java__lang__CharSequence__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Character.codePointBefore(Ljava/lang/CharSequence;I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____arr__C__I__ret__I(var0 CharArray__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Character.codePointBefore([CI)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointBefore([CII)I")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__CodePointBeforeImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointBeforeImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointCount__desc____obj__Java__lang__CharSequence__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointCount(Ljava/lang/CharSequence;II)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointCount__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointCount([CII)I")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__CodePointCountImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.codePointCountImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/Character.codePointOf(Ljava/lang/String;)I")
}

func (this *Java__lang__Character__Static) Impl__Compare__desc__C__C__ret__I(var0 rune, var1 rune) int {
	panic("Method not implemented - java/lang/Character.compare(CC)I")
}

func (this *Java__lang__Character__Static) Impl__Digit__desc__C__I__ret__I(var0 rune, var1 int) int {
	panic("Method not implemented - java/lang/Character.digit(CI)I")
}

func (this *Java__lang__Character__Static) Impl__Digit__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Character.digit(II)I")
}

func (this *Java__lang__Character__Static) Impl__ForDigit__desc__I__I__ret__C(var0 int, var1 int) rune {
	panic("Method not implemented - java/lang/Character.forDigit(II)C")
}

func (this *Java__lang__Character__Static) Impl__GetDirectionality__desc__C__ret__B(var0 rune) int8 {
	panic("Method not implemented - java/lang/Character.getDirectionality(C)B")
}

func (this *Java__lang__Character__Static) Impl__GetDirectionality__desc__I__ret__B(var0 int) int8 {
	panic("Method not implemented - java/lang/Character.getDirectionality(I)B")
}

func (this *Java__lang__Character__Static) Impl__GetName__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Character.getName(I)Ljava/lang/String;")
}

func (this *Java__lang__Character__Static) Impl__GetNumericValue__desc__C__ret__I(var0 rune) int {
	panic("Method not implemented - java/lang/Character.getNumericValue(C)I")
}

func (this *Java__lang__Character__Static) Impl__GetNumericValue__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.getNumericValue(I)I")
}

func (this *Java__lang__Character__Static) Impl__GetType__desc__C__ret__I(var0 rune) int {
	panic("Method not implemented - java/lang/Character.getType(C)I")
}

func (this *Java__lang__Character__Static) Impl__GetType__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.getType(I)I")
}

func (this *Java__lang__Character__Static) Impl__HashCode__desc__C__ret__I(var0 rune) int {
	panic("Method not implemented - java/lang/Character.hashCode(C)I")
}

func (this *Java__lang__Character__Static) Impl__HighSurrogate__desc__I__ret__C(var0 int) rune {
	panic("Method not implemented - java/lang/Character.highSurrogate(I)C")
}

func (this *Java__lang__Character__Static) Impl__IsAlphabetic__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isAlphabetic(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsBmpCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isBmpCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDefined__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isDefined(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDefined__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isDefined(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDigit__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isDigit(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsHighSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isHighSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsISOControl__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isISOControl(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsISOControl__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isISOControl(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdentifierIgnorable__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isIdentifierIgnorable(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdentifierIgnorable__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isIdentifierIgnorable(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdeographic__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isIdeographic(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierPart__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isJavaIdentifierPart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierPart__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isJavaIdentifierPart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierStart__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isJavaIdentifierStart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierStart__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isJavaIdentifierStart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaLetter__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isJavaLetter(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaLetterOrDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isJavaLetterOrDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetter__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isLetter(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetter__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isLetter(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetterOrDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isLetterOrDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetterOrDigit__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isLetterOrDigit(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isLowSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowerCase__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isLowerCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowerCase__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isLowerCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsMirrored__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isMirrored(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsMirrored__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isMirrored(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpace__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isSpace(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpaceChar__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isSpaceChar(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpaceChar__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isSpaceChar(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSupplementaryCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isSupplementaryCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSurrogatePair__desc__C__C__ret__Z(var0 rune, var1 rune) bool {
	panic("Method not implemented - java/lang/Character.isSurrogatePair(CC)Z")
}

func (this *Java__lang__Character__Static) Impl__IsTitleCase__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isTitleCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsTitleCase__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isTitleCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierPart__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isUnicodeIdentifierPart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierPart__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isUnicodeIdentifierPart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierStart__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isUnicodeIdentifierStart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierStart__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isUnicodeIdentifierStart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUpperCase__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isUpperCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUpperCase__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isUpperCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsValidCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isValidCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsWhitespace__desc__C__ret__Z(var0 rune) bool {
	panic("Method not implemented - java/lang/Character.isWhitespace(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsWhitespace__desc__I__ret__Z(var0 int) bool {
	panic("Method not implemented - java/lang/Character.isWhitespace(I)Z")
}

func (this *Java__lang__Character__Static) Impl__LowSurrogate__desc__I__ret__C(var0 int) rune {
	panic("Method not implemented - java/lang/Character.lowSurrogate(I)C")
}

func (this *Java__lang__Character__Static) Impl__OffsetByCodePoints__desc____obj__Java__lang__CharSequence__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) int {
	panic("Method not implemented - java/lang/Character.offsetByCodePoints(Ljava/lang/CharSequence;II)I")
}

func (this *Java__lang__Character__Static) Impl__OffsetByCodePoints__desc____arr__C__I__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 int, var4 int) int {
	panic("Method not implemented - java/lang/Character.offsetByCodePoints([CIIII)I")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__OffsetByCodePointsImpl__desc____arr__C__I__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 int, var4 int) int {
	panic("Method not implemented - java/lang/Character.offsetByCodePointsImpl([CIIII)I")
}

func (this *Java__lang__Character__Static) Impl__ReverseBytes__desc__C__ret__C(var0 rune) rune {
	panic("Method not implemented - java/lang/Character.reverseBytes(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToChars__desc__I__ret____arr__C(var0 int) CharArray__Instance {
	panic("Method not implemented - java/lang/Character.toChars(I)[C")
}

func (this *Java__lang__Character__Static) Impl__ToChars__desc__I____arr__C__I__ret__I(var0 int, var1 CharArray__Instance, var2 int) int {
	panic("Method not implemented - java/lang/Character.toChars(I[CI)I")
}

func (this *Java__lang__Character__Static) Impl__ToCodePoint__desc__C__C__ret__I(var0 rune, var1 rune) int {
	panic("Method not implemented - java/lang/Character.toCodePoint(CC)I")
}

func (this *Java__lang__Character__Static) Impl__ToLowerCase__desc__C__ret__C(var0 rune) rune {
	panic("Method not implemented - java/lang/Character.toLowerCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToLowerCase__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.toLowerCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__ToString__desc__C__ret____obj__Java__lang__String(var0 rune) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Character.toString(C)Ljava/lang/String;")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__ToSurrogates__desc__I____arr__C__I__ret__V(var0 int, var1 CharArray__Instance, var2 int) {
	panic("Method not implemented - java/lang/Character.toSurrogates(I[CI)V")
}

func (this *Java__lang__Character__Static) Impl__ToTitleCase__desc__C__ret__C(var0 rune) rune {
	panic("Method not implemented - java/lang/Character.toTitleCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToTitleCase__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.toTitleCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCase__desc__C__ret__C(var0 rune) rune {
	panic("Method not implemented - java/lang/Character.toUpperCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCase__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.toUpperCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__ToUpperCaseCharArray__desc__I__ret____arr__C(var0 int) CharArray__Instance {
	panic("Method not implemented - java/lang/Character.toUpperCaseCharArray(I)[C")
}

func (this *Java__lang__Character__Static) Impl__PrivTo__Java__lang__ToUpperCaseEx__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Character.toUpperCaseEx(I)I")
}

func (this *Java__lang__Character__Static) Impl__ValueOf__desc__C__ret____obj__Java__lang__Character(var0 rune) Java__lang__Character__Instance {
	panic("Method not implemented - java/lang/Character.valueOf(C)Ljava/lang/Character;")
}

type Java__lang__Character__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__C__ret__V(rune)
	Impl__CharValue__desc____ret__C() rune
	Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(Java__lang__Character__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Character__Impl) Java__lang__Character__InitDispatch(v Java__lang__Character__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Character__Impl) Instance_Init__desc__C__ret__V(var0 rune) {
	this._dispatch.Impl__Instance_Init__desc__C__ret__V(var0)
}

func (this *Java__lang__Character__Impl) CharValue__desc____ret__C() rune {
	return this._dispatch.Impl__CharValue__desc____ret__C()
}

func (this *Java__lang__Character__Impl) CompareTo__desc____obj__Java__lang__Character__ret__I(var0 Java__lang__Character__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(var0)
}

func (this *Java__lang__Character__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Character__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Character__ret__I(Java__lang__Character__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CharValue__desc____ret__C() rune
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Character() *Java__lang__Character__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Character__Dispatch
	Value     rune
}

func (this *Java__lang__Character__Impl) Impl__Instance_Init__desc__C__ret__V(var0 rune) {
	panic("Method not implemented - java/lang/Character.<init>(C)V")
}

func (this *Java__lang__Character__Impl) Impl__CharValue__desc____ret__C() rune {
	panic("Method not implemented - java/lang/Character.charValue()C")
}

func (this *Java__lang__Character__Impl) Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(var0 Java__lang__Character__Instance) int {
	panic("Method not implemented - java/lang/Character.compareTo(Ljava/lang/Character;)I")
}

func (this *Java__lang__Character__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Character.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Character__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Character.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Character__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Character.hashCode()I")
}

func (this *Java__lang__Character__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Character.toString()Ljava/lang/String;")
}

func (this *Java__lang__Character__Impl) RawPtr__Java__lang__Character() *Java__lang__Character__Impl {
	return this
}

func (this *Java__lang__Character__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Character__innerclass__CharacterCache__Static struct {
	Cache ObjectArray__Instance
	init  sync.Once
}

var Java__lang__Character__innerclass__CharacterCache__Var Java__lang__Character__innerclass__CharacterCache__Static

func Java__lang__Character__innerclass__CharacterCache() *Java__lang__Character__innerclass__CharacterCache__Static {
	Java__lang__Character__innerclass__CharacterCache__Var.init.Do(Java__lang__Character__innerclass__CharacterCache__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Character__innerclass__CharacterCache__Var
}

func (this *Java__lang__Character__innerclass__CharacterCache__Static) New() *Java__lang__Character__innerclass__CharacterCache__Impl {
	v := &Java__lang__Character__innerclass__CharacterCache__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Character__innerclass__CharacterCache__InitDispatch(v)
	return v
}

func (this *Java__lang__Character__innerclass__CharacterCache__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Character__innerclass__CharacterCache__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Character__innerclass__CharacterCache__Impl) Java__lang__Character__innerclass__CharacterCache__InitDispatch(v Java__lang__Character__innerclass__CharacterCache__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Character__innerclass__CharacterCache__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Character__innerclass__CharacterCache() *Java__lang__Character__innerclass__CharacterCache__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__innerclass__CharacterCache__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Character__innerclass__CharacterCache__Dispatch
}

func (this *Java__lang__Character__innerclass__CharacterCache__Impl) RawPtr__Java__lang__Character__innerclass__CharacterCache() *Java__lang__Character__innerclass__CharacterCache__Impl {
	return this
}

func (this *Java__lang__Character__innerclass__CharacterCache__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Character__innerclass__Subset__Static struct{}

var Java__lang__Character__innerclass__Subset__Var Java__lang__Character__innerclass__Subset__Static

func Java__lang__Character__innerclass__Subset() *Java__lang__Character__innerclass__Subset__Static {
	return &Java__lang__Character__innerclass__Subset__Var
}

func (this *Java__lang__Character__innerclass__Subset__Static) New() *Java__lang__Character__innerclass__Subset__Impl {
	v := &Java__lang__Character__innerclass__Subset__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Character__innerclass__Subset__InitDispatch(v)
	return v
}

type Java__lang__Character__innerclass__Subset__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Java__lang__Character__innerclass__Subset__InitDispatch(v Java__lang__Character__innerclass__Subset__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

type Java__lang__Character__innerclass__Subset__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Character__innerclass__Subset() *Java__lang__Character__innerclass__Subset__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__innerclass__Subset__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Character__innerclass__Subset__Dispatch
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Character$Subset.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Character$Subset.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Character$Subset.hashCode()I")
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Character$Subset.toString()Ljava/lang/String;")
}

func (this *Java__lang__Character__innerclass__Subset__Impl) RawPtr__Java__lang__Character__innerclass__Subset() *Java__lang__Character__innerclass__Subset__Impl {
	return this
}

func (this *Java__lang__Character__innerclass__Subset__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Character__innerclass__UnicodeBlock__Static struct {
	AEGEAN_NUMBERS                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	AHOM                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	ALCHEMICAL_SYMBOLS                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	ALPHABETIC_PRESENTATION_FORMS                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	ANATOLIAN_HIEROGLYPHS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	ANCIENT_GREEK_MUSICAL_NOTATION                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	ANCIENT_GREEK_NUMBERS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	ANCIENT_SYMBOLS                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC_EXTENDED_A                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC_MATHEMATICAL_ALPHABETIC_SYMBOLS         Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC_PRESENTATION_FORMS_A                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC_PRESENTATION_FORMS_B                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARABIC_SUPPLEMENT                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARMENIAN                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	ARROWS                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	AVESTAN                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	BALINESE                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	BAMUM                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	BAMUM_SUPPLEMENT                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	BASIC_LATIN                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	BASSA_VAH                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	BATAK                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	BENGALI                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	BLOCK_ELEMENTS                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	BOPOMOFO                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	BOPOMOFO_EXTENDED                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	BOX_DRAWING                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	BRAHMI                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	BRAILLE_PATTERNS                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	BUGINESE                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	BUHID                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	BYZANTINE_MUSICAL_SYMBOLS                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	CARIAN                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	CAUCASIAN_ALBANIAN                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	CHAKMA                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	CHAM                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	CHEROKEE                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	CHEROKEE_SUPPLEMENT                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_COMPATIBILITY                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_COMPATIBILITY_FORMS                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_COMPATIBILITY_IDEOGRAPHS                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_COMPATIBILITY_IDEOGRAPHS_SUPPLEMENT        Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_RADICALS_SUPPLEMENT                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_STROKES                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_SYMBOLS_AND_PUNCTUATION                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS_EXTENSION_A             Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS_EXTENSION_B             Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS_EXTENSION_C             Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS_EXTENSION_D             Java__lang__Character__innerclass__UnicodeBlock__Instance
	CJK_UNIFIED_IDEOGRAPHS_EXTENSION_E             Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMBINING_DIACRITICAL_MARKS                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMBINING_DIACRITICAL_MARKS_EXTENDED           Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMBINING_DIACRITICAL_MARKS_SUPPLEMENT         Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMBINING_HALF_MARKS                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMBINING_MARKS_FOR_SYMBOLS                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	COMMON_INDIC_NUMBER_FORMS                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	CONTROL_PICTURES                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	COPTIC                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	COPTIC_EPACT_NUMBERS                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	COUNTING_ROD_NUMERALS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	CUNEIFORM                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	CUNEIFORM_NUMBERS_AND_PUNCTUATION              Java__lang__Character__innerclass__UnicodeBlock__Instance
	CURRENCY_SYMBOLS                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	CYPRIOT_SYLLABARY                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	CYRILLIC                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	CYRILLIC_EXTENDED_A                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	CYRILLIC_EXTENDED_B                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	CYRILLIC_SUPPLEMENTARY                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	DESERET                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	DEVANAGARI                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	DEVANAGARI_EXTENDED                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	DINGBATS                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	DOMINO_TILES                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	DUPLOYAN                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	EARLY_DYNASTIC_CUNEIFORM                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	EGYPTIAN_HIEROGLYPHS                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	ELBASAN                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	EMOTICONS                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	ENCLOSED_ALPHANUMERICS                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	ENCLOSED_ALPHANUMERIC_SUPPLEMENT               Java__lang__Character__innerclass__UnicodeBlock__Instance
	ENCLOSED_CJK_LETTERS_AND_MONTHS                Java__lang__Character__innerclass__UnicodeBlock__Instance
	ENCLOSED_IDEOGRAPHIC_SUPPLEMENT                Java__lang__Character__innerclass__UnicodeBlock__Instance
	ETHIOPIC                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	ETHIOPIC_EXTENDED                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	ETHIOPIC_EXTENDED_A                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	ETHIOPIC_SUPPLEMENT                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	GENERAL_PUNCTUATION                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	GEOMETRIC_SHAPES                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	GEOMETRIC_SHAPES_EXTENDED                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	GEORGIAN                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	GEORGIAN_SUPPLEMENT                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	GLAGOLITIC                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	GOTHIC                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	GRANTHA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	GREEK                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	GREEK_EXTENDED                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	GUJARATI                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	GURMUKHI                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	HALFWIDTH_AND_FULLWIDTH_FORMS                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANGUL_COMPATIBILITY_JAMO                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANGUL_JAMO                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANGUL_JAMO_EXTENDED_A                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANGUL_JAMO_EXTENDED_B                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANGUL_SYLLABLES                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	HANUNOO                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	HATRAN                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	HEBREW                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	HIGH_PRIVATE_USE_SURROGATES                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	HIGH_SURROGATES                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	HIRAGANA                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	IDEOGRAPHIC_DESCRIPTION_CHARACTERS             Java__lang__Character__innerclass__UnicodeBlock__Instance
	IMPERIAL_ARAMAIC                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	INSCRIPTIONAL_PAHLAVI                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	INSCRIPTIONAL_PARTHIAN                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	IPA_EXTENSIONS                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	JAVANESE                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	KAITHI                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	KANA_SUPPLEMENT                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	KANBUN                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	KANGXI_RADICALS                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	KANNADA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	KATAKANA                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	KATAKANA_PHONETIC_EXTENSIONS                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	KAYAH_LI                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	KHAROSHTHI                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	KHMER                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	KHMER_SYMBOLS                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	KHOJKI                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	KHUDAWADI                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	LAO                                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_1_SUPPLEMENT                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_A                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_ADDITIONAL                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_B                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_C                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_D                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	LATIN_EXTENDED_E                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	LEPCHA                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	LETTERLIKE_SYMBOLS                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	LIMBU                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	LINEAR_A                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	LINEAR_B_IDEOGRAMS                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	LINEAR_B_SYLLABARY                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	LISU                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	LOW_SURROGATES                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	LYCIAN                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	LYDIAN                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	MAHAJANI                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	MAHJONG_TILES                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	MALAYALAM                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	MANDAIC                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	MANICHAEAN                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	MATHEMATICAL_ALPHANUMERIC_SYMBOLS              Java__lang__Character__innerclass__UnicodeBlock__Instance
	MATHEMATICAL_OPERATORS                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	MEETEI_MAYEK                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	MEETEI_MAYEK_EXTENSIONS                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	MENDE_KIKAKUI                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	MEROITIC_CURSIVE                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	MEROITIC_HIEROGLYPHS                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	MIAO                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_MATHEMATICAL_SYMBOLS_A           Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_MATHEMATICAL_SYMBOLS_B           Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_SYMBOLS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_SYMBOLS_AND_ARROWS               Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_SYMBOLS_AND_PICTOGRAPHS          Java__lang__Character__innerclass__UnicodeBlock__Instance
	MISCELLANEOUS_TECHNICAL                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	MODI                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	MODIFIER_TONE_LETTERS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	MONGOLIAN                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	MRO                                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	MULTANI                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	MUSICAL_SYMBOLS                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	MYANMAR                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	MYANMAR_EXTENDED_A                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	MYANMAR_EXTENDED_B                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	NABATAEAN                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	NEW_TAI_LUE                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	NKO                                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	NUMBER_FORMS                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	OGHAM                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_HUNGARIAN                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_ITALIC                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_NORTH_ARABIAN                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_PERMIC                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_PERSIAN                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_SOUTH_ARABIAN                              Java__lang__Character__innerclass__UnicodeBlock__Instance
	OLD_TURKIC                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	OL_CHIKI                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	OPTICAL_CHARACTER_RECOGNITION                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	ORIYA                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	ORNAMENTAL_DINGBATS                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	OSMANYA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	PAHAWH_HMONG                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	PALMYRENE                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	PAU_CIN_HAU                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	PHAGS_PA                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	PHAISTOS_DISC                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	PHOENICIAN                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	PHONETIC_EXTENSIONS                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	PHONETIC_EXTENSIONS_SUPPLEMENT                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	PLAYING_CARDS                                  Java__lang__Character__innerclass__UnicodeBlock__Instance
	PRIVATE_USE_AREA                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	PSALTER_PAHLAVI                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	REJANG                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	RUMI_NUMERAL_SYMBOLS                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	RUNIC                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	SAMARITAN                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	SAURASHTRA                                     Java__lang__Character__innerclass__UnicodeBlock__Instance
	SHARADA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	SHAVIAN                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	SHORTHAND_FORMAT_CONTROLS                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	SIDDHAM                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	SINHALA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	SINHALA_ARCHAIC_NUMBERS                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	SMALL_FORM_VARIANTS                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	SORA_SOMPENG                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	SPACING_MODIFIER_LETTERS                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	SPECIALS                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUNDANESE                                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUNDANESE_SUPPLEMENT                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPERSCRIPTS_AND_SUBSCRIPTS                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_ARROWS_A                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_ARROWS_B                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_ARROWS_C                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_MATHEMATICAL_OPERATORS            Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_PUNCTUATION                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTAL_SYMBOLS_AND_PICTOGRAPHS           Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTARY_PRIVATE_USE_AREA_A               Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUPPLEMENTARY_PRIVATE_USE_AREA_B               Java__lang__Character__innerclass__UnicodeBlock__Instance
	SURROGATES_AREA                                Java__lang__Character__innerclass__UnicodeBlock__Instance
	SUTTON_SIGNWRITING                             Java__lang__Character__innerclass__UnicodeBlock__Instance
	SYLOTI_NAGRI                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	SYRIAC                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAGALOG                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAGBANWA                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAGS                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAI_LE                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAI_THAM                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAI_VIET                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAI_XUAN_JING_SYMBOLS                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAKRI                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	TAMIL                                          Java__lang__Character__innerclass__UnicodeBlock__Instance
	TELUGU                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	THAANA                                         Java__lang__Character__innerclass__UnicodeBlock__Instance
	THAI                                           Java__lang__Character__innerclass__UnicodeBlock__Instance
	TIBETAN                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	TIFINAGH                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	TIRHUTA                                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	TRANSPORT_AND_MAP_SYMBOLS                      Java__lang__Character__innerclass__UnicodeBlock__Instance
	UGARITIC                                       Java__lang__Character__innerclass__UnicodeBlock__Instance
	UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS          Java__lang__Character__innerclass__UnicodeBlock__Instance
	UNIFIED_CANADIAN_ABORIGINAL_SYLLABICS_EXTENDED Java__lang__Character__innerclass__UnicodeBlock__Instance
	VAI                                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	VARIATION_SELECTORS                            Java__lang__Character__innerclass__UnicodeBlock__Instance
	VARIATION_SELECTORS_SUPPLEMENT                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	VEDIC_EXTENSIONS                               Java__lang__Character__innerclass__UnicodeBlock__Instance
	VERTICAL_FORMS                                 Java__lang__Character__innerclass__UnicodeBlock__Instance
	WARANG_CITI                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	YIJING_HEXAGRAM_SYMBOLS                        Java__lang__Character__innerclass__UnicodeBlock__Instance
	YI_RADICALS                                    Java__lang__Character__innerclass__UnicodeBlock__Instance
	YI_SYLLABLES                                   Java__lang__Character__innerclass__UnicodeBlock__Instance
	init                                           sync.Once
}

var Java__lang__Character__innerclass__UnicodeBlock__Var Java__lang__Character__innerclass__UnicodeBlock__Static

func Java__lang__Character__innerclass__UnicodeBlock() *Java__lang__Character__innerclass__UnicodeBlock__Static {
	Java__lang__Character__innerclass__UnicodeBlock__Var.init.Do(Java__lang__Character__innerclass__UnicodeBlock__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Character__innerclass__UnicodeBlock__Var
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Static) New() *Java__lang__Character__innerclass__UnicodeBlock__Impl {
	v := &Java__lang__Character__innerclass__UnicodeBlock__Impl{
		Java__lang__Character__innerclass__Subset__Impl: Java__lang__Character__innerclass__Subset().New(),
	}
	v.Java__lang__Character__innerclass__UnicodeBlock__InitDispatch(v)
	return v
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Character__innerclass__UnicodeBlock__Static) Impl__ForName__desc____obj__Java__lang__String__ret____obj__Java__lang__Character__innerclass__UnicodeBlock(var0 Java__lang__String__Instance) Java__lang__Character__innerclass__UnicodeBlock__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeBlock.forName(Ljava/lang/String;)Ljava/lang/Character$UnicodeBlock;")
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Static) Impl__Of__desc__C__ret____obj__Java__lang__Character__innerclass__UnicodeBlock(var0 rune) Java__lang__Character__innerclass__UnicodeBlock__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeBlock.of(C)Ljava/lang/Character$UnicodeBlock;")
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Static) Impl__Of__desc__I__ret____obj__Java__lang__Character__innerclass__UnicodeBlock(var0 int) Java__lang__Character__innerclass__UnicodeBlock__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeBlock.of(I)Ljava/lang/Character$UnicodeBlock;")
}

type Java__lang__Character__innerclass__UnicodeBlock__Dispatch interface {
	Java__lang__Character__innerclass__Subset__Dispatch
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Impl) Java__lang__Character__innerclass__UnicodeBlock__InitDispatch(v Java__lang__Character__innerclass__UnicodeBlock__Dispatch) {
	this.Java__lang__Character__innerclass__Subset__Impl.Java__lang__Character__innerclass__Subset__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Character__innerclass__UnicodeBlock__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Character__innerclass__UnicodeBlock() *Java__lang__Character__innerclass__UnicodeBlock__Impl
	RawPtr__Java__lang__Character__innerclass__Subset() *Java__lang__Character__innerclass__Subset__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__innerclass__UnicodeBlock__Impl struct {
	*Java__lang__Character__innerclass__Subset__Impl
	_dispatch Java__lang__Character__innerclass__UnicodeBlock__Dispatch
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Impl) RawPtr__Java__lang__Character__innerclass__UnicodeBlock() *Java__lang__Character__innerclass__UnicodeBlock__Impl {
	return this
}

func (this *Java__lang__Character__innerclass__UnicodeBlock__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Character__innerclass__UnicodeScript__Static struct {
	AHOM                   Java__lang__Character__innerclass__UnicodeScript__Instance
	ANATOLIAN_HIEROGLYPHS  Java__lang__Character__innerclass__UnicodeScript__Instance
	ARABIC                 Java__lang__Character__innerclass__UnicodeScript__Instance
	ARMENIAN               Java__lang__Character__innerclass__UnicodeScript__Instance
	AVESTAN                Java__lang__Character__innerclass__UnicodeScript__Instance
	BALINESE               Java__lang__Character__innerclass__UnicodeScript__Instance
	BAMUM                  Java__lang__Character__innerclass__UnicodeScript__Instance
	BASSA_VAH              Java__lang__Character__innerclass__UnicodeScript__Instance
	BATAK                  Java__lang__Character__innerclass__UnicodeScript__Instance
	BENGALI                Java__lang__Character__innerclass__UnicodeScript__Instance
	BOPOMOFO               Java__lang__Character__innerclass__UnicodeScript__Instance
	BRAHMI                 Java__lang__Character__innerclass__UnicodeScript__Instance
	BRAILLE                Java__lang__Character__innerclass__UnicodeScript__Instance
	BUGINESE               Java__lang__Character__innerclass__UnicodeScript__Instance
	BUHID                  Java__lang__Character__innerclass__UnicodeScript__Instance
	CANADIAN_ABORIGINAL    Java__lang__Character__innerclass__UnicodeScript__Instance
	CARIAN                 Java__lang__Character__innerclass__UnicodeScript__Instance
	CAUCASIAN_ALBANIAN     Java__lang__Character__innerclass__UnicodeScript__Instance
	CHAKMA                 Java__lang__Character__innerclass__UnicodeScript__Instance
	CHAM                   Java__lang__Character__innerclass__UnicodeScript__Instance
	CHEROKEE               Java__lang__Character__innerclass__UnicodeScript__Instance
	COMMON                 Java__lang__Character__innerclass__UnicodeScript__Instance
	COPTIC                 Java__lang__Character__innerclass__UnicodeScript__Instance
	CUNEIFORM              Java__lang__Character__innerclass__UnicodeScript__Instance
	CYPRIOT                Java__lang__Character__innerclass__UnicodeScript__Instance
	CYRILLIC               Java__lang__Character__innerclass__UnicodeScript__Instance
	DESERET                Java__lang__Character__innerclass__UnicodeScript__Instance
	DEVANAGARI             Java__lang__Character__innerclass__UnicodeScript__Instance
	DUPLOYAN               Java__lang__Character__innerclass__UnicodeScript__Instance
	EGYPTIAN_HIEROGLYPHS   Java__lang__Character__innerclass__UnicodeScript__Instance
	ELBASAN                Java__lang__Character__innerclass__UnicodeScript__Instance
	ETHIOPIC               Java__lang__Character__innerclass__UnicodeScript__Instance
	GEORGIAN               Java__lang__Character__innerclass__UnicodeScript__Instance
	GLAGOLITIC             Java__lang__Character__innerclass__UnicodeScript__Instance
	GOTHIC                 Java__lang__Character__innerclass__UnicodeScript__Instance
	GRANTHA                Java__lang__Character__innerclass__UnicodeScript__Instance
	GREEK                  Java__lang__Character__innerclass__UnicodeScript__Instance
	GUJARATI               Java__lang__Character__innerclass__UnicodeScript__Instance
	GURMUKHI               Java__lang__Character__innerclass__UnicodeScript__Instance
	HAN                    Java__lang__Character__innerclass__UnicodeScript__Instance
	HANGUL                 Java__lang__Character__innerclass__UnicodeScript__Instance
	HANUNOO                Java__lang__Character__innerclass__UnicodeScript__Instance
	HATRAN                 Java__lang__Character__innerclass__UnicodeScript__Instance
	HEBREW                 Java__lang__Character__innerclass__UnicodeScript__Instance
	HIRAGANA               Java__lang__Character__innerclass__UnicodeScript__Instance
	IMPERIAL_ARAMAIC       Java__lang__Character__innerclass__UnicodeScript__Instance
	INHERITED              Java__lang__Character__innerclass__UnicodeScript__Instance
	INSCRIPTIONAL_PAHLAVI  Java__lang__Character__innerclass__UnicodeScript__Instance
	INSCRIPTIONAL_PARTHIAN Java__lang__Character__innerclass__UnicodeScript__Instance
	JAVANESE               Java__lang__Character__innerclass__UnicodeScript__Instance
	KAITHI                 Java__lang__Character__innerclass__UnicodeScript__Instance
	KANNADA                Java__lang__Character__innerclass__UnicodeScript__Instance
	KATAKANA               Java__lang__Character__innerclass__UnicodeScript__Instance
	KAYAH_LI               Java__lang__Character__innerclass__UnicodeScript__Instance
	KHAROSHTHI             Java__lang__Character__innerclass__UnicodeScript__Instance
	KHMER                  Java__lang__Character__innerclass__UnicodeScript__Instance
	KHOJKI                 Java__lang__Character__innerclass__UnicodeScript__Instance
	KHUDAWADI              Java__lang__Character__innerclass__UnicodeScript__Instance
	LAO                    Java__lang__Character__innerclass__UnicodeScript__Instance
	LATIN                  Java__lang__Character__innerclass__UnicodeScript__Instance
	LEPCHA                 Java__lang__Character__innerclass__UnicodeScript__Instance
	LIMBU                  Java__lang__Character__innerclass__UnicodeScript__Instance
	LINEAR_A               Java__lang__Character__innerclass__UnicodeScript__Instance
	LINEAR_B               Java__lang__Character__innerclass__UnicodeScript__Instance
	LISU                   Java__lang__Character__innerclass__UnicodeScript__Instance
	LYCIAN                 Java__lang__Character__innerclass__UnicodeScript__Instance
	LYDIAN                 Java__lang__Character__innerclass__UnicodeScript__Instance
	MAHAJANI               Java__lang__Character__innerclass__UnicodeScript__Instance
	MALAYALAM              Java__lang__Character__innerclass__UnicodeScript__Instance
	MANDAIC                Java__lang__Character__innerclass__UnicodeScript__Instance
	MANICHAEAN             Java__lang__Character__innerclass__UnicodeScript__Instance
	MEETEI_MAYEK           Java__lang__Character__innerclass__UnicodeScript__Instance
	MENDE_KIKAKUI          Java__lang__Character__innerclass__UnicodeScript__Instance
	MEROITIC_CURSIVE       Java__lang__Character__innerclass__UnicodeScript__Instance
	MEROITIC_HIEROGLYPHS   Java__lang__Character__innerclass__UnicodeScript__Instance
	MIAO                   Java__lang__Character__innerclass__UnicodeScript__Instance
	MODI                   Java__lang__Character__innerclass__UnicodeScript__Instance
	MONGOLIAN              Java__lang__Character__innerclass__UnicodeScript__Instance
	MRO                    Java__lang__Character__innerclass__UnicodeScript__Instance
	MULTANI                Java__lang__Character__innerclass__UnicodeScript__Instance
	MYANMAR                Java__lang__Character__innerclass__UnicodeScript__Instance
	NABATAEAN              Java__lang__Character__innerclass__UnicodeScript__Instance
	NEW_TAI_LUE            Java__lang__Character__innerclass__UnicodeScript__Instance
	NKO                    Java__lang__Character__innerclass__UnicodeScript__Instance
	OGHAM                  Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_HUNGARIAN          Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_ITALIC             Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_NORTH_ARABIAN      Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_PERMIC             Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_PERSIAN            Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_SOUTH_ARABIAN      Java__lang__Character__innerclass__UnicodeScript__Instance
	OLD_TURKIC             Java__lang__Character__innerclass__UnicodeScript__Instance
	OL_CHIKI               Java__lang__Character__innerclass__UnicodeScript__Instance
	ORIYA                  Java__lang__Character__innerclass__UnicodeScript__Instance
	OSMANYA                Java__lang__Character__innerclass__UnicodeScript__Instance
	PAHAWH_HMONG           Java__lang__Character__innerclass__UnicodeScript__Instance
	PALMYRENE              Java__lang__Character__innerclass__UnicodeScript__Instance
	PAU_CIN_HAU            Java__lang__Character__innerclass__UnicodeScript__Instance
	PHAGS_PA               Java__lang__Character__innerclass__UnicodeScript__Instance
	PHOENICIAN             Java__lang__Character__innerclass__UnicodeScript__Instance
	PSALTER_PAHLAVI        Java__lang__Character__innerclass__UnicodeScript__Instance
	REJANG                 Java__lang__Character__innerclass__UnicodeScript__Instance
	RUNIC                  Java__lang__Character__innerclass__UnicodeScript__Instance
	SAMARITAN              Java__lang__Character__innerclass__UnicodeScript__Instance
	SAURASHTRA             Java__lang__Character__innerclass__UnicodeScript__Instance
	SHARADA                Java__lang__Character__innerclass__UnicodeScript__Instance
	SHAVIAN                Java__lang__Character__innerclass__UnicodeScript__Instance
	SIDDHAM                Java__lang__Character__innerclass__UnicodeScript__Instance
	SIGNWRITING            Java__lang__Character__innerclass__UnicodeScript__Instance
	SINHALA                Java__lang__Character__innerclass__UnicodeScript__Instance
	SORA_SOMPENG           Java__lang__Character__innerclass__UnicodeScript__Instance
	SUNDANESE              Java__lang__Character__innerclass__UnicodeScript__Instance
	SYLOTI_NAGRI           Java__lang__Character__innerclass__UnicodeScript__Instance
	SYRIAC                 Java__lang__Character__innerclass__UnicodeScript__Instance
	TAGALOG                Java__lang__Character__innerclass__UnicodeScript__Instance
	TAGBANWA               Java__lang__Character__innerclass__UnicodeScript__Instance
	TAI_LE                 Java__lang__Character__innerclass__UnicodeScript__Instance
	TAI_THAM               Java__lang__Character__innerclass__UnicodeScript__Instance
	TAI_VIET               Java__lang__Character__innerclass__UnicodeScript__Instance
	TAKRI                  Java__lang__Character__innerclass__UnicodeScript__Instance
	TAMIL                  Java__lang__Character__innerclass__UnicodeScript__Instance
	TELUGU                 Java__lang__Character__innerclass__UnicodeScript__Instance
	THAANA                 Java__lang__Character__innerclass__UnicodeScript__Instance
	THAI                   Java__lang__Character__innerclass__UnicodeScript__Instance
	TIBETAN                Java__lang__Character__innerclass__UnicodeScript__Instance
	TIFINAGH               Java__lang__Character__innerclass__UnicodeScript__Instance
	TIRHUTA                Java__lang__Character__innerclass__UnicodeScript__Instance
	UGARITIC               Java__lang__Character__innerclass__UnicodeScript__Instance
	UNKNOWN                Java__lang__Character__innerclass__UnicodeScript__Instance
	VAI                    Java__lang__Character__innerclass__UnicodeScript__Instance
	WARANG_CITI            Java__lang__Character__innerclass__UnicodeScript__Instance
	YI                     Java__lang__Character__innerclass__UnicodeScript__Instance
	init                   sync.Once
}

var Java__lang__Character__innerclass__UnicodeScript__Var Java__lang__Character__innerclass__UnicodeScript__Static

func Java__lang__Character__innerclass__UnicodeScript() *Java__lang__Character__innerclass__UnicodeScript__Static {
	Java__lang__Character__innerclass__UnicodeScript__Var.init.Do(Java__lang__Character__innerclass__UnicodeScript__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Character__innerclass__UnicodeScript__Var
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) New() *Java__lang__Character__innerclass__UnicodeScript__Impl {
	v := &Java__lang__Character__innerclass__UnicodeScript__Impl{
		Java__lang__Enum__Impl: Java__lang__Enum().New(),
	}
	v.Java__lang__Character__innerclass__UnicodeScript__InitDispatch(v)
	return v
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) Impl__ForName__desc____obj__Java__lang__String__ret____obj__Java__lang__Character__innerclass__UnicodeScript(var0 Java__lang__String__Instance) Java__lang__Character__innerclass__UnicodeScript__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeScript.forName(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;")
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) Impl__Of__desc__I__ret____obj__Java__lang__Character__innerclass__UnicodeScript(var0 int) Java__lang__Character__innerclass__UnicodeScript__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeScript.of(I)Ljava/lang/Character$UnicodeScript;")
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Character__innerclass__UnicodeScript(var0 Java__lang__String__Instance) Java__lang__Character__innerclass__UnicodeScript__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeScript.valueOf(Ljava/lang/String;)Ljava/lang/Character$UnicodeScript;")
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Static) Impl__Values__desc____ret____arr____obj__Java__lang__Character__innerclass__UnicodeScript() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Character$UnicodeScript.values()[Ljava/lang/Character$UnicodeScript;")
}

type Java__lang__Character__innerclass__UnicodeScript__Dispatch interface {
	Java__lang__Enum__Dispatch
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Impl) Java__lang__Character__innerclass__UnicodeScript__InitDispatch(v Java__lang__Character__innerclass__UnicodeScript__Dispatch) {
	this.Java__lang__Enum__Impl.Java__lang__Enum__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Character__innerclass__UnicodeScript__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	CompareTo__desc____obj__Java__lang__Enum__ret__I(Java__lang__Enum__Instance) int
	Ordinal__desc____ret__I() int
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Name__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Character__innerclass__UnicodeScript() *Java__lang__Character__innerclass__UnicodeScript__Impl
	RawPtr__Java__lang__Enum() *Java__lang__Enum__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__innerclass__UnicodeScript__Impl struct {
	*Java__lang__Enum__Impl
	_dispatch Java__lang__Character__innerclass__UnicodeScript__Dispatch
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Impl) RawPtr__Java__lang__Character__innerclass__UnicodeScript() *Java__lang__Character__innerclass__UnicodeScript__Impl {
	return this
}

func (this *Java__lang__Character__innerclass__UnicodeScript__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__Static struct {
	init sync.Once
}

var Java__lang__Class__Var Java__lang__Class__Static

func Java__lang__Class() *Java__lang__Class__Static {
	Java__lang__Class__Var.init.Do(Java__lang__Class__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Class__Var
}

func (this *Java__lang__Class__Static) New() *Java__lang__Class__Impl {
	v := &Java__lang__Class__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__InitDispatch(v)
	return v
}

func (this *Java__lang__Class__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Class__Static) Impl__PrivTo__Java__lang__Access__dollar__300__desc____arr____obj__Java__lang__Object____arr____obj__Java__lang__Object__ret__Z(var0 ObjectArray__Instance, var1 ObjectArray__Instance) bool {
	panic("Method not implemented - java/lang/Class.access$300([Ljava/lang/Object;[Ljava/lang/Object;)Z")
}

func (this *Java__lang__Class__Static) Impl__PrivTo__Java__lang__Access__dollar__402__desc__Z__ret__Z(var0 bool) bool {
	panic("Method not implemented - java/lang/Class.access$402(Z)Z")
}

func (this *Java__lang__Class__Static) Impl__PrivTo__Java__lang__Access__dollar__502__desc__Z__ret__Z(var0 bool) bool {
	panic("Method not implemented - java/lang/Class.access$502(Z)Z")
}

func (this *Java__lang__Class__Static) Impl__ForName__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.forName(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Static) Impl__ForName__desc____obj__Java__lang__String__Z____obj__Java__lang__ClassLoader__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool, var2 Java__lang__ClassLoader__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Static) Impl__PrivTo__Java__lang__GetPrimitiveClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;")
}

type Java__lang__Class__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(Java__lang__Class__Instance) Java__lang__Class__Instance
	Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Impl__DesiredAssertionStatus__desc____ret__Z() bool
	Impl__PrivTo__Java__lang__EnumConstantDirectory__desc____ret____obj__Java__util__Map() Java__util__Map__Instance
	Impl__GetAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance
	Impl__GetAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance
	Impl__GetAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) ObjectArray__Instance
	Impl__GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__PrivTo__Java__lang__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetDeclaredAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance
	Impl__PrivTo__Java__lang__GetDeclaredAnnotationMap__desc____ret____obj__Java__util__Map() Java__util__Map__Instance
	Impl__GetDeclaredAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance
	Impl__GetDeclaredAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) ObjectArray__Instance
	Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__PrivTo__Java__lang__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance
	Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance
	Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetModifiers__desc____ret__I() int
	Impl__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetPackageName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__PrivTo__Java__lang__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance
	Impl__PrivTo__Java__lang__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance
	Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__IsAnnotation__desc____ret__Z() bool
	Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	Impl__IsAnonymousClass__desc____ret__Z() bool
	Impl__IsArray__desc____ret__Z() bool
	Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	Impl__IsEnum__desc____ret__Z() bool
	Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__IsInterface__desc____ret__Z() bool
	Impl__IsLocalClass__desc____ret__Z() bool
	Impl__IsMemberClass__desc____ret__Z() bool
	Impl__IsPrimitive__desc____ret__Z() bool
	Impl__IsSynthetic__desc____ret__Z() bool
	Impl__NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__PrivTo__Java__lang__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(ObjectArray__Instance)
	Impl__ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__Class__Impl) Java__lang__Class__InitDispatch(v Java__lang__Class__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__Impl) AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0 Java__lang__Class__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__Class__Impl) Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0)
}

func (this *Java__lang__Class__Impl) DesiredAssertionStatus__desc____ret__Z() bool {
	return this._dispatch.Impl__DesiredAssertionStatus__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__EnumConstantDirectory__desc____ret____obj__Java__util__Map() Java__util__Map__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__EnumConstantDirectory__desc____ret____obj__Java__util__Map()
}

func (this *Java__lang__Class__Impl) GetAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance {
	return this._dispatch.Impl__GetAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0)
}

func (this *Java__lang__Class__Impl) GetAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance {
	return this._dispatch.Impl__GetAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation()
}

func (this *Java__lang__Class__Impl) GetAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	return this._dispatch.Impl__GetAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0)
}

func (this *Java__lang__Class__Impl) GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetCanonicalName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__Class__Impl) GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetComponentType__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetDeclaredAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance {
	return this._dispatch.Impl__GetDeclaredAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0)
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__GetDeclaredAnnotationMap__desc____ret____obj__Java__util__Map() Java__util__Map__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetDeclaredAnnotationMap__desc____ret____obj__Java__util__Map()
}

func (this *Java__lang__Class__Impl) GetDeclaredAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance {
	return this._dispatch.Impl__GetDeclaredAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation()
}

func (this *Java__lang__Class__Impl) GetDeclaredAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	return this._dispatch.Impl__GetDeclaredAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0)
}

func (this *Java__lang__Class__Impl) GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance {
	return this._dispatch.Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type()
}

func (this *Java__lang__Class__Impl) GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance {
	return this._dispatch.Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type()
}

func (this *Java__lang__Class__Impl) GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetModifiers__desc____ret__I() int {
	return this._dispatch.Impl__GetModifiers__desc____ret__I()
}

func (this *Java__lang__Class__Impl) GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetPackageName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetPackageName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetRawAnnotations__desc____ret____arr__B()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetRawTypeAnnotations__desc____ret____arr__B()
}

func (this *Java__lang__Class__Impl) GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetSimpleName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetSuperclass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetTypeName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) IsAnnotation__desc____ret__Z() bool {
	return this._dispatch.Impl__IsAnnotation__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	return this._dispatch.Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsAnonymousClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsAnonymousClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsArray__desc____ret__Z() bool {
	return this._dispatch.Impl__IsArray__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	return this._dispatch.Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsEnum__desc____ret__Z() bool {
	return this._dispatch.Impl__IsEnum__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsInstance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsInterface__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInterface__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsLocalClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsLocalClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsMemberClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsMemberClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsPrimitive__desc____ret__Z() bool {
	return this._dispatch.Impl__IsPrimitive__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsSynthetic__desc____ret__Z() bool {
	return this._dispatch.Impl__IsSynthetic__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__NewInstance__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) PrivTo__Java__lang__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0 ObjectArray__Instance) {
	this._dispatch.Impl__PrivTo__Java__lang__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__Class__Impl) ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToGenericString__desc____ret____obj__Java__lang__String()
}

type Java__lang__Class__Instance interface {
	GetAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance
	GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	PrivTo__Java__lang__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(ObjectArray__Instance)
	Finalize__desc____ret__V()
	GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	PrivTo__Java__lang__GetDeclaredAnnotationMap__desc____ret____obj__Java__util__Map() Java__util__Map__Instance
	IsEnum__desc____ret__Z() bool
	GetAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance
	GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	PrivTo__Java__lang__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance
	GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	GetDeclaredAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance
	IsAnonymousClass__desc____ret__Z() bool
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	IsInstance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	IsInterface__desc____ret__Z() bool
	GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(Java__lang__Class__Instance) Java__lang__Class__Instance
	Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	IsAnnotation__desc____ret__Z() bool
	GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) ObjectArray__Instance
	IsSynthetic__desc____ret__Z() bool
	GetModifiers__desc____ret__I() int
	IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	PrivTo__Java__lang__EnumConstantDirectory__desc____ret____obj__Java__util__Map() Java__util__Map__Instance
	GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	IsLocalClass__desc____ret__Z() bool
	GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance
	IsArray__desc____ret__Z() bool
	PrivTo__Java__lang__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance
	IsMemberClass__desc____ret__Z() bool
	Wait__desc__J__I__ret__V(int64, int)
	GetDeclaredAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(Java__lang__Class__Instance) ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	GetDeclaredAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance
	GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Notify__desc____ret__V()
	DesiredAssertionStatus__desc____ret__Z() bool
	GetPackageName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsPrimitive__desc____ret__Z() bool
	GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	PrivTo__Java__lang__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	PrivTo__Java__lang__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	FieldGet__Java__lang__Class__ClassValueMap() Java__lang__ClassValue__innerclass__ClassValueMap__Instance
	FieldSet__Java__lang__Class__ClassValueMap(v Java__lang__ClassValue__innerclass__ClassValueMap__Instance)
	RawPtr__Java__lang__Class() *Java__lang__Class__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__Impl struct {
	*Java__lang__Object__Impl
	_dispatch     Java__lang__Class__Dispatch
	ClassValueMap Java__lang__ClassValue__innerclass__ClassValueMap__Instance
}

func (this *Java__lang__Class__Impl) FieldGet__Java__lang__Class__ClassValueMap() Java__lang__ClassValue__innerclass__ClassValueMap__Instance {
	return this.ClassValueMap
}

func (this *Java__lang__Class__Impl) FieldSet__Java__lang__Class__ClassValueMap(v Java__lang__ClassValue__innerclass__ClassValueMap__Instance) {
	this.ClassValueMap = v
}

func (this *Java__lang__Class__Impl) Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0 Java__lang__Class__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.asSubclass(Ljava/lang/Class;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Class.cast(Ljava/lang/Object;)Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__DesiredAssertionStatus__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.desiredAssertionStatus()Z")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__EnumConstantDirectory__desc____ret____obj__Java__util__Map() Java__util__Map__Instance {
	panic("Method not implemented - java/lang/Class.enumConstantDirectory()Ljava/util/Map;")
}

func (this *Java__lang__Class__Impl) Impl__GetAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance {
	panic("Method not implemented - java/lang/Class.getAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__GetAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getAnnotations()[Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__GetAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.getCanonicalName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/Class.getClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__Class__Impl) Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getClasses()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.getComponentType()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaredAnnotation__desc____obj__Java__lang__Class__ret____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) Java__lang__annotation__Annotation__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaredAnnotation(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__GetDeclaredAnnotationMap__desc____ret____obj__Java__util__Map() Java__util__Map__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaredAnnotationMap()Ljava/util/Map;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaredAnnotations__desc____ret____arr____obj__Java__lang__annotation__Annotation() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaredAnnotations()[Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaredAnnotationsByType__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__annotation__Annotation(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaredAnnotationsByType(Ljava/lang/Class;)[Ljava/lang/annotation/Annotation;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaredClasses()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.getDeclaringClass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.getEnclosingClass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getEnumConstants()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getEnumConstantsShared()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getGenericInterfaces()[Ljava/lang/reflect/Type;")
}

func (this *Java__lang__Class__Impl) Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance {
	panic("Method not implemented - java/lang/Class.getGenericSuperclass()Ljava/lang/reflect/Type;")
}

func (this *Java__lang__Class__Impl) Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getInterfaces()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetModifiers__desc____ret__I() int {
	panic("Method not implemented - java/lang/Class.getModifiers()I")
}

func (this *Java__lang__Class__Impl) Impl__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.getName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetPackageName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.getPackageName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance {
	panic("Method not implemented - java/lang/Class.getRawAnnotations()[B")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance {
	panic("Method not implemented - java/lang/Class.getRawTypeAnnotations()[B")
}

func (this *Java__lang__Class__Impl) Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class.getSigners()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.getSimpleName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class.getSuperclass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.getTypeName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__IsAnnotation__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isAnnotation()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Method not implemented - java/lang/Class.isAnnotationPresent(Ljava/lang/Class;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAnonymousClass__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isAnonymousClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsArray__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isArray()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Method not implemented - java/lang/Class.isAssignableFrom(Ljava/lang/Class;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsEnum__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isEnum()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Class.isInstance(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsInterface__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isInterface()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsLocalClass__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isLocalClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsMemberClass__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isMemberClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsPrimitive__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isPrimitive()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsSynthetic__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class.isSynthetic()Z")
}

func (this *Java__lang__Class__Impl) Impl__NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Class.newInstance()Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__PrivTo__Java__lang__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0 ObjectArray__Instance) {
	panic("Method not implemented - java/lang/Class.setSigners([Ljava/lang/Object;)V")
}

func (this *Java__lang__Class__Impl) Impl__ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.toGenericString()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class.toString()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) RawPtr__Java__lang__Class() *Java__lang__Class__Impl {
	return this
}

func (this *Java__lang__Class__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__1__Static struct{}

var Java__lang__Class__innerclass__1__Var Java__lang__Class__innerclass__1__Static

func Java__lang__Class__innerclass__1() *Java__lang__Class__innerclass__1__Static {
	return &Java__lang__Class__innerclass__1__Var
}

func (this *Java__lang__Class__innerclass__1__Static) New() *Java__lang__Class__innerclass__1__Impl {
	v := &Java__lang__Class__innerclass__1__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__1__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__1__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
}

func (this *Java__lang__Class__innerclass__1__Impl) Java__lang__Class__innerclass__1__InitDispatch(v Java__lang__Class__innerclass__1__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__1__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__innerclass__1__Impl) Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Void()
}

type Java__lang__Class__innerclass__1__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__1__This__dollar__0() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__1__This__dollar__0(v Java__lang__Class__Instance)
	RawPtr__Java__lang__Class__innerclass__1() *Java__lang__Class__innerclass__1__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__1__Impl struct {
	*Java__lang__Object__Impl
	_dispatch       Java__lang__Class__innerclass__1__Dispatch
	This__dollar__0 Java__lang__Class__Instance
}

func (this *Java__lang__Class__innerclass__1__Impl) FieldGet__Java__lang__Class__innerclass__1__This__dollar__0() Java__lang__Class__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__Class__innerclass__1__Impl) FieldSet__Java__lang__Class__innerclass__1__This__dollar__0(v Java__lang__Class__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__Class__innerclass__1__Impl) Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	panic("Method not implemented - java/lang/Class$1.run()Ljava/lang/Void;")
}

func (this *Java__lang__Class__innerclass__1__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____obj__Java__lang__Void()
}

func (this *Java__lang__Class__innerclass__1__Impl) RawPtr__Java__lang__Class__innerclass__1() *Java__lang__Class__innerclass__1__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__1__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__2__Static struct{}

var Java__lang__Class__innerclass__2__Var Java__lang__Class__innerclass__2__Static

func Java__lang__Class__innerclass__2() *Java__lang__Class__innerclass__2__Static {
	return &Java__lang__Class__innerclass__2__Var
}

func (this *Java__lang__Class__innerclass__2__Static) New() *Java__lang__Class__innerclass__2__Impl {
	v := &Java__lang__Class__innerclass__2__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__2__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__2__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance, Java__lang__Class__Instance)
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
}

func (this *Java__lang__Class__innerclass__2__Impl) Java__lang__Class__innerclass__2__InitDispatch(v Java__lang__Class__innerclass__2__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__2__Impl) Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__Class__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0, var1)
}

func (this *Java__lang__Class__innerclass__2__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

type Java__lang__Class__innerclass__2__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__2__This__dollar__0() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__2__This__dollar__0(v Java__lang__Class__Instance)
	FieldGet__Java__lang__Class__innerclass__2__Val__dollar__enclosingCandidate() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__2__Val__dollar__enclosingCandidate(v Java__lang__Class__Instance)
	RawPtr__Java__lang__Class__innerclass__2() *Java__lang__Class__innerclass__2__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__2__Impl struct {
	*Java__lang__Object__Impl
	_dispatch                       Java__lang__Class__innerclass__2__Dispatch
	This__dollar__0                 Java__lang__Class__Instance
	Val__dollar__enclosingCandidate Java__lang__Class__Instance
}

func (this *Java__lang__Class__innerclass__2__Impl) FieldGet__Java__lang__Class__innerclass__2__This__dollar__0() Java__lang__Class__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__Class__innerclass__2__Impl) FieldSet__Java__lang__Class__innerclass__2__This__dollar__0(v Java__lang__Class__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__Class__innerclass__2__Impl) FieldGet__Java__lang__Class__innerclass__2__Val__dollar__enclosingCandidate() Java__lang__Class__Instance {
	return this.Val__dollar__enclosingCandidate
}

func (this *Java__lang__Class__innerclass__2__Impl) FieldSet__Java__lang__Class__innerclass__2__Val__dollar__enclosingCandidate(v Java__lang__Class__Instance) {
	this.Val__dollar__enclosingCandidate = v
}

func (this *Java__lang__Class__innerclass__2__Impl) Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/Class$2.<init>(Ljava/lang/Class;Ljava/lang/Class;)V")
}

func (this *Java__lang__Class__innerclass__2__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Class$2.run()Ljava/lang/Object;")
}

func (this *Java__lang__Class__innerclass__2__Impl) RawPtr__Java__lang__Class__innerclass__2() *Java__lang__Class__innerclass__2__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__2__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__3__Static struct{}

var Java__lang__Class__innerclass__3__Var Java__lang__Class__innerclass__3__Static

func Java__lang__Class__innerclass__3() *Java__lang__Class__innerclass__3__Static {
	return &Java__lang__Class__innerclass__3__Var
}

func (this *Java__lang__Class__innerclass__3__Static) New() *Java__lang__Class__innerclass__3__Impl {
	v := &Java__lang__Class__innerclass__3__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__3__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__3__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance, Java__lang__Class__Instance)
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
}

func (this *Java__lang__Class__innerclass__3__Impl) Java__lang__Class__innerclass__3__InitDispatch(v Java__lang__Class__innerclass__3__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__3__Impl) Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__Class__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0, var1)
}

func (this *Java__lang__Class__innerclass__3__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

type Java__lang__Class__innerclass__3__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__3__This__dollar__0() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__3__This__dollar__0(v Java__lang__Class__Instance)
	FieldGet__Java__lang__Class__innerclass__3__Val__dollar__enclosingCandidate() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__3__Val__dollar__enclosingCandidate(v Java__lang__Class__Instance)
	RawPtr__Java__lang__Class__innerclass__3() *Java__lang__Class__innerclass__3__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__3__Impl struct {
	*Java__lang__Object__Impl
	_dispatch                       Java__lang__Class__innerclass__3__Dispatch
	This__dollar__0                 Java__lang__Class__Instance
	Val__dollar__enclosingCandidate Java__lang__Class__Instance
}

func (this *Java__lang__Class__innerclass__3__Impl) FieldGet__Java__lang__Class__innerclass__3__This__dollar__0() Java__lang__Class__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__Class__innerclass__3__Impl) FieldSet__Java__lang__Class__innerclass__3__This__dollar__0(v Java__lang__Class__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__Class__innerclass__3__Impl) FieldGet__Java__lang__Class__innerclass__3__Val__dollar__enclosingCandidate() Java__lang__Class__Instance {
	return this.Val__dollar__enclosingCandidate
}

func (this *Java__lang__Class__innerclass__3__Impl) FieldSet__Java__lang__Class__innerclass__3__Val__dollar__enclosingCandidate(v Java__lang__Class__Instance) {
	this.Val__dollar__enclosingCandidate = v
}

func (this *Java__lang__Class__innerclass__3__Impl) Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/Class$3.<init>(Ljava/lang/Class;Ljava/lang/Class;)V")
}

func (this *Java__lang__Class__innerclass__3__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Class$3.run()Ljava/lang/Object;")
}

func (this *Java__lang__Class__innerclass__3__Impl) RawPtr__Java__lang__Class__innerclass__3() *Java__lang__Class__innerclass__3__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__3__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__4__Static struct{}

var Java__lang__Class__innerclass__4__Var Java__lang__Class__innerclass__4__Static

func Java__lang__Class__innerclass__4() *Java__lang__Class__innerclass__4__Static {
	return &Java__lang__Class__innerclass__4__Var
}

func (this *Java__lang__Class__innerclass__4__Static) New() *Java__lang__Class__innerclass__4__Impl {
	v := &Java__lang__Class__innerclass__4__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__4__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__4__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
}

func (this *Java__lang__Class__innerclass__4__Impl) Java__lang__Class__innerclass__4__InitDispatch(v Java__lang__Class__innerclass__4__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__4__Impl) Instance_Init__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Class__ret__V(var0)
}

func (this *Java__lang__Class__innerclass__4__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__innerclass__4__Impl) Run__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__Run__desc____ret____arr____obj__Java__lang__Class()
}

type Java__lang__Class__innerclass__4__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Run__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__4__This__dollar__0() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__4__This__dollar__0(v Java__lang__Class__Instance)
	RawPtr__Java__lang__Class__innerclass__4() *Java__lang__Class__innerclass__4__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__4__Impl struct {
	*Java__lang__Object__Impl
	_dispatch       Java__lang__Class__innerclass__4__Dispatch
	This__dollar__0 Java__lang__Class__Instance
}

func (this *Java__lang__Class__innerclass__4__Impl) FieldGet__Java__lang__Class__innerclass__4__This__dollar__0() Java__lang__Class__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__Class__innerclass__4__Impl) FieldSet__Java__lang__Class__innerclass__4__This__dollar__0(v Java__lang__Class__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__Class__innerclass__4__Impl) Impl__Instance_Init__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/Class$4.<init>(Ljava/lang/Class;)V")
}

func (this *Java__lang__Class__innerclass__4__Impl) Impl__Run__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Class$4.run()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__innerclass__4__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__innerclass__4__Impl) RawPtr__Java__lang__Class__innerclass__4() *Java__lang__Class__innerclass__4__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__4__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__5__Static struct{}

var Java__lang__Class__innerclass__5__Var Java__lang__Class__innerclass__5__Static

func Java__lang__Class__innerclass__5() *Java__lang__Class__innerclass__5__Static {
	return &Java__lang__Class__innerclass__5__Var
}

func (this *Java__lang__Class__innerclass__5__Static) New() *Java__lang__Class__innerclass__5__Impl {
	v := &Java__lang__Class__innerclass__5__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__5__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__5__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
}

func (this *Java__lang__Class__innerclass__5__Impl) Java__lang__Class__innerclass__5__InitDispatch(v Java__lang__Class__innerclass__5__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__5__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__innerclass__5__Impl) Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Void()
}

type Java__lang__Class__innerclass__5__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Class__innerclass__5() *Java__lang__Class__innerclass__5__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__5__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Class__innerclass__5__Dispatch
}

func (this *Java__lang__Class__innerclass__5__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Class$5.<init>()V")
}

func (this *Java__lang__Class__innerclass__5__Impl) Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	panic("Method not implemented - java/lang/Class$5.run()Ljava/lang/Void;")
}

func (this *Java__lang__Class__innerclass__5__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____obj__Java__lang__Void()
}

func (this *Java__lang__Class__innerclass__5__Impl) RawPtr__Java__lang__Class__innerclass__5() *Java__lang__Class__innerclass__5__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__5__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__6__Static struct{}

var Java__lang__Class__innerclass__6__Var Java__lang__Class__innerclass__6__Static

func Java__lang__Class__innerclass__6() *Java__lang__Class__innerclass__6__Static {
	return &Java__lang__Class__innerclass__6__Var
}

func (this *Java__lang__Class__innerclass__6__Static) New() *Java__lang__Class__innerclass__6__Impl {
	v := &Java__lang__Class__innerclass__6__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__6__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__6__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
}

func (this *Java__lang__Class__innerclass__6__Impl) Java__lang__Class__innerclass__6__InitDispatch(v Java__lang__Class__innerclass__6__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__6__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__innerclass__6__Impl) Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Void()
}

type Java__lang__Class__innerclass__6__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__6__This__dollar__0() Java__lang__Class__Instance
	FieldSet__Java__lang__Class__innerclass__6__This__dollar__0(v Java__lang__Class__Instance)
	RawPtr__Java__lang__Class__innerclass__6() *Java__lang__Class__innerclass__6__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__6__Impl struct {
	*Java__lang__Object__Impl
	_dispatch       Java__lang__Class__innerclass__6__Dispatch
	This__dollar__0 Java__lang__Class__Instance
}

func (this *Java__lang__Class__innerclass__6__Impl) FieldGet__Java__lang__Class__innerclass__6__This__dollar__0() Java__lang__Class__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__Class__innerclass__6__Impl) FieldSet__Java__lang__Class__innerclass__6__This__dollar__0(v Java__lang__Class__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__Class__innerclass__6__Impl) Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	panic("Method not implemented - java/lang/Class$6.run()Ljava/lang/Void;")
}

func (this *Java__lang__Class__innerclass__6__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____obj__Java__lang__Void()
}

func (this *Java__lang__Class__innerclass__6__Impl) RawPtr__Java__lang__Class__innerclass__6() *Java__lang__Class__innerclass__6__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__6__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__AnnotationData__Static struct{}

var Java__lang__Class__innerclass__AnnotationData__Var Java__lang__Class__innerclass__AnnotationData__Static

func Java__lang__Class__innerclass__AnnotationData() *Java__lang__Class__innerclass__AnnotationData__Static {
	return &Java__lang__Class__innerclass__AnnotationData__Var
}

func (this *Java__lang__Class__innerclass__AnnotationData__Static) New() *Java__lang__Class__innerclass__AnnotationData__Impl {
	v := &Java__lang__Class__innerclass__AnnotationData__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__AnnotationData__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__AnnotationData__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__util__Map____obj__Java__util__Map__I__ret__V(Java__util__Map__Instance, Java__util__Map__Instance, int)
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) Java__lang__Class__innerclass__AnnotationData__InitDispatch(v Java__lang__Class__innerclass__AnnotationData__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) Instance_Init__desc____obj__Java__util__Map____obj__Java__util__Map__I__ret__V(var0 Java__util__Map__Instance, var1 Java__util__Map__Instance, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__util__Map____obj__Java__util__Map__I__ret__V(var0, var1, var2)
}

type Java__lang__Class__innerclass__AnnotationData__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__AnnotationData__Annotations() Java__util__Map__Instance
	FieldSet__Java__lang__Class__innerclass__AnnotationData__Annotations(v Java__util__Map__Instance)
	FieldGet__Java__lang__Class__innerclass__AnnotationData__DeclaredAnnotations() Java__util__Map__Instance
	FieldSet__Java__lang__Class__innerclass__AnnotationData__DeclaredAnnotations(v Java__util__Map__Instance)
	FieldGet__Java__lang__Class__innerclass__AnnotationData__RedefinedCount() int
	FieldSet__Java__lang__Class__innerclass__AnnotationData__RedefinedCount(v int)
	RawPtr__Java__lang__Class__innerclass__AnnotationData() *Java__lang__Class__innerclass__AnnotationData__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__AnnotationData__Impl struct {
	*Java__lang__Object__Impl
	_dispatch           Java__lang__Class__innerclass__AnnotationData__Dispatch
	Annotations         Java__util__Map__Instance
	DeclaredAnnotations Java__util__Map__Instance
	RedefinedCount      int
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldGet__Java__lang__Class__innerclass__AnnotationData__Annotations() Java__util__Map__Instance {
	return this.Annotations
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldSet__Java__lang__Class__innerclass__AnnotationData__Annotations(v Java__util__Map__Instance) {
	this.Annotations = v
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldGet__Java__lang__Class__innerclass__AnnotationData__DeclaredAnnotations() Java__util__Map__Instance {
	return this.DeclaredAnnotations
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldSet__Java__lang__Class__innerclass__AnnotationData__DeclaredAnnotations(v Java__util__Map__Instance) {
	this.DeclaredAnnotations = v
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldGet__Java__lang__Class__innerclass__AnnotationData__RedefinedCount() int {
	return this.RedefinedCount
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) FieldSet__Java__lang__Class__innerclass__AnnotationData__RedefinedCount(v int) {
	this.RedefinedCount = v
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) Impl__Instance_Init__desc____obj__Java__util__Map____obj__Java__util__Map__I__ret__V(var0 Java__util__Map__Instance, var1 Java__util__Map__Instance, var2 int) {
	panic("Method not implemented - java/lang/Class$AnnotationData.<init>(Ljava/util/Map;Ljava/util/Map;I)V")
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) RawPtr__Java__lang__Class__innerclass__AnnotationData() *Java__lang__Class__innerclass__AnnotationData__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__AnnotationData__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__Atomic__Static struct {
	init sync.Once
}

var Java__lang__Class__innerclass__Atomic__Var Java__lang__Class__innerclass__Atomic__Static

func Java__lang__Class__innerclass__Atomic() *Java__lang__Class__innerclass__Atomic__Static {
	Java__lang__Class__innerclass__Atomic__Var.init.Do(Java__lang__Class__innerclass__Atomic__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Class__innerclass__Atomic__Var
}

func (this *Java__lang__Class__innerclass__Atomic__Static) New() *Java__lang__Class__innerclass__Atomic__Impl {
	v := &Java__lang__Class__innerclass__Atomic__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__Atomic__InitDispatch(v)
	return v
}

func (this *Java__lang__Class__innerclass__Atomic__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Class__innerclass__Atomic__Static) Impl__PrivTo__Java__lang__CasAnnotationData__desc____obj__Java__lang__Class____obj__Java__lang__Class__innerclass__AnnotationData____obj__Java__lang__Class__innerclass__AnnotationData__ret__Z(var0 Java__lang__Class__Instance, var1 Java__lang__Class__innerclass__AnnotationData__Instance, var2 Java__lang__Class__innerclass__AnnotationData__Instance) bool {
	panic("Method not implemented - java/lang/Class$Atomic.casAnnotationData(Ljava/lang/Class;Ljava/lang/Class$AnnotationData;Ljava/lang/Class$AnnotationData;)Z")
}

type Java__lang__Class__innerclass__Atomic__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Class__innerclass__Atomic__Impl) Java__lang__Class__innerclass__Atomic__InitDispatch(v Java__lang__Class__innerclass__Atomic__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Class__innerclass__Atomic__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Class__innerclass__Atomic() *Java__lang__Class__innerclass__Atomic__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__Atomic__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Class__innerclass__Atomic__Dispatch
}

func (this *Java__lang__Class__innerclass__Atomic__Impl) RawPtr__Java__lang__Class__innerclass__Atomic() *Java__lang__Class__innerclass__Atomic__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__Atomic__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__EnclosingMethodInfo__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__Class__innerclass__EnclosingMethodInfo__Var Java__lang__Class__innerclass__EnclosingMethodInfo__Static

func Java__lang__Class__innerclass__EnclosingMethodInfo() *Java__lang__Class__innerclass__EnclosingMethodInfo__Static {
	Java__lang__Class__innerclass__EnclosingMethodInfo__Var.init.Do(Java__lang__Class__innerclass__EnclosingMethodInfo__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Class__innerclass__EnclosingMethodInfo__Var
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Static) New() *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl {
	v := &Java__lang__Class__innerclass__EnclosingMethodInfo__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__EnclosingMethodInfo__InitDispatch(v)
	return v
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Class__innerclass__EnclosingMethodInfo__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____arr____obj__Java__lang__Object____obj__Java__lang__Class__innerclass__1__ret__V(ObjectArray__Instance, Java__lang__Class__innerclass__1__Instance)
	Impl__PrivTo__Java__lang__GetDescriptor__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__PrivTo__Java__lang__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__PrivTo__Java__lang__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__PrivTo__Java__lang__IsConstructor__desc____ret__Z() bool
	Impl__PrivTo__Java__lang__IsMethod__desc____ret__Z() bool
	Impl__PrivTo__Java__lang__IsPartial__desc____ret__Z() bool
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Java__lang__Class__innerclass__EnclosingMethodInfo__InitDispatch(v Java__lang__Class__innerclass__EnclosingMethodInfo__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Instance_Init__desc____arr____obj__Java__lang__Object____obj__Java__lang__Class__innerclass__1__ret__V(var0 ObjectArray__Instance, var1 Java__lang__Class__innerclass__1__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr____obj__Java__lang__Object____obj__Java__lang__Class__innerclass__1__ret__V(var0, var1)
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__GetDescriptor__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetDescriptor__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetEnclosingClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__GetName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__IsConstructor__desc____ret__Z() bool {
	return this._dispatch.Impl__PrivTo__Java__lang__IsConstructor__desc____ret__Z()
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__IsMethod__desc____ret__Z() bool {
	return this._dispatch.Impl__PrivTo__Java__lang__IsMethod__desc____ret__Z()
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) PrivTo__Java__lang__IsPartial__desc____ret__Z() bool {
	return this._dispatch.Impl__PrivTo__Java__lang__IsPartial__desc____ret__Z()
}

type Java__lang__Class__innerclass__EnclosingMethodInfo__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	PrivTo__Java__lang__IsConstructor__desc____ret__Z() bool
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	PrivTo__Java__lang__IsPartial__desc____ret__Z() bool
	PrivTo__Java__lang__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	PrivTo__Java__lang__GetDescriptor__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc__J__I__ret__V(int64, int)
	PrivTo__Java__lang__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	PrivTo__Java__lang__IsMethod__desc____ret__Z() bool
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Class__innerclass__EnclosingMethodInfo() *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__EnclosingMethodInfo__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Class__innerclass__EnclosingMethodInfo__Dispatch
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__Instance_Init__desc____arr____obj__Java__lang__Object____obj__Java__lang__Class__innerclass__1__ret__V(var0 ObjectArray__Instance, var1 Java__lang__Class__innerclass__1__Instance) {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.<init>([Ljava/lang/Object;Ljava/lang/Class$1;)V")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__GetDescriptor__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.getDescriptor()Ljava/lang/String;")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.getEnclosingClass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.getName()Ljava/lang/String;")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__IsConstructor__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.isConstructor()Z")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__IsMethod__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.isMethod()Z")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl__PrivTo__Java__lang__IsPartial__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class$EnclosingMethodInfo.isPartial()Z")
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) RawPtr__Java__lang__Class__innerclass__EnclosingMethodInfo() *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__EnclosingMethodInfo__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__MethodArray__Static struct{}

var Java__lang__Class__innerclass__MethodArray__Var Java__lang__Class__innerclass__MethodArray__Static

func Java__lang__Class__innerclass__MethodArray() *Java__lang__Class__innerclass__MethodArray__Static {
	return &Java__lang__Class__innerclass__MethodArray__Var
}

func (this *Java__lang__Class__innerclass__MethodArray__Static) New() *Java__lang__Class__innerclass__MethodArray__Impl {
	v := &Java__lang__Class__innerclass__MethodArray__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__MethodArray__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__MethodArray__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__PrivTo__Java__lang__AddAll__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(Java__lang__Class__innerclass__MethodArray__Instance)
	Impl__PrivTo__Java__lang__AddAllIfNotPresent__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(Java__lang__Class__innerclass__MethodArray__Instance)
	Impl__PrivTo__Java__lang__CompactAndTrim__desc____ret__V()
	Impl__PrivTo__Java__lang__HasDefaults__desc____ret__Z() bool
	Impl__PrivTo__Java__lang__Length__desc____ret__I() int
	Impl__PrivTo__Java__lang__RemoveLessSpecifics__desc____ret__V()
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Java__lang__Class__innerclass__MethodArray__InitDispatch(v Java__lang__Class__innerclass__MethodArray__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__AddAll__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0 Java__lang__Class__innerclass__MethodArray__Instance) {
	this._dispatch.Impl__PrivTo__Java__lang__AddAll__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0)
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__AddAllIfNotPresent__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0 Java__lang__Class__innerclass__MethodArray__Instance) {
	this._dispatch.Impl__PrivTo__Java__lang__AddAllIfNotPresent__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0)
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__CompactAndTrim__desc____ret__V() {
	this._dispatch.Impl__PrivTo__Java__lang__CompactAndTrim__desc____ret__V()
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__HasDefaults__desc____ret__Z() bool {
	return this._dispatch.Impl__PrivTo__Java__lang__HasDefaults__desc____ret__Z()
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__Length__desc____ret__I() int {
	return this._dispatch.Impl__PrivTo__Java__lang__Length__desc____ret__I()
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) PrivTo__Java__lang__RemoveLessSpecifics__desc____ret__V() {
	this._dispatch.Impl__PrivTo__Java__lang__RemoveLessSpecifics__desc____ret__V()
}

type Java__lang__Class__innerclass__MethodArray__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	PrivTo__Java__lang__Length__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	PrivTo__Java__lang__AddAllIfNotPresent__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(Java__lang__Class__innerclass__MethodArray__Instance)
	PrivTo__Java__lang__HasDefaults__desc____ret__Z() bool
	PrivTo__Java__lang__RemoveLessSpecifics__desc____ret__V()
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	PrivTo__Java__lang__CompactAndTrim__desc____ret__V()
	PrivTo__Java__lang__AddAll__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(Java__lang__Class__innerclass__MethodArray__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Class__innerclass__MethodArray() *Java__lang__Class__innerclass__MethodArray__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__MethodArray__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Class__innerclass__MethodArray__Dispatch
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Class$MethodArray.<init>()V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/Class$MethodArray.<init>(I)V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__AddAll__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0 Java__lang__Class__innerclass__MethodArray__Instance) {
	panic("Method not implemented - java/lang/Class$MethodArray.addAll(Ljava/lang/Class$MethodArray;)V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__AddAllIfNotPresent__desc____obj__Java__lang__Class__innerclass__MethodArray__ret__V(var0 Java__lang__Class__innerclass__MethodArray__Instance) {
	panic("Method not implemented - java/lang/Class$MethodArray.addAllIfNotPresent(Ljava/lang/Class$MethodArray;)V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__CompactAndTrim__desc____ret__V() {
	panic("Method not implemented - java/lang/Class$MethodArray.compactAndTrim()V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__HasDefaults__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Class$MethodArray.hasDefaults()Z")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__Length__desc____ret__I() int {
	panic("Method not implemented - java/lang/Class$MethodArray.length()I")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl__PrivTo__Java__lang__RemoveLessSpecifics__desc____ret__V() {
	panic("Method not implemented - java/lang/Class$MethodArray.removeLessSpecifics()V")
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) RawPtr__Java__lang__Class__innerclass__MethodArray() *Java__lang__Class__innerclass__MethodArray__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__MethodArray__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__innerclass__ReflectionData__Static struct{}

var Java__lang__Class__innerclass__ReflectionData__Var Java__lang__Class__innerclass__ReflectionData__Static

func Java__lang__Class__innerclass__ReflectionData() *Java__lang__Class__innerclass__ReflectionData__Static {
	return &Java__lang__Class__innerclass__ReflectionData__Var
}

func (this *Java__lang__Class__innerclass__ReflectionData__Static) New() *Java__lang__Class__innerclass__ReflectionData__Impl {
	v := &Java__lang__Class__innerclass__ReflectionData__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__innerclass__ReflectionData__InitDispatch(v)
	return v
}

type Java__lang__Class__innerclass__ReflectionData__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) Java__lang__Class__innerclass__ReflectionData__InitDispatch(v Java__lang__Class__innerclass__ReflectionData__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

type Java__lang__Class__innerclass__ReflectionData__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__Class__innerclass__ReflectionData__Interfaces() ObjectArray__Instance
	FieldSet__Java__lang__Class__innerclass__ReflectionData__Interfaces(v ObjectArray__Instance)
	FieldGet__Java__lang__Class__innerclass__ReflectionData__RedefinedCount() int
	FieldSet__Java__lang__Class__innerclass__ReflectionData__RedefinedCount(v int)
	RawPtr__Java__lang__Class__innerclass__ReflectionData() *Java__lang__Class__innerclass__ReflectionData__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__innerclass__ReflectionData__Impl struct {
	*Java__lang__Object__Impl
	_dispatch      Java__lang__Class__innerclass__ReflectionData__Dispatch
	Interfaces     ObjectArray__Instance
	RedefinedCount int
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) FieldGet__Java__lang__Class__innerclass__ReflectionData__Interfaces() ObjectArray__Instance {
	return this.Interfaces
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) FieldSet__Java__lang__Class__innerclass__ReflectionData__Interfaces(v ObjectArray__Instance) {
	this.Interfaces = v
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) FieldGet__Java__lang__Class__innerclass__ReflectionData__RedefinedCount() int {
	return this.RedefinedCount
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) FieldSet__Java__lang__Class__innerclass__ReflectionData__RedefinedCount(v int) {
	this.RedefinedCount = v
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/Class$ReflectionData.<init>(I)V")
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) RawPtr__Java__lang__Class__innerclass__ReflectionData() *Java__lang__Class__innerclass__ReflectionData__Impl {
	return this
}

func (this *Java__lang__Class__innerclass__ReflectionData__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassCastException__Static struct{}

var Java__lang__ClassCastException__Var Java__lang__ClassCastException__Static

func Java__lang__ClassCastException() *Java__lang__ClassCastException__Static {
	return &Java__lang__ClassCastException__Var
}

func (this *Java__lang__ClassCastException__Static) New() *Java__lang__ClassCastException__Impl {
	v := &Java__lang__ClassCastException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__ClassCastException__InitDispatch(v)
	return v
}

type Java__lang__ClassCastException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__ClassCastException__Impl) Java__lang__ClassCastException__InitDispatch(v Java__lang__ClassCastException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__ClassCastException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__ClassCastException() *Java__lang__ClassCastException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassCastException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__ClassCastException__Dispatch
}

func (this *Java__lang__ClassCastException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/ClassCastException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__ClassCastException__Impl) RawPtr__Java__lang__ClassCastException() *Java__lang__ClassCastException__Impl {
	return this
}

func (this *Java__lang__ClassCastException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__ClassLoader__Var Java__lang__ClassLoader__Static

func Java__lang__ClassLoader() *Java__lang__ClassLoader__Static {
	Java__lang__ClassLoader__Var.init.Do(Java__lang__ClassLoader__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__ClassLoader__Var
}

func (this *Java__lang__ClassLoader__Static) New() *Java__lang__ClassLoader__Impl {
	v := &Java__lang__ClassLoader__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__InitDispatch(v)
	return v
}

func (this *Java__lang__ClassLoader__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__CheckClassLoaderPermission__desc____obj__Java__lang__ClassLoader____obj__Java__lang__Class__ret__V(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/ClassLoader.checkClassLoaderPermission(Ljava/lang/ClassLoader;Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__FindBuiltinLib__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findBuiltinLib(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__FindNative__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret__J(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__String__Instance) int64 {
	panic("Method not implemented - java/lang/ClassLoader.findNative(Ljava/lang/ClassLoader;Ljava/lang/String;)J")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__GetBuiltinAppClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getBuiltinAppClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__GetBuiltinPlatformClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getBuiltinPlatformClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__GetClassLoader__desc____obj__Java__lang__Class__ret____obj__Java__lang__ClassLoader(var0 Java__lang__Class__Instance) Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__GetPlatformClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getPlatformClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__GetSystemClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getSystemClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__InitSystemClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.initSystemClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__PrivTo__Java__lang__LoadLibrary__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__String__Instance, var2 bool) {
	panic("Method not implemented - java/lang/ClassLoader.loadLibrary(Ljava/lang/Class;Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Static) Impl__RegisterAsParallelCapable__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/ClassLoader.registerAsParallelCapable()Z")
}

type Java__lang__ClassLoader__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(Java__lang__ClassLoader__Instance)
	Impl__PrivTo__Java__lang__AddClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Impl__ClearAssertionStatus__desc____ret__V()
	Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(Java__lang__String__Instance, ByteArray__Instance, int, int) Java__lang__Class__Instance
	Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(ByteArray__Instance, int, int) Java__lang__Class__Instance
	Impl__PrivTo__Java__lang__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__PrivTo__Java__lang__FindBootstrapClassOrNull__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindClass__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(Java__lang__String__Instance) Java__lang__Object__Instance
	Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__PrivTo__Java__lang__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(Java__lang__ClassLoader__Instance) bool
	Impl__IsParallelCapable__desc____ret__Z() bool
	Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(Java__lang__String__Instance, bool) Java__lang__Class__Instance
	Impl__PrivTo__Java__lang__LoadLocalClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__PrivTo__Java__lang__Packages__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance
	Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Impl__Resources__desc____obj__Java__lang__String__ret____obj__Java__util__stream__Stream(Java__lang__String__Instance) Java__util__stream__Stream__Instance
	Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Impl__SetDefaultAssertionStatus__desc__Z__ret__V(bool)
	Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(Java__lang__Class__Instance, ObjectArray__Instance)
}

func (this *Java__lang__ClassLoader__Impl) Java__lang__ClassLoader__InitDispatch(v Java__lang__ClassLoader__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__ClassLoader__Impl) Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0 Java__lang__ClassLoader__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__AddClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	this._dispatch.Impl__PrivTo__Java__lang__AddClass__desc____obj__Java__lang__Class__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) ClearAssertionStatus__desc____ret__V() {
	this._dispatch.Impl__ClearAssertionStatus__desc____ret__V()
}

func (this *Java__lang__ClassLoader__Impl) DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 ByteArray__Instance, var2 int, var3 int) Java__lang__Class__Instance {
	return this._dispatch.Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0, var1, var2, var3)
}

func (this *Java__lang__ClassLoader__Impl) DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0 ByteArray__Instance, var1 int, var2 int) Java__lang__Class__Instance {
	return this._dispatch.Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0, var1, var2)
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__PrivTo__Java__lang__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__FindBootstrapClassOrNull__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__FindBootstrapClassOrNull__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindClass__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindClass__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__Class(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0 Java__lang__String__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0)
}

func (this *Java__lang__ClassLoader__Impl) GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0 Java__lang__ClassLoader__Instance) bool {
	return this._dispatch.Impl__PrivTo__Java__lang__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0)
}

func (this *Java__lang__ClassLoader__Impl) IsParallelCapable__desc____ret__Z() bool {
	return this._dispatch.Impl__IsParallelCapable__desc____ret__Z()
}

func (this *Java__lang__ClassLoader__Impl) LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool) Java__lang__Class__Instance {
	return this._dispatch.Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__LoadLocalClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__LoadLocalClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) PrivTo__Java__lang__Packages__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__Packages__desc____ret____obj__Java__util__stream__Stream()
}

func (this *Java__lang__ClassLoader__Impl) ResolveClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	this._dispatch.Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) Resources__desc____obj__Java__lang__String__ret____obj__Java__util__stream__Stream(var0 Java__lang__String__Instance) Java__util__stream__Stream__Instance {
	return this._dispatch.Impl__Resources__desc____obj__Java__lang__String__ret____obj__Java__util__stream__Stream(var0)
}

func (this *Java__lang__ClassLoader__Impl) SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) SetDefaultAssertionStatus__desc__Z__ret__V(var0 bool) {
	this._dispatch.Impl__SetDefaultAssertionStatus__desc__Z__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0 Java__lang__Class__Instance, var1 ObjectArray__Instance) {
	this._dispatch.Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0, var1)
}

type Java__lang__ClassLoader__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	PrivTo__Java__lang__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	PrivTo__Java__lang__FindBootstrapClassOrNull__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	PrivTo__Java__lang__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(Java__lang__ClassLoader__Instance) bool
	DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(ByteArray__Instance, int, int) Java__lang__Class__Instance
	Finalize__desc____ret__V()
	FindClass__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__Class__Instance
	SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	ClearAssertionStatus__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	SetDefaultAssertionStatus__desc__Z__ret__V(bool)
	GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(Java__lang__String__Instance) Java__lang__Object__Instance
	PrivTo__Java__lang__AddClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(Java__lang__Class__Instance, ObjectArray__Instance)
	PrivTo__Java__lang__Packages__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance
	FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	ResolveClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Wait__desc__J__ret__V(int64)
	PrivTo__Java__lang__LoadLocalClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Notify__desc____ret__V()
	Resources__desc____obj__Java__lang__String__ret____obj__Java__util__stream__Stream(Java__lang__String__Instance) Java__util__stream__Stream__Instance
	DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(Java__lang__String__Instance, ByteArray__Instance, int, int) Java__lang__Class__Instance
	FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(Java__lang__String__Instance, bool) Java__lang__Class__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsParallelCapable__desc____ret__Z() bool
	FieldGet__Java__lang__ClassLoader__AssertionLock() Java__lang__Object__Instance
	FieldSet__Java__lang__ClassLoader__AssertionLock(v Java__lang__Object__Instance)
	FieldGet__Java__lang__ClassLoader__ClassAssertionStatus() Java__util__Map__Instance
	FieldSet__Java__lang__ClassLoader__ClassAssertionStatus(v Java__util__Map__Instance)
	RawPtr__Java__lang__ClassLoader() *Java__lang__ClassLoader__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__Impl struct {
	*Java__lang__Object__Impl
	_dispatch            Java__lang__ClassLoader__Dispatch
	AssertionLock        Java__lang__Object__Instance
	ClassAssertionStatus Java__util__Map__Instance
}

func (this *Java__lang__ClassLoader__Impl) FieldGet__Java__lang__ClassLoader__AssertionLock() Java__lang__Object__Instance {
	return this.AssertionLock
}

func (this *Java__lang__ClassLoader__Impl) FieldSet__Java__lang__ClassLoader__AssertionLock(v Java__lang__Object__Instance) {
	this.AssertionLock = v
}

func (this *Java__lang__ClassLoader__Impl) FieldGet__Java__lang__ClassLoader__ClassAssertionStatus() Java__util__Map__Instance {
	return this.ClassAssertionStatus
}

func (this *Java__lang__ClassLoader__Impl) FieldSet__Java__lang__ClassLoader__ClassAssertionStatus(v Java__util__Map__Instance) {
	this.ClassAssertionStatus = v
}

func (this *Java__lang__ClassLoader__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/ClassLoader.<init>()V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0 Java__lang__ClassLoader__Instance) {
	panic("Method not implemented - java/lang/ClassLoader.<init>(Ljava/lang/ClassLoader;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__AddClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/ClassLoader.addClass(Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__ClearAssertionStatus__desc____ret__V() {
	panic("Method not implemented - java/lang/ClassLoader.clearAssertionStatus()V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 ByteArray__Instance, var2 int, var3 int) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.defineClass(Ljava/lang/String;[BII)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0 ByteArray__Instance, var1 int, var2 int) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.defineClass([BII)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/ClassLoader.desiredAssertionStatus(Ljava/lang/String;)Z")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__FindBootstrapClassOrNull__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findBootstrapClassOrNull(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindClass__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findClass(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findLibrary(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findLoadedClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.findSystemClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0 Java__lang__String__Instance) Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getClassLoadingLock(Ljava/lang/String;)Ljava/lang/Object;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Method not implemented - java/lang/ClassLoader.getParent()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0 Java__lang__ClassLoader__Instance) bool {
	panic("Method not implemented - java/lang/ClassLoader.isAncestor(Ljava/lang/ClassLoader;)Z")
}

func (this *Java__lang__ClassLoader__Impl) Impl__IsParallelCapable__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/ClassLoader.isParallelCapable()Z")
}

func (this *Java__lang__ClassLoader__Impl) Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__LoadLocalClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader.loadLocalClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__PrivTo__Java__lang__Packages__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance {
	panic("Method not implemented - java/lang/ClassLoader.packages()Ljava/util/stream/Stream;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	panic("Method not implemented - java/lang/ClassLoader.resolveClass(Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__Resources__desc____obj__Java__lang__String__ret____obj__Java__util__stream__Stream(var0 Java__lang__String__Instance) Java__util__stream__Stream__Instance {
	panic("Method not implemented - java/lang/ClassLoader.resources(Ljava/lang/String;)Ljava/util/stream/Stream;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Method not implemented - java/lang/ClassLoader.setClassAssertionStatus(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetDefaultAssertionStatus__desc__Z__ret__V(var0 bool) {
	panic("Method not implemented - java/lang/ClassLoader.setDefaultAssertionStatus(Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Method not implemented - java/lang/ClassLoader.setPackageAssertionStatus(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0 Java__lang__Class__Instance, var1 ObjectArray__Instance) {
	panic("Method not implemented - java/lang/ClassLoader.setSigners(Ljava/lang/Class;[Ljava/lang/Object;)V")
}

func (this *Java__lang__ClassLoader__Impl) RawPtr__Java__lang__ClassLoader() *Java__lang__ClassLoader__Impl {
	return this
}

func (this *Java__lang__ClassLoader__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__innerclass__1__Static struct{}

var Java__lang__ClassLoader__innerclass__1__Var Java__lang__ClassLoader__innerclass__1__Static

func Java__lang__ClassLoader__innerclass__1() *Java__lang__ClassLoader__innerclass__1__Static {
	return &Java__lang__ClassLoader__innerclass__1__Var
}

func (this *Java__lang__ClassLoader__innerclass__1__Static) New() *Java__lang__ClassLoader__innerclass__1__Impl {
	v := &Java__lang__ClassLoader__innerclass__1__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__innerclass__1__InitDispatch(v)
	return v
}

type Java__lang__ClassLoader__innerclass__1__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Java__lang__ClassLoader__innerclass__1__InitDispatch(v Java__lang__ClassLoader__innerclass__1__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Void()
}

type Java__lang__ClassLoader__innerclass__1__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__ClassLoader__innerclass__1__This__dollar__0() Java__lang__ClassLoader__Instance
	FieldSet__Java__lang__ClassLoader__innerclass__1__This__dollar__0(v Java__lang__ClassLoader__Instance)
	FieldGet__Java__lang__ClassLoader__innerclass__1__Val__dollar__i() int
	FieldSet__Java__lang__ClassLoader__innerclass__1__Val__dollar__i(v int)
	FieldGet__Java__lang__ClassLoader__innerclass__1__Val__dollar__name() Java__lang__String__Instance
	FieldSet__Java__lang__ClassLoader__innerclass__1__Val__dollar__name(v Java__lang__String__Instance)
	RawPtr__Java__lang__ClassLoader__innerclass__1() *Java__lang__ClassLoader__innerclass__1__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__innerclass__1__Impl struct {
	*Java__lang__Object__Impl
	_dispatch         Java__lang__ClassLoader__innerclass__1__Dispatch
	This__dollar__0   Java__lang__ClassLoader__Instance
	Val__dollar__i    int
	Val__dollar__name Java__lang__String__Instance
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldGet__Java__lang__ClassLoader__innerclass__1__This__dollar__0() Java__lang__ClassLoader__Instance {
	return this.This__dollar__0
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldSet__Java__lang__ClassLoader__innerclass__1__This__dollar__0(v Java__lang__ClassLoader__Instance) {
	this.This__dollar__0 = v
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldGet__Java__lang__ClassLoader__innerclass__1__Val__dollar__i() int {
	return this.Val__dollar__i
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldSet__Java__lang__ClassLoader__innerclass__1__Val__dollar__i(v int) {
	this.Val__dollar__i = v
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldGet__Java__lang__ClassLoader__innerclass__1__Val__dollar__name() Java__lang__String__Instance {
	return this.Val__dollar__name
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) FieldSet__Java__lang__ClassLoader__innerclass__1__Val__dollar__name(v Java__lang__String__Instance) {
	this.Val__dollar__name = v
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Impl__Run__desc____ret____obj__Java__lang__Void() Java__lang__Void__Instance {
	panic("Method not implemented - java/lang/ClassLoader$1.run()Ljava/lang/Void;")
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____obj__Java__lang__Void()
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) RawPtr__Java__lang__ClassLoader__innerclass__1() *Java__lang__ClassLoader__innerclass__1__Impl {
	return this
}

func (this *Java__lang__ClassLoader__innerclass__1__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__innerclass__2__Static struct{}

var Java__lang__ClassLoader__innerclass__2__Var Java__lang__ClassLoader__innerclass__2__Static

func Java__lang__ClassLoader__innerclass__2() *Java__lang__ClassLoader__innerclass__2__Static {
	return &Java__lang__ClassLoader__innerclass__2__Var
}

func (this *Java__lang__ClassLoader__innerclass__2__Static) New() *Java__lang__ClassLoader__innerclass__2__Impl {
	v := &Java__lang__ClassLoader__innerclass__2__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__innerclass__2__InitDispatch(v)
	return v
}

type Java__lang__ClassLoader__innerclass__2__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Run__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Java__lang__ClassLoader__innerclass__2__InitDispatch(v Java__lang__ClassLoader__innerclass__2__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Run__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__String()
}

type Java__lang__ClassLoader__innerclass__2__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__ClassLoader__innerclass__2() *Java__lang__ClassLoader__innerclass__2__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__innerclass__2__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__ClassLoader__innerclass__2__Dispatch
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Impl__Run__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/ClassLoader$2.run()Ljava/lang/String;")
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this.Impl__Run__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) RawPtr__Java__lang__ClassLoader__innerclass__2() *Java__lang__ClassLoader__innerclass__2__Impl {
	return this
}

func (this *Java__lang__ClassLoader__innerclass__2__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__innerclass__NativeLibrary__Static struct{}

var Java__lang__ClassLoader__innerclass__NativeLibrary__Var Java__lang__ClassLoader__innerclass__NativeLibrary__Static

func Java__lang__ClassLoader__innerclass__NativeLibrary() *Java__lang__ClassLoader__innerclass__NativeLibrary__Static {
	return &Java__lang__ClassLoader__innerclass__NativeLibrary__Var
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Static) New() *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl {
	v := &Java__lang__ClassLoader__innerclass__NativeLibrary__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__innerclass__NativeLibrary__InitDispatch(v)
	return v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Static) Impl__PrivTo__Java__lang__Access__dollar__200__desc____obj__Java__lang__ClassLoader__innerclass__NativeLibrary__ret____obj__Java__lang__Class(var0 Java__lang__ClassLoader__innerclass__NativeLibrary__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.access$200(Ljava/lang/ClassLoader$NativeLibrary;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Static) Impl__PrivTo__Java__lang__GetFromClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.getFromClass()Ljava/lang/Class;")
}

type Java__lang__ClassLoader__innerclass__NativeLibrary__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(Java__lang__Class__Instance, Java__lang__String__Instance, bool)
	Impl__PrivTo__Java__lang__Find__desc____obj__Java__lang__String__ret__J(Java__lang__String__Instance) int64
	Impl__PrivTo__Java__lang__Load__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Impl__PrivTo__Java__lang__Unload__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Java__lang__ClassLoader__innerclass__NativeLibrary__InitDispatch(v Java__lang__ClassLoader__innerclass__NativeLibrary__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__String__Instance, var2 bool) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(var0, var1, var2)
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) PrivTo__Java__lang__Find__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	return this._dispatch.Impl__PrivTo__Java__lang__Find__desc____obj__Java__lang__String__ret__J(var0)
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) PrivTo__Java__lang__Load__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__PrivTo__Java__lang__Load__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) PrivTo__Java__lang__Unload__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__PrivTo__Java__lang__Unload__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

type Java__lang__ClassLoader__innerclass__NativeLibrary__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	PrivTo__Java__lang__Load__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	PrivTo__Java__lang__Unload__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Notify__desc____ret__V()
	PrivTo__Java__lang__Find__desc____obj__Java__lang__String__ret__J(Java__lang__String__Instance) int64
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Handle() int64
	FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Handle(v int64)
	FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__IsBuiltin() bool
	FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__IsBuiltin(v bool)
	FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Loaded() bool
	FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Loaded(v bool)
	FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Name() Java__lang__String__Instance
	FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Name(v Java__lang__String__Instance)
	RawPtr__Java__lang__ClassLoader__innerclass__NativeLibrary() *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__innerclass__NativeLibrary__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__ClassLoader__innerclass__NativeLibrary__Dispatch
	Handle    int64
	IsBuiltin bool
	Loaded    bool
	Name      Java__lang__String__Instance
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Handle() int64 {
	return this.Handle
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Handle(v int64) {
	this.Handle = v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__IsBuiltin() bool {
	return this.IsBuiltin
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__IsBuiltin(v bool) {
	this.IsBuiltin = v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Loaded() bool {
	return this.Loaded
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Loaded(v bool) {
	this.Loaded = v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldGet__Java__lang__ClassLoader__innerclass__NativeLibrary__Name() Java__lang__String__Instance {
	return this.Name
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) FieldSet__Java__lang__ClassLoader__innerclass__NativeLibrary__Name(v Java__lang__String__Instance) {
	this.Name = v
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl__Instance_Init__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__String__Instance, var2 bool) {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.<init>(Ljava/lang/Class;Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl__Finalize__desc____ret__V() {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.finalize()V")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl__PrivTo__Java__lang__Find__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.find(Ljava/lang/String;)J")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl__PrivTo__Java__lang__Load__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.load(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl__PrivTo__Java__lang__Unload__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Method not implemented - java/lang/ClassLoader$NativeLibrary.unload(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) RawPtr__Java__lang__ClassLoader__innerclass__NativeLibrary() *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl {
	return this
}

func (this *Java__lang__ClassLoader__innerclass__NativeLibrary__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__innerclass__ParallelLoaders__Static struct {
	init sync.Once
}

var Java__lang__ClassLoader__innerclass__ParallelLoaders__Var Java__lang__ClassLoader__innerclass__ParallelLoaders__Static

func Java__lang__ClassLoader__innerclass__ParallelLoaders() *Java__lang__ClassLoader__innerclass__ParallelLoaders__Static {
	Java__lang__ClassLoader__innerclass__ParallelLoaders__Var.init.Do(Java__lang__ClassLoader__innerclass__ParallelLoaders__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__ClassLoader__innerclass__ParallelLoaders__Var
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Static) New() *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl {
	v := &Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__innerclass__ParallelLoaders__InitDispatch(v)
	return v
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Static) Impl__PrivTo__Java__lang__IsRegistered__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Method not implemented - java/lang/ClassLoader$ParallelLoaders.isRegistered(Ljava/lang/Class;)Z")
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Static) Impl__PrivTo__Java__lang__Register__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Method not implemented - java/lang/ClassLoader$ParallelLoaders.register(Ljava/lang/Class;)Z")
}

type Java__lang__ClassLoader__innerclass__ParallelLoaders__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl) Java__lang__ClassLoader__innerclass__ParallelLoaders__InitDispatch(v Java__lang__ClassLoader__innerclass__ParallelLoaders__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__ClassLoader__innerclass__ParallelLoaders__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__ClassLoader__innerclass__ParallelLoaders() *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__ClassLoader__innerclass__ParallelLoaders__Dispatch
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl) RawPtr__Java__lang__ClassLoader__innerclass__ParallelLoaders() *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl {
	return this
}

func (this *Java__lang__ClassLoader__innerclass__ParallelLoaders__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassValue__innerclass__ClassValueMap__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__ClassValue__innerclass__ClassValueMap__Var Java__lang__ClassValue__innerclass__ClassValueMap__Static

func Java__lang__ClassValue__innerclass__ClassValueMap() *Java__lang__ClassValue__innerclass__ClassValueMap__Static {
	Java__lang__ClassValue__innerclass__ClassValueMap__Var.init.Do(Java__lang__ClassValue__innerclass__ClassValueMap__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__ClassValue__innerclass__ClassValueMap__Var
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Static) New() *Java__lang__ClassValue__innerclass__ClassValueMap__Impl {
	v := &Java__lang__ClassValue__innerclass__ClassValueMap__Impl{
		Java__util__WeakHashMap__Impl: Java__util__WeakHashMap().New(),
	}
	v.Java__lang__ClassValue__innerclass__ClassValueMap__InitDispatch(v)
	return v
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__ClassValue__innerclass__ClassValueMap__Dispatch interface {
	Java__util__WeakHashMap__Dispatch
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Impl) Java__lang__ClassValue__innerclass__ClassValueMap__InitDispatch(v Java__lang__ClassValue__innerclass__ClassValueMap__Dispatch) {
	this.Java__util__WeakHashMap__Impl.Java__util__WeakHashMap__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__ClassValue__innerclass__ClassValueMap__Instance interface {
	PutAll__desc____obj__Java__util__Map__ret__V(Java__util__Map__Instance)
	PutIfAbsent__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Get__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Compute__desc____obj__Java__lang__Object____obj__Java__util__function__BiFunction__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__util__function__BiFunction__Instance) Java__lang__Object__Instance
	ComputeIfAbsent__desc____obj__Java__lang__Object____obj__Java__util__function__Function__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__util__function__Function__Instance) Java__lang__Object__Instance
	Finalize__desc____ret__V()
	ContainsValue__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	GetOrDefault__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	HashCode__desc____ret__I() int
	Clear__desc____ret__V()
	ReplaceAll__desc____obj__Java__util__function__BiFunction__ret__V(Java__util__function__BiFunction__Instance)
	Merge__desc____obj__Java__lang__Object____obj__Java__lang__Object____obj__Java__util__function__BiFunction__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance, Java__util__function__BiFunction__Instance) Java__lang__Object__Instance
	Remove__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance, Java__lang__Object__Instance) bool
	ForEach__desc____obj__Java__util__function__BiConsumer__ret__V(Java__util__function__BiConsumer__Instance)
	ContainsKey__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	IsEmpty__desc____ret__Z() bool
	PrivTo__Java__util__RemoveMapping__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Put__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	PrivTo__Java__util__Hash__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Remove__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	PrivTo__Java__util__Resize__desc__I__ret__V(int)
	Size__desc____ret__I() int
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	ComputeIfPresent__desc____obj__Java__lang__Object____obj__Java__util__function__BiFunction__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__util__function__BiFunction__Instance) Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Replace__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	Notify__desc____ret__V()
	Replace__desc____obj__Java__lang__Object____obj__Java__lang__Object____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance, Java__lang__Object__Instance, Java__lang__Object__Instance) bool
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__util__WeakHashMap__ModCount() int
	FieldSet__Java__util__WeakHashMap__ModCount(v int)
	RawPtr__Java__lang__ClassValue__innerclass__ClassValueMap() *Java__lang__ClassValue__innerclass__ClassValueMap__Impl
	RawPtr__Java__util__WeakHashMap() *Java__util__WeakHashMap__Impl
	RawPtr__Java__util__AbstractMap() *Java__util__AbstractMap__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassValue__innerclass__ClassValueMap__Impl struct {
	*Java__util__WeakHashMap__Impl
	_dispatch Java__lang__ClassValue__innerclass__ClassValueMap__Dispatch
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/ClassValue$ClassValueMap.<init>()V")
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Impl) RawPtr__Java__lang__ClassValue__innerclass__ClassValueMap() *Java__lang__ClassValue__innerclass__ClassValueMap__Impl {
	return this
}

func (this *Java__lang__ClassValue__innerclass__ClassValueMap__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Comparable__Static struct{}

var Java__lang__Comparable__Var Java__lang__Comparable__Static

func Java__lang__Comparable() *Java__lang__Comparable__Static {
	return &Java__lang__Comparable__Var
}

type Java__lang__Comparable__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Comparable__dynproxy____Static struct{}

var Java__lang__Comparable__dynproxy____Var Java__lang__Comparable__dynproxy____Static

func Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Static {
	return &Java__lang__Comparable__dynproxy____Var
}

func (this *Java__lang__Comparable__dynproxy____Static) New() *Java__lang__Comparable__dynproxy____Impl {
	v := &Java__lang__Comparable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Comparable__dynproxy____InitDispatch(v)
	return v
}

type Java__lang__Comparable__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Comparable__dynproxy____Impl) Java__lang__Comparable__dynproxy____InitDispatch(v Java__lang__Comparable__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Comparable__dynproxy____Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Comparable__dynproxy____Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Comparable__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Comparable__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance) int
}

func (this *Java__lang__Comparable__dynproxy____Impl) RawPtr__Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Impl {
	return this
}

func (this *Java__lang__Comparable__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__lang__Comparable__Static) DynProxy_Create(fn func(Java__lang__Object__Instance) int) Java__lang__Comparable__Instance {
	v := &Java__lang__Comparable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__lang__Comparable__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__lang__Comparable__dynproxy____Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this.fn(var0)
}

type Java__lang__Double__Static struct {
	BYTES             int
	MAX_EXPONENT      int
	MAX_VALUE         float64
	MIN_EXPONENT      int
	MIN_NORMAL        float64
	MIN_VALUE         float64
	NEGATIVE_INFINITY float64
	NaN               float64
	POSITIVE_INFINITY float64
	SIZE              int
	TYPE              Java__lang__Class__Instance
	init              sync.Once
}

var Java__lang__Double__Var Java__lang__Double__Static

func Java__lang__Double() *Java__lang__Double__Static {
	Java__lang__Double__Var.init.Do(Java__lang__Double__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Double__Var
}

func (this *Java__lang__Double__Static) New() *Java__lang__Double__Impl {
	v := &Java__lang__Double__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Double__InitDispatch(v)
	return v
}

func (this *Java__lang__Double__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Double__Static) Impl__Compare__desc__D__D__ret__I(var0 float64, var1 float64) int {
	panic("Method not implemented - java/lang/Double.compare(DD)I")
}

func (this *Java__lang__Double__Static) Impl__DoubleToLongBits__desc__D__ret__J(var0 float64) int64 {
	panic("Method not implemented - java/lang/Double.doubleToLongBits(D)J")
}

func (this *Java__lang__Double__Static) Impl__DoubleToRawLongBits__desc__D__ret__J(var0 float64) int64 {
	panic("Method not implemented - java/lang/Double.doubleToRawLongBits(D)J")
}

func (this *Java__lang__Double__Static) Impl__HashCode__desc__D__ret__I(var0 float64) int {
	panic("Method not implemented - java/lang/Double.hashCode(D)I")
}

func (this *Java__lang__Double__Static) Impl__IsFinite__desc__D__ret__Z(var0 float64) bool {
	panic("Method not implemented - java/lang/Double.isFinite(D)Z")
}

func (this *Java__lang__Double__Static) Impl__IsInfinite__desc__D__ret__Z(var0 float64) bool {
	panic("Method not implemented - java/lang/Double.isInfinite(D)Z")
}

func (this *Java__lang__Double__Static) Impl__IsNaN__desc__D__ret__Z(var0 float64) bool {
	panic("Method not implemented - java/lang/Double.isNaN(D)Z")
}

func (this *Java__lang__Double__Static) Impl__LongBitsToDouble__desc__J__ret__D(var0 int64) float64 {
	panic("Method not implemented - java/lang/Double.longBitsToDouble(J)D")
}

func (this *Java__lang__Double__Static) Impl__Max__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Method not implemented - java/lang/Double.max(DD)D")
}

func (this *Java__lang__Double__Static) Impl__Min__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Method not implemented - java/lang/Double.min(DD)D")
}

func (this *Java__lang__Double__Static) Impl__ParseDouble__desc____obj__Java__lang__String__ret__D(var0 Java__lang__String__Instance) float64 {
	panic("Method not implemented - java/lang/Double.parseDouble(Ljava/lang/String;)D")
}

func (this *Java__lang__Double__Static) Impl__Sum__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Method not implemented - java/lang/Double.sum(DD)D")
}

func (this *Java__lang__Double__Static) Impl__ToHexString__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Double.toHexString(D)Ljava/lang/String;")
}

func (this *Java__lang__Double__Static) Impl__ToString__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Double.toString(D)Ljava/lang/String;")
}

func (this *Java__lang__Double__Static) Impl__ValueOf__desc__D__ret____obj__Java__lang__Double(var0 float64) Java__lang__Double__Instance {
	panic("Method not implemented - java/lang/Double.valueOf(D)Ljava/lang/Double;")
}

func (this *Java__lang__Double__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Double(var0 Java__lang__String__Instance) Java__lang__Double__Instance {
	panic("Method not implemented - java/lang/Double.valueOf(Ljava/lang/String;)Ljava/lang/Double;")
}

type Java__lang__Double__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__D__ret__V(float64)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(Java__lang__Double__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__IsInfinite__desc____ret__Z() bool
	Impl__IsNaN__desc____ret__Z() bool
}

func (this *Java__lang__Double__Impl) Java__lang__Double__InitDispatch(v Java__lang__Double__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Double__Impl) Instance_Init__desc__D__ret__V(var0 float64) {
	this._dispatch.Impl__Instance_Init__desc__D__ret__V(var0)
}

func (this *Java__lang__Double__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Double__Impl) CompareTo__desc____obj__Java__lang__Double__ret__I(var0 Java__lang__Double__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(var0)
}

func (this *Java__lang__Double__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Double__Impl) IsInfinite__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInfinite__desc____ret__Z()
}

func (this *Java__lang__Double__Impl) IsNaN__desc____ret__Z() bool {
	return this._dispatch.Impl__IsNaN__desc____ret__Z()
}

type Java__lang__Double__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	IsInfinite__desc____ret__Z() bool
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CompareTo__desc____obj__Java__lang__Double__ret__I(Java__lang__Double__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	IsNaN__desc____ret__Z() bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Double() *Java__lang__Double__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Double__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Double__Dispatch
	Value     float64
}

func (this *Java__lang__Double__Impl) Impl__Instance_Init__desc__D__ret__V(var0 float64) {
	panic("Method not implemented - java/lang/Double.<init>(D)V")
}

func (this *Java__lang__Double__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Double.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Double__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Double.byteValue()B")
}

func (this *Java__lang__Double__Impl) Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(var0 Java__lang__Double__Instance) int {
	panic("Method not implemented - java/lang/Double.compareTo(Ljava/lang/Double;)I")
}

func (this *Java__lang__Double__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Double.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Double__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Double.doubleValue()D")
}

func (this *Java__lang__Double__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Double.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Double__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Double.floatValue()F")
}

func (this *Java__lang__Double__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Double.hashCode()I")
}

func (this *Java__lang__Double__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Double.intValue()I")
}

func (this *Java__lang__Double__Impl) Impl__IsInfinite__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Double.isInfinite()Z")
}

func (this *Java__lang__Double__Impl) Impl__IsNaN__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Double.isNaN()Z")
}

func (this *Java__lang__Double__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Double.longValue()J")
}

func (this *Java__lang__Double__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Double.shortValue()S")
}

func (this *Java__lang__Double__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Double.toString()Ljava/lang/String;")
}

func (this *Java__lang__Double__Impl) RawPtr__Java__lang__Double() *Java__lang__Double__Impl {
	return this
}

func (this *Java__lang__Double__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Enum__Static struct{}

var Java__lang__Enum__Var Java__lang__Enum__Static

func Java__lang__Enum() *Java__lang__Enum__Static {
	return &Java__lang__Enum__Var
}

func (this *Java__lang__Enum__Static) New() *Java__lang__Enum__Impl {
	v := &Java__lang__Enum__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Enum__InitDispatch(v)
	return v
}

func (this *Java__lang__Enum__Static) Impl__ValueOf__desc____obj__Java__lang__Class____obj__Java__lang__String__ret____obj__Java__lang__Enum(var0 Java__lang__Class__Instance, var1 Java__lang__String__Instance) Java__lang__Enum__Instance {
	panic("Method not implemented - java/lang/Enum.valueOf(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;")
}

type Java__lang__Enum__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__I__ret__V(Java__lang__String__Instance, int)
	Impl__CompareTo__desc____obj__Java__lang__Enum__ret__I(Java__lang__Enum__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__Name__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Ordinal__desc____ret__I() int
}

func (this *Java__lang__Enum__Impl) Java__lang__Enum__InitDispatch(v Java__lang__Enum__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Enum__Impl) Instance_Init__desc____obj__Java__lang__String__I__ret__V(var0 Java__lang__String__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__I__ret__V(var0, var1)
}

func (this *Java__lang__Enum__Impl) CompareTo__desc____obj__Java__lang__Enum__ret__I(var0 Java__lang__Enum__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Enum__ret__I(var0)
}

func (this *Java__lang__Enum__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Enum__Impl) GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Enum__Impl) Name__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Name__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Enum__Impl) Ordinal__desc____ret__I() int {
	return this._dispatch.Impl__Ordinal__desc____ret__I()
}

type Java__lang__Enum__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	CompareTo__desc____obj__Java__lang__Enum__ret__I(Java__lang__Enum__Instance) int
	Ordinal__desc____ret__I() int
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Name__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Enum() *Java__lang__Enum__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Enum__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Enum__Dispatch
}

func (this *Java__lang__Enum__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__I__ret__V(var0 Java__lang__String__Instance, var1 int) {
	panic("Method not implemented - java/lang/Enum.<init>(Ljava/lang/String;I)V")
}

func (this *Java__lang__Enum__Impl) Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Enum.clone()Ljava/lang/Object;")
}

func (this *Java__lang__Enum__Impl) Impl__CompareTo__desc____obj__Java__lang__Enum__ret__I(var0 Java__lang__Enum__Instance) int {
	panic("Method not implemented - java/lang/Enum.compareTo(Ljava/lang/Enum;)I")
}

func (this *Java__lang__Enum__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Enum.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Enum__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Enum.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Enum__Impl) Impl__Finalize__desc____ret__V() {
	panic("Method not implemented - java/lang/Enum.finalize()V")
}

func (this *Java__lang__Enum__Impl) Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/Enum.getDeclaringClass()Ljava/lang/Class;")
}

func (this *Java__lang__Enum__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Enum.hashCode()I")
}

func (this *Java__lang__Enum__Impl) Impl__Name__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Enum.name()Ljava/lang/String;")
}

func (this *Java__lang__Enum__Impl) Impl__Ordinal__desc____ret__I() int {
	panic("Method not implemented - java/lang/Enum.ordinal()I")
}

func (this *Java__lang__Enum__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Enum.toString()Ljava/lang/String;")
}

func (this *Java__lang__Enum__Impl) RawPtr__Java__lang__Enum() *Java__lang__Enum__Impl {
	return this
}

func (this *Java__lang__Enum__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Error__Static struct {
	SerialVersionUID int64
}

var Java__lang__Error__Var Java__lang__Error__Static

func Java__lang__Error() *Java__lang__Error__Static {
	return &Java__lang__Error__Var
}

func (this *Java__lang__Error__Static) New() *Java__lang__Error__Impl {
	v := &Java__lang__Error__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Error__InitDispatch(v)
	return v
}

type Java__lang__Error__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Error__Impl) Java__lang__Error__InitDispatch(v Java__lang__Error__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Error__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Error() *Java__lang__Error__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Error__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Error__Dispatch
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Error.<init>()V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Error.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Method not implemented - java/lang/Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Error.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Error__Impl) RawPtr__Java__lang__Error() *Java__lang__Error__Impl {
	return this
}

func (this *Java__lang__Error__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Exception__Static struct {
	SerialVersionUID int64
}

var Java__lang__Exception__Var Java__lang__Exception__Static

func Java__lang__Exception() *Java__lang__Exception__Static {
	return &Java__lang__Exception__Var
}

func (this *Java__lang__Exception__Static) New() *Java__lang__Exception__Impl {
	v := &Java__lang__Exception__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Exception__InitDispatch(v)
	return v
}

type Java__lang__Exception__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Exception__Impl) Java__lang__Exception__InitDispatch(v Java__lang__Exception__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Exception__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Exception__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Exception__Dispatch
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Exception.<init>()V")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Method not implemented - java/lang/Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Exception.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Exception__Impl) RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl {
	return this
}

func (this *Java__lang__Exception__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Float__Static struct {
	BYTES             int
	MAX_EXPONENT      int
	MAX_VALUE         float32
	MIN_EXPONENT      int
	MIN_NORMAL        float32
	MIN_VALUE         float32
	NEGATIVE_INFINITY float32
	NaN               float32
	POSITIVE_INFINITY float32
	SIZE              int
	TYPE              Java__lang__Class__Instance
	init              sync.Once
}

var Java__lang__Float__Var Java__lang__Float__Static

func Java__lang__Float() *Java__lang__Float__Static {
	Java__lang__Float__Var.init.Do(Java__lang__Float__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Float__Var
}

func (this *Java__lang__Float__Static) New() *Java__lang__Float__Impl {
	v := &Java__lang__Float__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Float__InitDispatch(v)
	return v
}

func (this *Java__lang__Float__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Float__Static) Impl__Compare__desc__F__F__ret__I(var0 float32, var1 float32) int {
	panic("Method not implemented - java/lang/Float.compare(FF)I")
}

func (this *Java__lang__Float__Static) Impl__FloatToIntBits__desc__F__ret__I(var0 float32) int {
	panic("Method not implemented - java/lang/Float.floatToIntBits(F)I")
}

func (this *Java__lang__Float__Static) Impl__FloatToRawIntBits__desc__F__ret__I(var0 float32) int {
	panic("Method not implemented - java/lang/Float.floatToRawIntBits(F)I")
}

func (this *Java__lang__Float__Static) Impl__HashCode__desc__F__ret__I(var0 float32) int {
	panic("Method not implemented - java/lang/Float.hashCode(F)I")
}

func (this *Java__lang__Float__Static) Impl__IntBitsToFloat__desc__I__ret__F(var0 int) float32 {
	panic("Method not implemented - java/lang/Float.intBitsToFloat(I)F")
}

func (this *Java__lang__Float__Static) Impl__IsFinite__desc__F__ret__Z(var0 float32) bool {
	panic("Method not implemented - java/lang/Float.isFinite(F)Z")
}

func (this *Java__lang__Float__Static) Impl__IsInfinite__desc__F__ret__Z(var0 float32) bool {
	panic("Method not implemented - java/lang/Float.isInfinite(F)Z")
}

func (this *Java__lang__Float__Static) Impl__IsNaN__desc__F__ret__Z(var0 float32) bool {
	panic("Method not implemented - java/lang/Float.isNaN(F)Z")
}

func (this *Java__lang__Float__Static) Impl__Max__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Method not implemented - java/lang/Float.max(FF)F")
}

func (this *Java__lang__Float__Static) Impl__Min__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Method not implemented - java/lang/Float.min(FF)F")
}

func (this *Java__lang__Float__Static) Impl__ParseFloat__desc____obj__Java__lang__String__ret__F(var0 Java__lang__String__Instance) float32 {
	panic("Method not implemented - java/lang/Float.parseFloat(Ljava/lang/String;)F")
}

func (this *Java__lang__Float__Static) Impl__Sum__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Method not implemented - java/lang/Float.sum(FF)F")
}

func (this *Java__lang__Float__Static) Impl__ToHexString__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Float.toHexString(F)Ljava/lang/String;")
}

func (this *Java__lang__Float__Static) Impl__ToString__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Float.toString(F)Ljava/lang/String;")
}

func (this *Java__lang__Float__Static) Impl__ValueOf__desc__F__ret____obj__Java__lang__Float(var0 float32) Java__lang__Float__Instance {
	panic("Method not implemented - java/lang/Float.valueOf(F)Ljava/lang/Float;")
}

func (this *Java__lang__Float__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Float(var0 Java__lang__String__Instance) Java__lang__Float__Instance {
	panic("Method not implemented - java/lang/Float.valueOf(Ljava/lang/String;)Ljava/lang/Float;")
}

type Java__lang__Float__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__D__ret__V(float64)
	Impl__Instance_Init__desc__F__ret__V(float32)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(Java__lang__Float__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__IsInfinite__desc____ret__Z() bool
	Impl__IsNaN__desc____ret__Z() bool
}

func (this *Java__lang__Float__Impl) Java__lang__Float__InitDispatch(v Java__lang__Float__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Float__Impl) Instance_Init__desc__D__ret__V(var0 float64) {
	this._dispatch.Impl__Instance_Init__desc__D__ret__V(var0)
}

func (this *Java__lang__Float__Impl) Instance_Init__desc__F__ret__V(var0 float32) {
	this._dispatch.Impl__Instance_Init__desc__F__ret__V(var0)
}

func (this *Java__lang__Float__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Float__Impl) CompareTo__desc____obj__Java__lang__Float__ret__I(var0 Java__lang__Float__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(var0)
}

func (this *Java__lang__Float__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Float__Impl) IsInfinite__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInfinite__desc____ret__Z()
}

func (this *Java__lang__Float__Impl) IsNaN__desc____ret__Z() bool {
	return this._dispatch.Impl__IsNaN__desc____ret__Z()
}

type Java__lang__Float__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	IsInfinite__desc____ret__Z() bool
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Float__ret__I(Java__lang__Float__Instance) int
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	IsNaN__desc____ret__Z() bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Float() *Java__lang__Float__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Float__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Float__Dispatch
	Value     float32
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc__D__ret__V(var0 float64) {
	panic("Method not implemented - java/lang/Float.<init>(D)V")
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc__F__ret__V(var0 float32) {
	panic("Method not implemented - java/lang/Float.<init>(F)V")
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Float.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Float__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Float.byteValue()B")
}

func (this *Java__lang__Float__Impl) Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(var0 Java__lang__Float__Instance) int {
	panic("Method not implemented - java/lang/Float.compareTo(Ljava/lang/Float;)I")
}

func (this *Java__lang__Float__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Float.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Float__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Float.doubleValue()D")
}

func (this *Java__lang__Float__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Float.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Float__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Float.floatValue()F")
}

func (this *Java__lang__Float__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Float.hashCode()I")
}

func (this *Java__lang__Float__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Float.intValue()I")
}

func (this *Java__lang__Float__Impl) Impl__IsInfinite__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Float.isInfinite()Z")
}

func (this *Java__lang__Float__Impl) Impl__IsNaN__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/Float.isNaN()Z")
}

func (this *Java__lang__Float__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Float.longValue()J")
}

func (this *Java__lang__Float__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Float.shortValue()S")
}

func (this *Java__lang__Float__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Float.toString()Ljava/lang/String;")
}

func (this *Java__lang__Float__Impl) RawPtr__Java__lang__Float() *Java__lang__Float__Impl {
	return this
}

func (this *Java__lang__Float__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__IllegalArgumentException__Static struct{}

var Java__lang__IllegalArgumentException__Var Java__lang__IllegalArgumentException__Static

func Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Static {
	return &Java__lang__IllegalArgumentException__Var
}

func (this *Java__lang__IllegalArgumentException__Static) New() *Java__lang__IllegalArgumentException__Impl {
	v := &Java__lang__IllegalArgumentException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__IllegalArgumentException__InitDispatch(v)
	return v
}

type Java__lang__IllegalArgumentException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__IllegalArgumentException__Impl) Java__lang__IllegalArgumentException__InitDispatch(v Java__lang__IllegalArgumentException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__IllegalArgumentException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__IllegalArgumentException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__IllegalArgumentException__Dispatch
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/IllegalArgumentException.<init>()V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) RawPtr__Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Impl {
	return this
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__IllegalMonitorStateException__Static struct{}

var Java__lang__IllegalMonitorStateException__Var Java__lang__IllegalMonitorStateException__Static

func Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Static {
	return &Java__lang__IllegalMonitorStateException__Var
}

func (this *Java__lang__IllegalMonitorStateException__Static) New() *Java__lang__IllegalMonitorStateException__Impl {
	v := &Java__lang__IllegalMonitorStateException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__IllegalMonitorStateException__InitDispatch(v)
	return v
}

type Java__lang__IllegalMonitorStateException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Java__lang__IllegalMonitorStateException__InitDispatch(v Java__lang__IllegalMonitorStateException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__IllegalMonitorStateException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__IllegalMonitorStateException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__IllegalMonitorStateException__Dispatch
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/IllegalMonitorStateException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__IllegalMonitorStateException__Impl) RawPtr__Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Impl {
	return this
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Integer__Static struct {
	BYTES     int
	DigitOnes ByteArray__Instance
	DigitTens ByteArray__Instance
	MAX_VALUE int
	MIN_VALUE int
	SIZE      int
	TYPE      Java__lang__Class__Instance
	Digits    CharArray__Instance
	SizeTable IntArray__Instance
	init      sync.Once
}

var Java__lang__Integer__Var Java__lang__Integer__Static

func Java__lang__Integer() *Java__lang__Integer__Static {
	Java__lang__Integer__Var.init.Do(Java__lang__Integer__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Integer__Var
}

func (this *Java__lang__Integer__Static) New() *Java__lang__Integer__Impl {
	v := &Java__lang__Integer__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Integer__InitDispatch(v)
	return v
}

func (this *Java__lang__Integer__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Integer__Static) Impl__BitCount__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.bitCount(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Compare__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.compare(II)I")
}

func (this *Java__lang__Integer__Static) Impl__CompareUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.compareUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.decode(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__DivideUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.divideUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__FormatUnsignedInt__desc__I__I____arr__B__I__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/Integer.formatUnsignedInt(II[BII)V")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__FormatUnsignedInt__desc__I__I____arr__C__I__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/Integer.formatUnsignedInt(II[CII)V")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__FormatUnsignedIntUTF16__desc__I__I____arr__B__I__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/Integer.formatUnsignedIntUTF16(II[BII)V")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__GetChars__desc__I__I____arr__B__ret__I(var0 int, var1 int, var2 ByteArray__Instance) int {
	panic("Method not implemented - java/lang/Integer.getChars(II[B)I")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__GetCharsUTF16__desc__I__I____arr__B__ret__I(var0 int, var1 int, var2 ByteArray__Instance) int {
	panic("Method not implemented - java/lang/Integer.getCharsUTF16(II[B)I")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.getInteger(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 int) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.getInteger(Ljava/lang/String;I)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String____obj__Java__lang__Integer__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 Java__lang__Integer__Instance) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.getInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__HashCode__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.hashCode(I)I")
}

func (this *Java__lang__Integer__Static) Impl__HighestOneBit__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.highestOneBit(I)I")
}

func (this *Java__lang__Integer__Static) Impl__LowestOneBit__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.lowestOneBit(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Max__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.max(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Min__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.min(II)I")
}

func (this *Java__lang__Integer__Static) Impl__NumberOfLeadingZeros__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.numberOfLeadingZeros(I)I")
}

func (this *Java__lang__Integer__Static) Impl__NumberOfTrailingZeros__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.numberOfTrailingZeros(I)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseInt__desc____obj__Java__lang__CharSequence__I__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int, var3 int) int {
	panic("Method not implemented - java/lang/Integer.parseInt(Ljava/lang/CharSequence;III)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseInt__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/Integer.parseInt(Ljava/lang/String;)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseInt__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Integer.parseInt(Ljava/lang/String;I)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseUnsignedInt__desc____obj__Java__lang__CharSequence__I__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int, var3 int) int {
	panic("Method not implemented - java/lang/Integer.parseUnsignedInt(Ljava/lang/CharSequence;III)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseUnsignedInt__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/Integer.parseUnsignedInt(Ljava/lang/String;)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseUnsignedInt__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/Integer.parseUnsignedInt(Ljava/lang/String;I)I")
}

func (this *Java__lang__Integer__Static) Impl__RemainderUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.remainderUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Reverse__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.reverse(I)I")
}

func (this *Java__lang__Integer__Static) Impl__ReverseBytes__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.reverseBytes(I)I")
}

func (this *Java__lang__Integer__Static) Impl__RotateLeft__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.rotateLeft(II)I")
}

func (this *Java__lang__Integer__Static) Impl__RotateRight__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.rotateRight(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Signum__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.signum(I)I")
}

func (this *Java__lang__Integer__Static) Impl__PrivTo__Java__lang__StringSize__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/Integer.stringSize(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Sum__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/Integer.sum(II)I")
}

func (this *Java__lang__Integer__Static) Impl__ToBinaryString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toBinaryString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToHexString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toHexString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToOctalString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toOctalString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToString__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toString(II)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedLong__desc__I__ret__J(var0 int) int64 {
	panic("Method not implemented - java/lang/Integer.toUnsignedLong(I)J")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toUnsignedString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedString__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toUnsignedString(II)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc__I__ret____obj__Java__lang__Integer(var0 int) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.valueOf(I)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.valueOf(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 int) Java__lang__Integer__Instance {
	panic("Method not implemented - java/lang/Integer.valueOf(Ljava/lang/String;I)Ljava/lang/Integer;")
}

type Java__lang__Integer__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(Java__lang__Integer__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Integer__Impl) Java__lang__Integer__InitDispatch(v Java__lang__Integer__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Integer__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__Integer__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Integer__Impl) CompareTo__desc____obj__Java__lang__Integer__ret__I(var0 Java__lang__Integer__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(var0)
}

func (this *Java__lang__Integer__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Integer__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	CompareTo__desc____obj__Java__lang__Integer__ret__I(Java__lang__Integer__Instance) int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Integer() *Java__lang__Integer__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Integer__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Integer__Dispatch
	Value     int
}

func (this *Java__lang__Integer__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/Integer.<init>(I)V")
}

func (this *Java__lang__Integer__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Integer.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Integer__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Integer.byteValue()B")
}

func (this *Java__lang__Integer__Impl) Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(var0 Java__lang__Integer__Instance) int {
	panic("Method not implemented - java/lang/Integer.compareTo(Ljava/lang/Integer;)I")
}

func (this *Java__lang__Integer__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Integer.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Integer__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Integer.doubleValue()D")
}

func (this *Java__lang__Integer__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Integer.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Integer__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Integer.floatValue()F")
}

func (this *Java__lang__Integer__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Integer.hashCode()I")
}

func (this *Java__lang__Integer__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Integer.intValue()I")
}

func (this *Java__lang__Integer__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Integer.longValue()J")
}

func (this *Java__lang__Integer__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Integer.shortValue()S")
}

func (this *Java__lang__Integer__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Integer.toString()Ljava/lang/String;")
}

func (this *Java__lang__Integer__Impl) RawPtr__Java__lang__Integer() *Java__lang__Integer__Impl {
	return this
}

func (this *Java__lang__Integer__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Integer__innerclass__IntegerCache__Static struct {
	__dollar__assertionsDisabled bool
	Cache                        ObjectArray__Instance
	High                         int
	Low                          int
	init                         sync.Once
}

var Java__lang__Integer__innerclass__IntegerCache__Var Java__lang__Integer__innerclass__IntegerCache__Static

func Java__lang__Integer__innerclass__IntegerCache() *Java__lang__Integer__innerclass__IntegerCache__Static {
	Java__lang__Integer__innerclass__IntegerCache__Var.init.Do(Java__lang__Integer__innerclass__IntegerCache__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Integer__innerclass__IntegerCache__Var
}

func (this *Java__lang__Integer__innerclass__IntegerCache__Static) New() *Java__lang__Integer__innerclass__IntegerCache__Impl {
	v := &Java__lang__Integer__innerclass__IntegerCache__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Integer__innerclass__IntegerCache__InitDispatch(v)
	return v
}

func (this *Java__lang__Integer__innerclass__IntegerCache__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Integer__innerclass__IntegerCache__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Integer__innerclass__IntegerCache__Impl) Java__lang__Integer__innerclass__IntegerCache__InitDispatch(v Java__lang__Integer__innerclass__IntegerCache__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Integer__innerclass__IntegerCache__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Integer__innerclass__IntegerCache() *Java__lang__Integer__innerclass__IntegerCache__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Integer__innerclass__IntegerCache__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Integer__innerclass__IntegerCache__Dispatch
}

func (this *Java__lang__Integer__innerclass__IntegerCache__Impl) RawPtr__Java__lang__Integer__innerclass__IntegerCache() *Java__lang__Integer__innerclass__IntegerCache__Impl {
	return this
}

func (this *Java__lang__Integer__innerclass__IntegerCache__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Long__Static struct {
	BYTES     int
	MAX_VALUE int64
	MIN_VALUE int64
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Long__Var Java__lang__Long__Static

func Java__lang__Long() *Java__lang__Long__Static {
	Java__lang__Long__Var.init.Do(Java__lang__Long__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Long__Var
}

func (this *Java__lang__Long__Static) New() *Java__lang__Long__Impl {
	v := &Java__lang__Long__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Long__InitDispatch(v)
	return v
}

func (this *Java__lang__Long__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Long__Static) Impl__BitCount__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.bitCount(J)I")
}

func (this *Java__lang__Long__Static) Impl__Compare__desc__J__J__ret__I(var0 int64, var1 int64) int {
	panic("Method not implemented - java/lang/Long.compare(JJ)I")
}

func (this *Java__lang__Long__Static) Impl__CompareUnsigned__desc__J__J__ret__I(var0 int64, var1 int64) int {
	panic("Method not implemented - java/lang/Long.compareUnsigned(JJ)I")
}

func (this *Java__lang__Long__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.decode(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__DivideUnsigned__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Method not implemented - java/lang/Long.divideUnsigned(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__FastUUID__desc__J__J__ret____obj__Java__lang__String(var0 int64, var1 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.fastUUID(JJ)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__FormatUnsignedLong0__desc__J__I____arr__B__I__I__ret__V(var0 int64, var1 int, var2 ByteArray__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/Long.formatUnsignedLong0(JI[BII)V")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__FormatUnsignedLong0UTF16__desc__J__I____arr__B__I__I__ret__V(var0 int64, var1 int, var2 ByteArray__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/Long.formatUnsignedLong0UTF16(JI[BII)V")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__GetChars__desc__J__I____arr__B__ret__I(var0 int64, var1 int, var2 ByteArray__Instance) int {
	panic("Method not implemented - java/lang/Long.getChars(JI[B)I")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__GetCharsUTF16__desc__J__I____arr__B__ret__I(var0 int64, var1 int, var2 ByteArray__Instance) int {
	panic("Method not implemented - java/lang/Long.getCharsUTF16(JI[B)I")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.getLong(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String__J__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 int64) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.getLong(Ljava/lang/String;J)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String____obj__Java__lang__Long__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 Java__lang__Long__Instance) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.getLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__HashCode__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.hashCode(J)I")
}

func (this *Java__lang__Long__Static) Impl__HighestOneBit__desc__J__ret__J(var0 int64) int64 {
	panic("Method not implemented - java/lang/Long.highestOneBit(J)J")
}

func (this *Java__lang__Long__Static) Impl__LowestOneBit__desc__J__ret__J(var0 int64) int64 {
	panic("Method not implemented - java/lang/Long.lowestOneBit(J)J")
}

func (this *Java__lang__Long__Static) Impl__Max__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Method not implemented - java/lang/Long.max(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__Min__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Method not implemented - java/lang/Long.min(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__NumberOfLeadingZeros__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.numberOfLeadingZeros(J)I")
}

func (this *Java__lang__Long__Static) Impl__NumberOfTrailingZeros__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.numberOfTrailingZeros(J)I")
}

func (this *Java__lang__Long__Static) Impl__ParseLong__desc____obj__Java__lang__CharSequence__I__I__I__ret__J(var0 Java__lang__CharSequence__Instance, var1 int, var2 int, var3 int) int64 {
	panic("Method not implemented - java/lang/Long.parseLong(Ljava/lang/CharSequence;III)J")
}

func (this *Java__lang__Long__Static) Impl__ParseLong__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	panic("Method not implemented - java/lang/Long.parseLong(Ljava/lang/String;)J")
}

func (this *Java__lang__Long__Static) Impl__ParseLong__desc____obj__Java__lang__String__I__ret__J(var0 Java__lang__String__Instance, var1 int) int64 {
	panic("Method not implemented - java/lang/Long.parseLong(Ljava/lang/String;I)J")
}

func (this *Java__lang__Long__Static) Impl__ParseUnsignedLong__desc____obj__Java__lang__CharSequence__I__I__I__ret__J(var0 Java__lang__CharSequence__Instance, var1 int, var2 int, var3 int) int64 {
	panic("Method not implemented - java/lang/Long.parseUnsignedLong(Ljava/lang/CharSequence;III)J")
}

func (this *Java__lang__Long__Static) Impl__ParseUnsignedLong__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	panic("Method not implemented - java/lang/Long.parseUnsignedLong(Ljava/lang/String;)J")
}

func (this *Java__lang__Long__Static) Impl__ParseUnsignedLong__desc____obj__Java__lang__String__I__ret__J(var0 Java__lang__String__Instance, var1 int) int64 {
	panic("Method not implemented - java/lang/Long.parseUnsignedLong(Ljava/lang/String;I)J")
}

func (this *Java__lang__Long__Static) Impl__RemainderUnsigned__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Method not implemented - java/lang/Long.remainderUnsigned(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__Reverse__desc__J__ret__J(var0 int64) int64 {
	panic("Method not implemented - java/lang/Long.reverse(J)J")
}

func (this *Java__lang__Long__Static) Impl__ReverseBytes__desc__J__ret__J(var0 int64) int64 {
	panic("Method not implemented - java/lang/Long.reverseBytes(J)J")
}

func (this *Java__lang__Long__Static) Impl__RotateLeft__desc__J__I__ret__J(var0 int64, var1 int) int64 {
	panic("Method not implemented - java/lang/Long.rotateLeft(JI)J")
}

func (this *Java__lang__Long__Static) Impl__RotateRight__desc__J__I__ret__J(var0 int64, var1 int) int64 {
	panic("Method not implemented - java/lang/Long.rotateRight(JI)J")
}

func (this *Java__lang__Long__Static) Impl__Signum__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.signum(J)I")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__StringSize__desc__J__ret__I(var0 int64) int {
	panic("Method not implemented - java/lang/Long.stringSize(J)I")
}

func (this *Java__lang__Long__Static) Impl__Sum__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Method not implemented - java/lang/Long.sum(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__ToBinaryString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toBinaryString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToHexString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toHexString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToOctalString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toOctalString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToString__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toString(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToUnsignedString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toUnsignedString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToUnsignedString__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toUnsignedString(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__PrivTo__Java__lang__ToUnsignedString0__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toUnsignedString0(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.valueOf(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 int) Java__lang__Long__Instance {
	panic("Method not implemented - java/lang/Long.valueOf(Ljava/lang/String;I)Ljava/lang/Long;")
}

type Java__lang__Long__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__J__ret__V(int64)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(Java__lang__Long__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Long__Impl) Java__lang__Long__InitDispatch(v Java__lang__Long__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Long__Impl) Instance_Init__desc__J__ret__V(var0 int64) {
	this._dispatch.Impl__Instance_Init__desc__J__ret__V(var0)
}

func (this *Java__lang__Long__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Long__Impl) CompareTo__desc____obj__Java__lang__Long__ret__I(var0 Java__lang__Long__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(var0)
}

func (this *Java__lang__Long__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Long__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	CompareTo__desc____obj__Java__lang__Long__ret__I(Java__lang__Long__Instance) int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Long() *Java__lang__Long__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Long__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Long__Dispatch
	Value     int64
}

func (this *Java__lang__Long__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Long.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Long__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Long.byteValue()B")
}

func (this *Java__lang__Long__Impl) Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(var0 Java__lang__Long__Instance) int {
	panic("Method not implemented - java/lang/Long.compareTo(Ljava/lang/Long;)I")
}

func (this *Java__lang__Long__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Long.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Long__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Long.doubleValue()D")
}

func (this *Java__lang__Long__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Long.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Long__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Long.floatValue()F")
}

func (this *Java__lang__Long__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Long.hashCode()I")
}

func (this *Java__lang__Long__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Long.intValue()I")
}

func (this *Java__lang__Long__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Long.shortValue()S")
}

func (this *Java__lang__Long__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Long.toString()Ljava/lang/String;")
}

func (this *Java__lang__Long__Impl) RawPtr__Java__lang__Long() *Java__lang__Long__Impl {
	return this
}

func (this *Java__lang__Long__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Long__innerclass__LongCache__Static struct {
	Cache ObjectArray__Instance
	init  sync.Once
}

var Java__lang__Long__innerclass__LongCache__Var Java__lang__Long__innerclass__LongCache__Static

func Java__lang__Long__innerclass__LongCache() *Java__lang__Long__innerclass__LongCache__Static {
	Java__lang__Long__innerclass__LongCache__Var.init.Do(Java__lang__Long__innerclass__LongCache__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Long__innerclass__LongCache__Var
}

func (this *Java__lang__Long__innerclass__LongCache__Static) New() *Java__lang__Long__innerclass__LongCache__Impl {
	v := &Java__lang__Long__innerclass__LongCache__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Long__innerclass__LongCache__InitDispatch(v)
	return v
}

func (this *Java__lang__Long__innerclass__LongCache__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Long__innerclass__LongCache__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Long__innerclass__LongCache__Impl) Java__lang__Long__innerclass__LongCache__InitDispatch(v Java__lang__Long__innerclass__LongCache__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Long__innerclass__LongCache__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Long__innerclass__LongCache() *Java__lang__Long__innerclass__LongCache__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Long__innerclass__LongCache__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Long__innerclass__LongCache__Dispatch
}

func (this *Java__lang__Long__innerclass__LongCache__Impl) RawPtr__Java__lang__Long__innerclass__LongCache() *Java__lang__Long__innerclass__LongCache__Impl {
	return this
}

func (this *Java__lang__Long__innerclass__LongCache__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__NegativeArraySizeException__Static struct{}

var Java__lang__NegativeArraySizeException__Var Java__lang__NegativeArraySizeException__Static

func Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Static {
	return &Java__lang__NegativeArraySizeException__Var
}

func (this *Java__lang__NegativeArraySizeException__Static) New() *Java__lang__NegativeArraySizeException__Impl {
	v := &Java__lang__NegativeArraySizeException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__NegativeArraySizeException__InitDispatch(v)
	return v
}

type Java__lang__NegativeArraySizeException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__NegativeArraySizeException__Impl) Java__lang__NegativeArraySizeException__InitDispatch(v Java__lang__NegativeArraySizeException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__NegativeArraySizeException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__NegativeArraySizeException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__NegativeArraySizeException__Dispatch
}

func (this *Java__lang__NegativeArraySizeException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/NegativeArraySizeException.<init>()V")
}

func (this *Java__lang__NegativeArraySizeException__Impl) RawPtr__Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Impl {
	return this
}

func (this *Java__lang__NegativeArraySizeException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__NullPointerException__Static struct{}

var Java__lang__NullPointerException__Var Java__lang__NullPointerException__Static

func Java__lang__NullPointerException() *Java__lang__NullPointerException__Static {
	return &Java__lang__NullPointerException__Var
}

func (this *Java__lang__NullPointerException__Static) New() *Java__lang__NullPointerException__Impl {
	v := &Java__lang__NullPointerException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__NullPointerException__InitDispatch(v)
	return v
}

type Java__lang__NullPointerException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Java__lang__NullPointerException__InitDispatch(v Java__lang__NullPointerException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__NullPointerException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__NullPointerException() *Java__lang__NullPointerException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__NullPointerException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__NullPointerException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/NullPointerException.<init>()V")
}

func (this *Java__lang__NullPointerException__Impl) RawPtr__Java__lang__NullPointerException() *Java__lang__NullPointerException__Impl {
	return this
}

func (this *Java__lang__NullPointerException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Number__Static struct{}

var Java__lang__Number__Var Java__lang__Number__Static

func Java__lang__Number() *Java__lang__Number__Static {
	return &Java__lang__Number__Var
}

func (this *Java__lang__Number__Static) New() *Java__lang__Number__Impl {
	v := &Java__lang__Number__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Number__InitDispatch(v)
	return v
}

type Java__lang__Number__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__ByteValue__desc____ret__B() int8
	Impl__DoubleValue__desc____ret__D() float64
	Impl__FloatValue__desc____ret__F() float32
	Impl__IntValue__desc____ret__I() int
	Impl__LongValue__desc____ret__J() int64
	Impl__ShortValue__desc____ret__S() int16
}

func (this *Java__lang__Number__Impl) Java__lang__Number__InitDispatch(v Java__lang__Number__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Number__Impl) ByteValue__desc____ret__B() int8 {
	return this._dispatch.Impl__ByteValue__desc____ret__B()
}

func (this *Java__lang__Number__Impl) DoubleValue__desc____ret__D() float64 {
	return this._dispatch.Impl__DoubleValue__desc____ret__D()
}

func (this *Java__lang__Number__Impl) FloatValue__desc____ret__F() float32 {
	return this._dispatch.Impl__FloatValue__desc____ret__F()
}

func (this *Java__lang__Number__Impl) IntValue__desc____ret__I() int {
	return this._dispatch.Impl__IntValue__desc____ret__I()
}

func (this *Java__lang__Number__Impl) LongValue__desc____ret__J() int64 {
	return this._dispatch.Impl__LongValue__desc____ret__J()
}

func (this *Java__lang__Number__Impl) ShortValue__desc____ret__S() int16 {
	return this._dispatch.Impl__ShortValue__desc____ret__S()
}

type Java__lang__Number__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Number__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Number__Dispatch
}

func (this *Java__lang__Number__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Number.<init>()V")
}

func (this *Java__lang__Number__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Number.byteValue()B")
}

func (this *Java__lang__Number__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Number.doubleValue()D")
}

func (this *Java__lang__Number__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Number.floatValue()F")
}

func (this *Java__lang__Number__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Number.intValue()I")
}

func (this *Java__lang__Number__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Number.longValue()J")
}

func (this *Java__lang__Number__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Number.shortValue()S")
}

func (this *Java__lang__Number__Impl) RawPtr__Java__lang__Number() *Java__lang__Number__Impl {
	return this
}

func (this *Java__lang__Number__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Object__Static struct {
	init sync.Once
}

var Java__lang__Object__Var Java__lang__Object__Static

func Java__lang__Object() *Java__lang__Object__Static {
	Java__lang__Object__Var.init.Do(Java__lang__Object__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Object__Var
}

func (this *Java__lang__Object__Static) New() *Java__lang__Object__Impl {
	v := &Java__lang__Object__Impl{}
	v.Java__lang__Object__InitDispatch(v)
	return v
}

func (this *Java__lang__Object__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Object__Dispatch interface {
	Impl__Instance_Init__desc____ret__V()
	Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__Finalize__desc____ret__V()
	Impl__GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__HashCode__desc____ret__I() int
	Impl__Notify__desc____ret__V()
	Impl__NotifyAll__desc____ret__V()
	Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Wait__desc____ret__V()
	Impl__Wait__desc__J__ret__V(int64)
	Impl__Wait__desc__J__I__ret__V(int64, int)
	Impl_Self() Java__lang__Object__Instance
}

func (this *Java__lang__Object__Impl) Java__lang__Object__InitDispatch(v Java__lang__Object__Dispatch) {
	this._dispatch = v
}

func (this *Java__lang__Object__Impl) Instance_Init__desc____ret__V() {
	this._dispatch.Impl__Instance_Init__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Clone__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Object__Impl) Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__Object__Impl) Finalize__desc____ret__V() {
	this._dispatch.Impl__Finalize__desc____ret__V()
}

func (this *Java__lang__Object__Impl) GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Object__Impl) HashCode__desc____ret__I() int {
	return this._dispatch.Impl__HashCode__desc____ret__I()
}

func (this *Java__lang__Object__Impl) Notify__desc____ret__V() {
	this._dispatch.Impl__Notify__desc____ret__V()
}

func (this *Java__lang__Object__Impl) NotifyAll__desc____ret__V() {
	this._dispatch.Impl__NotifyAll__desc____ret__V()
}

func (this *Java__lang__Object__Impl) ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToString__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Object__Impl) Wait__desc____ret__V() {
	this._dispatch.Impl__Wait__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Wait__desc__J__ret__V(var0 int64) {
	this._dispatch.Impl__Wait__desc__J__ret__V(var0)
}

func (this *Java__lang__Object__Impl) Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	this._dispatch.Impl__Wait__desc__J__I__ret__V(var0, var1)
}

func (this *Java__lang__Object__Impl) Self() Java__lang__Object__Instance {
	return this._dispatch.Impl_Self()
}

type Java__lang__Object__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Object__Impl struct {
	_dispatch Java__lang__Object__Dispatch
}

func (this *Java__lang__Object__Impl) Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/Object.clone()Ljava/lang/Object;")
}

func (this *Java__lang__Object__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Object.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Object__Impl) Impl__Finalize__desc____ret__V() {
	panic("Method not implemented - java/lang/Object.finalize()V")
}

func (this *Java__lang__Object__Impl) Impl__Notify__desc____ret__V() {
	panic("Method not implemented - java/lang/Object.notify()V")
}

func (this *Java__lang__Object__Impl) Impl__NotifyAll__desc____ret__V() {
	panic("Method not implemented - java/lang/Object.notifyAll()V")
}

func (this *Java__lang__Object__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Object.toString()Ljava/lang/String;")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc____ret__V() {
	panic("Method not implemented - java/lang/Object.wait()V")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__ret__V(var0 int64) {
	panic("Method not implemented - java/lang/Object.wait(J)V")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	panic("Method not implemented - java/lang/Object.wait(JI)V")
}

func (this *Java__lang__Object__Impl) RawPtr__Java__lang__Object() *Java__lang__Object__Impl {
	return this
}

func (this *Java__lang__Object__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Runnable__Static struct{}

var Java__lang__Runnable__Var Java__lang__Runnable__Static

func Java__lang__Runnable() *Java__lang__Runnable__Static {
	return &Java__lang__Runnable__Var
}

type Java__lang__Runnable__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Run__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Runnable__dynproxy____Static struct{}

var Java__lang__Runnable__dynproxy____Var Java__lang__Runnable__dynproxy____Static

func Java__lang__Runnable__dynproxy__() *Java__lang__Runnable__dynproxy____Static {
	return &Java__lang__Runnable__dynproxy____Var
}

func (this *Java__lang__Runnable__dynproxy____Static) New() *Java__lang__Runnable__dynproxy____Impl {
	v := &Java__lang__Runnable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Runnable__dynproxy____InitDispatch(v)
	return v
}

type Java__lang__Runnable__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret__V()
}

func (this *Java__lang__Runnable__dynproxy____Impl) Java__lang__Runnable__dynproxy____InitDispatch(v Java__lang__Runnable__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Runnable__dynproxy____Impl) Run__desc____ret__V() {
	this._dispatch.Impl__Run__desc____ret__V()
}

type Java__lang__Runnable__dynproxy____Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Run__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Runnable__dynproxy__() *Java__lang__Runnable__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Runnable__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Runnable__dynproxy____Dispatch
	fn        func()
}

func (this *Java__lang__Runnable__dynproxy____Impl) RawPtr__Java__lang__Runnable__dynproxy__() *Java__lang__Runnable__dynproxy____Impl {
	return this
}

func (this *Java__lang__Runnable__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__lang__Runnable__Static) DynProxy_Create(fn func()) Java__lang__Runnable__Instance {
	v := &Java__lang__Runnable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__lang__Runnable__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__lang__Runnable__dynproxy____Impl) Impl__Run__desc____ret__V() {
	this.fn()
}

type Java__lang__RuntimeException__Static struct {
	SerialVersionUID int64
}

var Java__lang__RuntimeException__Var Java__lang__RuntimeException__Static

func Java__lang__RuntimeException() *Java__lang__RuntimeException__Static {
	return &Java__lang__RuntimeException__Var
}

func (this *Java__lang__RuntimeException__Static) New() *Java__lang__RuntimeException__Impl {
	v := &Java__lang__RuntimeException__Impl{
		Java__lang__Exception__Impl: Java__lang__Exception().New(),
	}
	v.Java__lang__RuntimeException__InitDispatch(v)
	return v
}

type Java__lang__RuntimeException__Dispatch interface {
	Java__lang__Exception__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Java__lang__RuntimeException__InitDispatch(v Java__lang__RuntimeException__Dispatch) {
	this.Java__lang__Exception__Impl.Java__lang__Exception__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__RuntimeException__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__RuntimeException__Impl struct {
	*Java__lang__Exception__Impl
	_dispatch Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/RuntimeException.<init>()V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Method not implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/RuntimeException.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__RuntimeException__Impl) RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl {
	return this
}

func (this *Java__lang__RuntimeException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Short__Static struct {
	BYTES     int
	MAX_VALUE int16
	MIN_VALUE int16
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Short__Var Java__lang__Short__Static

func Java__lang__Short() *Java__lang__Short__Static {
	Java__lang__Short__Var.init.Do(Java__lang__Short__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Short__Var
}

func (this *Java__lang__Short__Static) New() *Java__lang__Short__Impl {
	v := &Java__lang__Short__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Short__InitDispatch(v)
	return v
}

func (this *Java__lang__Short__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__Short__Static) Impl__Compare__desc__S__S__ret__I(var0 int16, var1 int16) int {
	panic("Method not implemented - java/lang/Short.compare(SS)I")
}

func (this *Java__lang__Short__Static) Impl__CompareUnsigned__desc__S__S__ret__I(var0 int16, var1 int16) int {
	panic("Method not implemented - java/lang/Short.compareUnsigned(SS)I")
}

func (this *Java__lang__Short__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance) Java__lang__Short__Instance {
	panic("Method not implemented - java/lang/Short.decode(Ljava/lang/String;)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__HashCode__desc__S__ret__I(var0 int16) int {
	panic("Method not implemented - java/lang/Short.hashCode(S)I")
}

func (this *Java__lang__Short__Static) Impl__ParseShort__desc____obj__Java__lang__String__ret__S(var0 Java__lang__String__Instance) int16 {
	panic("Method not implemented - java/lang/Short.parseShort(Ljava/lang/String;)S")
}

func (this *Java__lang__Short__Static) Impl__ParseShort__desc____obj__Java__lang__String__I__ret__S(var0 Java__lang__String__Instance, var1 int) int16 {
	panic("Method not implemented - java/lang/Short.parseShort(Ljava/lang/String;I)S")
}

func (this *Java__lang__Short__Static) Impl__ReverseBytes__desc__S__ret__S(var0 int16) int16 {
	panic("Method not implemented - java/lang/Short.reverseBytes(S)S")
}

func (this *Java__lang__Short__Static) Impl__ToString__desc__S__ret____obj__Java__lang__String(var0 int16) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Short.toString(S)Ljava/lang/String;")
}

func (this *Java__lang__Short__Static) Impl__ToUnsignedInt__desc__S__ret__I(var0 int16) int {
	panic("Method not implemented - java/lang/Short.toUnsignedInt(S)I")
}

func (this *Java__lang__Short__Static) Impl__ToUnsignedLong__desc__S__ret__J(var0 int16) int64 {
	panic("Method not implemented - java/lang/Short.toUnsignedLong(S)J")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance) Java__lang__Short__Instance {
	panic("Method not implemented - java/lang/Short.valueOf(Ljava/lang/String;)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance, var1 int) Java__lang__Short__Instance {
	panic("Method not implemented - java/lang/Short.valueOf(Ljava/lang/String;I)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc__S__ret____obj__Java__lang__Short(var0 int16) Java__lang__Short__Instance {
	panic("Method not implemented - java/lang/Short.valueOf(S)Ljava/lang/Short;")
}

type Java__lang__Short__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc__S__ret__V(int16)
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(Java__lang__Short__Instance) int
}

func (this *Java__lang__Short__Impl) Java__lang__Short__InitDispatch(v Java__lang__Short__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Short__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Short__Impl) Instance_Init__desc__S__ret__V(var0 int16) {
	this._dispatch.Impl__Instance_Init__desc__S__ret__V(var0)
}

func (this *Java__lang__Short__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Short__Impl) CompareTo__desc____obj__Java__lang__Short__ret__I(var0 Java__lang__Short__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(var0)
}

type Java__lang__Short__Instance interface {
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	ByteValue__desc____ret__B() int8
	IntValue__desc____ret__I() int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	LongValue__desc____ret__J() int64
	ShortValue__desc____ret__S() int16
	CompareTo__desc____obj__Java__lang__Short__ret__I(Java__lang__Short__Instance) int
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Short() *Java__lang__Short__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Short__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Short__Dispatch
	Value     int16
}

func (this *Java__lang__Short__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/Short.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Short__Impl) Impl__Instance_Init__desc__S__ret__V(var0 int16) {
	panic("Method not implemented - java/lang/Short.<init>(S)V")
}

func (this *Java__lang__Short__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/Short.byteValue()B")
}

func (this *Java__lang__Short__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/Short.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Short__Impl) Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(var0 Java__lang__Short__Instance) int {
	panic("Method not implemented - java/lang/Short.compareTo(Ljava/lang/Short;)I")
}

func (this *Java__lang__Short__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Method not implemented - java/lang/Short.doubleValue()D")
}

func (this *Java__lang__Short__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/Short.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Short__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Method not implemented - java/lang/Short.floatValue()F")
}

func (this *Java__lang__Short__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/Short.hashCode()I")
}

func (this *Java__lang__Short__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Method not implemented - java/lang/Short.intValue()I")
}

func (this *Java__lang__Short__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/Short.longValue()J")
}

func (this *Java__lang__Short__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Method not implemented - java/lang/Short.shortValue()S")
}

func (this *Java__lang__Short__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Short.toString()Ljava/lang/String;")
}

func (this *Java__lang__Short__Impl) RawPtr__Java__lang__Short() *Java__lang__Short__Impl {
	return this
}

func (this *Java__lang__Short__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Short__innerclass__ShortCache__Static struct {
	Cache ObjectArray__Instance
	init  sync.Once
}

var Java__lang__Short__innerclass__ShortCache__Var Java__lang__Short__innerclass__ShortCache__Static

func Java__lang__Short__innerclass__ShortCache() *Java__lang__Short__innerclass__ShortCache__Static {
	Java__lang__Short__innerclass__ShortCache__Var.init.Do(Java__lang__Short__innerclass__ShortCache__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Short__innerclass__ShortCache__Var
}

func (this *Java__lang__Short__innerclass__ShortCache__Static) New() *Java__lang__Short__innerclass__ShortCache__Impl {
	v := &Java__lang__Short__innerclass__ShortCache__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Short__innerclass__ShortCache__InitDispatch(v)
	return v
}

func (this *Java__lang__Short__innerclass__ShortCache__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Short__innerclass__ShortCache__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Short__innerclass__ShortCache__Impl) Java__lang__Short__innerclass__ShortCache__InitDispatch(v Java__lang__Short__innerclass__ShortCache__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Short__innerclass__ShortCache__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Short__innerclass__ShortCache() *Java__lang__Short__innerclass__ShortCache__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Short__innerclass__ShortCache__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Short__innerclass__ShortCache__Dispatch
}

func (this *Java__lang__Short__innerclass__ShortCache__Impl) RawPtr__Java__lang__Short__innerclass__ShortCache() *Java__lang__Short__innerclass__ShortCache__Impl {
	return this
}

func (this *Java__lang__Short__innerclass__ShortCache__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__String__Static struct {
	CASE_INSENSITIVE_ORDER Java__util__Comparator__Instance
	COMPACT_STRINGS        bool
	LATIN1                 int8
	UTF16                  int8
	init                   sync.Once
}

var Java__lang__String__Var Java__lang__String__Static

func Java__lang__String() *Java__lang__String__Static {
	Java__lang__String__Var.init.Do(Java__lang__String__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__String__Var
}

func (this *Java__lang__String__Static) New() *Java__lang__String__Impl {
	v := &Java__lang__String__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__String__InitDispatch(v)
	return v
}

func (this *Java__lang__String__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__Access__dollar__100__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) ByteArray__Instance {
	panic("Method not implemented - java/lang/String.access$100(Ljava/lang/String;)[B")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__Access__dollar__200__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/String.access$200(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__CheckBoundsOffCount__desc__I__I__I__ret__V(var0 int, var1 int, var2 int) {
	panic("Method not implemented - java/lang/String.checkBoundsOffCount(III)V")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__CheckIndex__desc__I__I__ret__V(var0 int, var1 int) {
	panic("Method not implemented - java/lang/String.checkIndex(II)V")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__CheckOffset__desc__I__I__ret__V(var0 int, var1 int) {
	panic("Method not implemented - java/lang/String.checkOffset(II)V")
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.copyValueOf([C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 CharArray__Instance, var1 int, var2 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.copyValueOf([CII)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__Format__desc____obj__Java__lang__String____arr____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 ObjectArray__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__IndexOf__desc____arr__B__B__I____obj__Java__lang__String__I__ret__I(var0 ByteArray__Instance, var1 int8, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Method not implemented - java/lang/String.indexOf([BBILjava/lang/String;I)I")
}

func (this *Java__lang__String__Static) Impl__Join__desc____obj__Java__lang__CharSequence____arr____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 ObjectArray__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.join(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__PrivTo__Java__lang__LastIndexOf__desc____arr__B__B__I____obj__Java__lang__String__I__ret__I(var0 ByteArray__Instance, var1 int8, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Method not implemented - java/lang/String.lastIndexOf([BBILjava/lang/String;I)I")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__C__ret____obj__Java__lang__String(var0 rune) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(D)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(F)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(I)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(J)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__Object__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__Z__ret____obj__Java__lang__String(var0 bool) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf(Z)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf([C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 CharArray__Instance, var1 int, var2 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.valueOf([CII)Ljava/lang/String;")
}

type Java__lang__String__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__AbstractStringBuilder____obj__Java__lang__Void__ret__V(Java__lang__AbstractStringBuilder__Instance, Java__lang__Void__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(Java__lang__StringBuilder__Instance)
	Impl__Instance_Init__desc____arr__B__ret__V(ByteArray__Instance)
	Impl__Instance_Init__desc____arr__B__B__ret__V(ByteArray__Instance, int8)
	Impl__Instance_Init__desc____arr__B__I__ret__V(ByteArray__Instance, int)
	Impl__Instance_Init__desc____arr__B__I__I__ret__V(ByteArray__Instance, int, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(ByteArray__Instance, int, int, int)
	Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(ByteArray__Instance, int, int, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(ByteArray__Instance, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__C__ret__V(CharArray__Instance)
	Impl__Instance_Init__desc____arr__C__I__I__ret__V(CharArray__Instance, int, int)
	Impl__Instance_Init__desc____arr__C__I__I____obj__Java__lang__Void__ret__V(CharArray__Instance, int, int, Java__lang__Void__Instance)
	Impl__Instance_Init__desc____arr__C__Z__ret__V(CharArray__Instance, bool)
	Impl__Instance_Init__desc____arr__I__I__I__ret__V(IntArray__Instance, int, int)
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__PrivTo__Java__lang__Coder__desc____ret__B() int8
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__GetBytes__desc____ret____arr__B() ByteArray__Instance
	Impl__GetBytes__desc__I__I____arr__B__I__ret__V(int, int, ByteArray__Instance, int)
	Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) ByteArray__Instance
	Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(ByteArray__Instance, int, int8)
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Impl__IndexOf__desc__I__ret__I(int) int
	Impl__IndexOf__desc__I__I__ret__I(int, int) int
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__IsEmpty__desc____ret__Z() bool
	Impl__LastIndexOf__desc__I__ret__I(int) int
	Impl__LastIndexOf__desc__I__I__ret__I(int, int) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	Impl__Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) ObjectArray__Instance
	Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) ObjectArray__Instance
	Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__ToCharArray__desc____ret____arr__C() CharArray__Instance
	Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__String__Impl) Java__lang__String__InitDispatch(v Java__lang__String__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__AbstractStringBuilder____obj__Java__lang__Void__ret__V(var0 Java__lang__AbstractStringBuilder__Instance, var1 Java__lang__Void__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__AbstractStringBuilder____obj__Java__lang__Void__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__ret__V(var0 ByteArray__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__B__ret__V(var0 ByteArray__Instance, var1 int8) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__B__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__ret__V(var0 CharArray__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__I__I____obj__Java__lang__Void__ret__V(var0 CharArray__Instance, var1 int, var2 int, var3 Java__lang__Void__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__I__I____obj__Java__lang__Void__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__Z__ret__V(var0 CharArray__Instance, var1 bool) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__Z__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__I__I__I__ret__V(var0 IntArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__String__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) PrivTo__Java__lang__Coder__desc____ret__B() int8 {
	return this._dispatch.Impl__PrivTo__Java__lang__Coder__desc____ret__B()
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) GetBytes__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__GetBytes__desc____ret____arr__B()
}

func (this *Java__lang__String__Impl) GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int) {
	this._dispatch.Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) ByteArray__Instance {
	return this._dispatch.Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0)
}

func (this *Java__lang__String__Impl) PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0 ByteArray__Instance, var1 int, var2 int8) {
	this._dispatch.Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Intern__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) IsEmpty__desc____ret__Z() bool {
	return this._dispatch.Impl__IsEmpty__desc____ret__Z()
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__String__Impl) Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3, var4)
}

func (this *Java__lang__String__Impl) Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) ObjectArray__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) ObjectArray__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0, var1)
}

func (this *Java__lang__String__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__String__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ToCharArray__desc____ret____arr__C() CharArray__Instance {
	return this._dispatch.Impl__ToCharArray__desc____ret____arr__C()
}

func (this *Java__lang__String__Impl) ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToLowerCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToUpperCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Trim__desc____ret____obj__Java__lang__String()
}

type Java__lang__String__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	PrivTo__Java__lang__Coder__desc____ret__B() int8
	CodePointCount__desc__I__I__ret__I(int, int) int
	Finalize__desc____ret__V()
	CharAt__desc__I__ret__C(int) rune
	RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	GetBytes__desc__I__I____arr__B__I__ret__V(int, int, ByteArray__Instance, int)
	GetBytes__desc____ret____arr__B() ByteArray__Instance
	ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	HashCode__desc____ret__I() int
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) ObjectArray__Instance
	Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	IndexOf__desc__I__ret__I(int) int
	PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(ByteArray__Instance, int, int8)
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsEmpty__desc____ret__Z() bool
	GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) ByteArray__Instance
	ToCharArray__desc____ret____arr__C() CharArray__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	CodePointAt__desc__I__ret__I(int) int
	ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IndexOf__desc__I__I__ret__I(int, int) int
	Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) ObjectArray__Instance
	Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	CodePointBefore__desc__I__ret__I(int) int
	Wait__desc__J__I__ret__V(int64, int)
	ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc__I__ret__I(int) int
	RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	LastIndexOf__desc__I__I__ret__I(int, int) int
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Length__desc____ret__I() int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Notify__desc____ret__V()
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	RawPtr__Java__lang__String() *Java__lang__String__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__String__Impl struct {
	*Java__lang__Object__Impl
	_dispatch  Java__lang__String__Dispatch
	Underlying string
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/String.<init>()V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__AbstractStringBuilder____obj__Java__lang__Void__ret__V(var0 Java__lang__AbstractStringBuilder__Instance, var1 Java__lang__Void__Instance) {
	panic("Method not implemented - java/lang/String.<init>(Ljava/lang/AbstractStringBuilder;Ljava/lang/Void;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/String.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	panic("Method not implemented - java/lang/String.<init>(Ljava/lang/StringBuilder;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__ret__V(var0 ByteArray__Instance) {
	panic("Method not implemented - java/lang/String.<init>([B)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__B__ret__V(var0 ByteArray__Instance, var1 int8) {
	panic("Method not implemented - java/lang/String.<init>([BB)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	panic("Method not implemented - java/lang/String.<init>([BI)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int) {
	panic("Method not implemented - java/lang/String.<init>([BII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	panic("Method not implemented - java/lang/String.<init>([BIII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/String.<init>([BIILjava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/String.<init>([BLjava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__ret__V(var0 CharArray__Instance) {
	panic("Method not implemented - java/lang/String.<init>([C)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	panic("Method not implemented - java/lang/String.<init>([CII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__I__I____obj__Java__lang__Void__ret__V(var0 CharArray__Instance, var1 int, var2 int, var3 Java__lang__Void__Instance) {
	panic("Method not implemented - java/lang/String.<init>([CIILjava/lang/Void;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__Z__ret__V(var0 CharArray__Instance, var1 bool) {
	panic("Method not implemented - java/lang/String.<init>([CZ)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0 IntArray__Instance, var1 int, var2 int) {
	panic("Method not implemented - java/lang/String.<init>([III)V")
}

func (this *Java__lang__String__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Method not implemented - java/lang/String.charAt(I)C")
}

func (this *Java__lang__String__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/String.codePointAt(I)I")
}

func (this *Java__lang__String__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/String.codePointBefore(I)I")
}

func (this *Java__lang__String__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/String.codePointCount(II)I")
}

func (this *Java__lang__String__Impl) Impl__PrivTo__Java__lang__Coder__desc____ret__B() int8 {
	panic("Method not implemented - java/lang/String.coder()B")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/String.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/String.compareTo(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/String.compareToIgnoreCase(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.concat(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Method not implemented - java/lang/String.contains(Ljava/lang/CharSequence;)Z")
}

func (this *Java__lang__String__Impl) Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Method not implemented - java/lang/String.contentEquals(Ljava/lang/CharSequence;)Z")
}

func (this *Java__lang__String__Impl) Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/String.endsWith(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/String.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__String__Impl) Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____ret____arr__B() ByteArray__Instance {
	panic("Method not implemented - java/lang/String.getBytes()[B")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int) {
	panic("Method not implemented - java/lang/String.getBytes(II[BI)V")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) ByteArray__Instance {
	panic("Method not implemented - java/lang/String.getBytes(Ljava/lang/String;)[B")
}

func (this *Java__lang__String__Impl) Impl__PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(var0 ByteArray__Instance, var1 int, var2 int8) {
	panic("Method not implemented - java/lang/String.getBytes([BIB)V")
}

func (this *Java__lang__String__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Method not implemented - java/lang/String.getChars(II[CI)V")
}

func (this *Java__lang__String__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Method not implemented - java/lang/String.hashCode()I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/String.indexOf(I)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/String.indexOf(II)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/String.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/String.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__String__Impl) Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.intern()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__IsEmpty__desc____ret__Z() bool {
	panic("Method not implemented - java/lang/String.isEmpty()Z")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/String.lastIndexOf(I)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/String.lastIndexOf(II)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/String.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/String.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__String__Impl) Impl__Length__desc____ret__I() int {
	panic("Method not implemented - java/lang/String.length()I")
}

func (this *Java__lang__String__Impl) Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/String.matches(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/String.offsetByCodePoints(II)I")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	panic("Method not implemented - java/lang/String.regionMatches(ILjava/lang/String;II)Z")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	panic("Method not implemented - java/lang/String.regionMatches(ZILjava/lang/String;II)Z")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.replace(CC)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.replaceFirst(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) ObjectArray__Instance {
	panic("Method not implemented - java/lang/String.split(Ljava/lang/String;)[Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) ObjectArray__Instance {
	panic("Method not implemented - java/lang/String.split(Ljava/lang/String;I)[Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Method not implemented - java/lang/String.startsWith(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	panic("Method not implemented - java/lang/String.startsWith(Ljava/lang/String;I)Z")
}

func (this *Java__lang__String__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Method not implemented - java/lang/String.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToCharArray__desc____ret____arr__C() CharArray__Instance {
	panic("Method not implemented - java/lang/String.toCharArray()[C")
}

func (this *Java__lang__String__Impl) Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.toLowerCase()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.toString()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.toUpperCase()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/String.trim()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) RawPtr__Java__lang__String() *Java__lang__String__Impl {
	return this
}

func (this *Java__lang__String__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__String__innerclass__1__Static struct{}

var Java__lang__String__innerclass__1__Var Java__lang__String__innerclass__1__Static

func Java__lang__String__innerclass__1() *Java__lang__String__innerclass__1__Static {
	return &Java__lang__String__innerclass__1__Var
}

func (this *Java__lang__String__innerclass__1__Static) New() *Java__lang__String__innerclass__1__Impl {
	v := &Java__lang__String__innerclass__1__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__String__innerclass__1__InitDispatch(v)
	return v
}

type Java__lang__String__innerclass__1__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__String__innerclass__1__Impl) Java__lang__String__innerclass__1__InitDispatch(v Java__lang__String__innerclass__1__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__String__innerclass__1__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__String__innerclass__1() *Java__lang__String__innerclass__1__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__String__innerclass__1__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__String__innerclass__1__Dispatch
}

func (this *Java__lang__String__innerclass__1__Impl) RawPtr__Java__lang__String__innerclass__1() *Java__lang__String__innerclass__1__Impl {
	return this
}

func (this *Java__lang__String__innerclass__1__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__String__innerclass__CaseInsensitiveComparator__Static struct{}

var Java__lang__String__innerclass__CaseInsensitiveComparator__Var Java__lang__String__innerclass__CaseInsensitiveComparator__Static

func Java__lang__String__innerclass__CaseInsensitiveComparator() *Java__lang__String__innerclass__CaseInsensitiveComparator__Static {
	return &Java__lang__String__innerclass__CaseInsensitiveComparator__Var
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Static) New() *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl {
	v := &Java__lang__String__innerclass__CaseInsensitiveComparator__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__String__innerclass__CaseInsensitiveComparator__InitDispatch(v)
	return v
}

type Java__lang__String__innerclass__CaseInsensitiveComparator__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__innerclass__1__ret__V(Java__lang__String__innerclass__1__Instance)
	Impl__Compare__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance, Java__lang__Object__Instance) int
	Impl__Compare__desc____obj__Java__lang__String____obj__Java__lang__String__ret__I(Java__lang__String__Instance, Java__lang__String__Instance) int
	Impl__Reversed__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	Impl__ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(Java__util__Comparator__Instance) Java__util__Comparator__Instance
	Impl__ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(Java__util__function__Function__Instance) Java__util__Comparator__Instance
	Impl__ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(Java__util__function__Function__Instance, Java__util__Comparator__Instance) Java__util__Comparator__Instance
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Java__lang__String__innerclass__CaseInsensitiveComparator__InitDispatch(v Java__lang__String__innerclass__CaseInsensitiveComparator__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Instance_Init__desc____obj__Java__lang__String__innerclass__1__ret__V(var0 Java__lang__String__innerclass__1__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__innerclass__1__ret__V(var0)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Compare__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__Compare__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__I(var0, var1)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Compare__desc____obj__Java__lang__String____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) int {
	return this._dispatch.Impl__Compare__desc____obj__Java__lang__String____obj__Java__lang__String__ret__I(var0, var1)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Reversed__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return this._dispatch.Impl__Reversed__desc____ret____obj__Java__util__Comparator()
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0 Java__util__Comparator__Instance) Java__util__Comparator__Instance {
	return this._dispatch.Impl__ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(var0 Java__util__function__Function__Instance) Java__util__Comparator__Instance {
	return this._dispatch.Impl__ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(var0)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0 Java__util__function__Function__Instance, var1 Java__util__Comparator__Instance) Java__util__Comparator__Instance {
	return this._dispatch.Impl__ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0, var1)
}

type Java__lang__String__innerclass__CaseInsensitiveComparator__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(Java__util__Comparator__Instance) Java__util__Comparator__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(Java__util__function__Function__Instance) Java__util__Comparator__Instance
	ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(Java__util__function__Function__Instance, Java__util__Comparator__Instance) Java__util__Comparator__Instance
	Reversed__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	Compare__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance, Java__lang__Object__Instance) int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	Compare__desc____obj__Java__lang__String____obj__Java__lang__String__ret__I(Java__lang__String__Instance, Java__lang__String__Instance) int
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__String__innerclass__CaseInsensitiveComparator() *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__String__innerclass__CaseInsensitiveComparator__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__String__innerclass__CaseInsensitiveComparator__Dispatch
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__innerclass__1__ret__V(var0 Java__lang__String__innerclass__1__Instance) {
	panic("Method not implemented - java/lang/String$CaseInsensitiveComparator.<init>(Ljava/lang/String$1;)V")
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__Compare__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) int {
	panic("Method not implemented - java/lang/String$CaseInsensitiveComparator.compare(Ljava/lang/Object;Ljava/lang/Object;)I")
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__Compare__desc____obj__Java__lang__String____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/String$CaseInsensitiveComparator.compare(Ljava/lang/String;Ljava/lang/String;)I")
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) RawPtr__Java__lang__String__innerclass__CaseInsensitiveComparator() *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl {
	return this
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__Reversed__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return Java__util__Comparator__defaultmethod__Reversed__desc____ret____obj__Java__util__Comparator(this)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0 Java__util__Comparator__Instance) Java__util__Comparator__Instance {
	return Java__util__Comparator__defaultmethod__ThenComparing__desc____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(this, var0)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(var0 Java__util__function__Function__Instance) Java__util__Comparator__Instance {
	return Java__util__Comparator__defaultmethod__ThenComparing__desc____obj__Java__util__function__Function__ret____obj__Java__util__Comparator(this, var0)
}

func (this *Java__lang__String__innerclass__CaseInsensitiveComparator__Impl) Impl__ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(var0 Java__util__function__Function__Instance, var1 Java__util__Comparator__Instance) Java__util__Comparator__Instance {
	return Java__util__Comparator__defaultmethod__ThenComparing__desc____obj__Java__util__function__Function____obj__Java__util__Comparator__ret____obj__Java__util__Comparator(this, var0, var1)
}

type Java__lang__StringBuilder__Static struct {
	SerialVersionUID int64
}

var Java__lang__StringBuilder__Var Java__lang__StringBuilder__Static

func Java__lang__StringBuilder() *Java__lang__StringBuilder__Static {
	return &Java__lang__StringBuilder__Var
}

func (this *Java__lang__StringBuilder__Static) New() *Java__lang__StringBuilder__Impl {
	v := &Java__lang__StringBuilder__Impl{
		Java__lang__AbstractStringBuilder__Impl: Java__lang__AbstractStringBuilder().New(),
	}
	v.Java__lang__StringBuilder__InitDispatch(v)
	return v
}

type Java__lang__StringBuilder__Dispatch interface {
	Java__lang__AbstractStringBuilder__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(Java__lang__CharSequence__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(CharArray__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
}

func (this *Java__lang__StringBuilder__Impl) Java__lang__StringBuilder__InitDispatch(v Java__lang__StringBuilder__Dispatch) {
	this.Java__lang__AbstractStringBuilder__Impl.Java__lang__AbstractStringBuilder__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder()
}

type Java__lang__StringBuilder__Instance interface {
	Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	SetLength__desc__I__ret__V(int)
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	CodePointCount__desc__I__I__ret__I(int, int) int
	Finalize__desc____ret__V()
	CharAt__desc__I__ret__C(int) rune
	Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__IsLatin1__desc____ret__Z() bool
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Capacity__desc____ret__I() int
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__GetValue__desc____ret____arr__B() ByteArray__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	NotifyAll__desc____ret__V()
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Wait__desc____ret__V()
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	HashCode__desc____ret__I() int
	Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	PrivTo__Java__lang__GetBytes__desc____arr__B__I__B__ret__V(ByteArray__Instance, int, int8)
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	TrimToSize__desc____ret__V()
	Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(CharArray__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	PrivTo__Java__lang__GetCoder__desc____ret__B() int8
	DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	CodePointAt__desc__I__ret__I(int) int
	Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	CodePointBefore__desc__I__ret__I(int) int
	Wait__desc__J__I__ret__V(int64, int)
	Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Wait__desc__J__ret__V(int64)
	Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Length__desc____ret__I() int
	Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance) Java__lang__StringBuilder__Instance
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Notify__desc____ret__V()
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	PrivTo__Java__lang__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	PrivTo__Java__lang__InitBytes__desc____arr__C__I__I__ret__V(CharArray__Instance, int, int)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	FieldGet__Java__lang__AbstractStringBuilder__Coder() int8
	FieldSet__Java__lang__AbstractStringBuilder__Coder(v int8)
	FieldGet__Java__lang__AbstractStringBuilder__Count() int
	FieldSet__Java__lang__AbstractStringBuilder__Count(v int)
	FieldGet__Java__lang__AbstractStringBuilder__Value() ByteArray__Instance
	FieldSet__Java__lang__AbstractStringBuilder__Value(v ByteArray__Instance)
	RawPtr__Java__lang__StringBuilder() *Java__lang__StringBuilder__Impl
	RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringBuilder__Impl struct {
	*Java__lang__AbstractStringBuilder__Impl
	_dispatch  Java__lang__StringBuilder__Dispatch
	Underlying string
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/StringBuilder.<init>(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	panic("Method not implemented - java/lang/StringBuilder.<init>(Ljava/lang/CharSequence;)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/StringBuilder.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(D)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(F)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(J)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append(Z)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append([C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.append([CII)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Method not implemented - java/lang/StringBuilder.capacity()I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Method not implemented - java/lang/StringBuilder.charAt(I)C")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/StringBuilder.codePointAt(I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Method not implemented - java/lang/StringBuilder.codePointBefore(I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/StringBuilder.codePointCount(II)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.delete(II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/StringBuilder.ensureCapacity(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Method not implemented - java/lang/StringBuilder.getChars(II[CI)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/StringBuilder.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/StringBuilder.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(IC)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(ID)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(IF)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(IJ)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(IZ)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(I[C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Method not implemented - java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Method not implemented - java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Method not implemented - java/lang/StringBuilder.length()I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Method not implemented - java/lang/StringBuilder.offsetByCodePoints(II)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	panic("Method not implemented - java/lang/StringBuilder.reverse()Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Method not implemented - java/lang/StringBuilder.setCharAt(IC)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/StringBuilder.setLength(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Method not implemented - java/lang/StringBuilder.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/StringBuilder.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/StringBuilder.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Method not implemented - java/lang/StringBuilder.trimToSize()V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder()
}

func (this *Java__lang__StringBuilder__Impl) RawPtr__Java__lang__StringBuilder() *Java__lang__StringBuilder__Impl {
	return this
}

func (this *Java__lang__StringBuilder__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__StringCoding__innerclass__Result__Static struct{}

var Java__lang__StringCoding__innerclass__Result__Var Java__lang__StringCoding__innerclass__Result__Static

func Java__lang__StringCoding__innerclass__Result() *Java__lang__StringCoding__innerclass__Result__Static {
	return &Java__lang__StringCoding__innerclass__Result__Var
}

func (this *Java__lang__StringCoding__innerclass__Result__Static) New() *Java__lang__StringCoding__innerclass__Result__Impl {
	v := &Java__lang__StringCoding__innerclass__Result__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__StringCoding__innerclass__Result__InitDispatch(v)
	return v
}

type Java__lang__StringCoding__innerclass__Result__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__PrivTo__Java__lang__With__desc____ret____obj__Java__lang__StringCoding__innerclass__Result() Java__lang__StringCoding__innerclass__Result__Instance
	Impl__PrivTo__Java__lang__With__desc____arr__B__B__ret____obj__Java__lang__StringCoding__innerclass__Result(ByteArray__Instance, int8) Java__lang__StringCoding__innerclass__Result__Instance
	Impl__PrivTo__Java__lang__With__desc____arr__C__I__I__ret____obj__Java__lang__StringCoding__innerclass__Result(CharArray__Instance, int, int) Java__lang__StringCoding__innerclass__Result__Instance
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Java__lang__StringCoding__innerclass__Result__InitDispatch(v Java__lang__StringCoding__innerclass__Result__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) PrivTo__Java__lang__With__desc____ret____obj__Java__lang__StringCoding__innerclass__Result() Java__lang__StringCoding__innerclass__Result__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__With__desc____ret____obj__Java__lang__StringCoding__innerclass__Result()
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) PrivTo__Java__lang__With__desc____arr__B__B__ret____obj__Java__lang__StringCoding__innerclass__Result(var0 ByteArray__Instance, var1 int8) Java__lang__StringCoding__innerclass__Result__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__With__desc____arr__B__B__ret____obj__Java__lang__StringCoding__innerclass__Result(var0, var1)
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) PrivTo__Java__lang__With__desc____arr__C__I__I__ret____obj__Java__lang__StringCoding__innerclass__Result(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringCoding__innerclass__Result__Instance {
	return this._dispatch.Impl__PrivTo__Java__lang__With__desc____arr__C__I__I__ret____obj__Java__lang__StringCoding__innerclass__Result(var0, var1, var2)
}

type Java__lang__StringCoding__innerclass__Result__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	PrivTo__Java__lang__With__desc____arr__B__B__ret____obj__Java__lang__StringCoding__innerclass__Result(ByteArray__Instance, int8) Java__lang__StringCoding__innerclass__Result__Instance
	NotifyAll__desc____ret__V()
	PrivTo__Java__lang__With__desc____arr__C__I__I__ret____obj__Java__lang__StringCoding__innerclass__Result(CharArray__Instance, int, int) Java__lang__StringCoding__innerclass__Result__Instance
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	PrivTo__Java__lang__With__desc____ret____obj__Java__lang__StringCoding__innerclass__Result() Java__lang__StringCoding__innerclass__Result__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	FieldGet__Java__lang__StringCoding__innerclass__Result__Coder() int8
	FieldSet__Java__lang__StringCoding__innerclass__Result__Coder(v int8)
	FieldGet__Java__lang__StringCoding__innerclass__Result__Value() ByteArray__Instance
	FieldSet__Java__lang__StringCoding__innerclass__Result__Value(v ByteArray__Instance)
	RawPtr__Java__lang__StringCoding__innerclass__Result() *Java__lang__StringCoding__innerclass__Result__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringCoding__innerclass__Result__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__StringCoding__innerclass__Result__Dispatch
	Coder     int8
	Value     ByteArray__Instance
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) FieldGet__Java__lang__StringCoding__innerclass__Result__Coder() int8 {
	return this.Coder
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) FieldSet__Java__lang__StringCoding__innerclass__Result__Coder(v int8) {
	this.Coder = v
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) FieldGet__Java__lang__StringCoding__innerclass__Result__Value() ByteArray__Instance {
	return this.Value
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) FieldSet__Java__lang__StringCoding__innerclass__Result__Value(v ByteArray__Instance) {
	this.Value = v
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/StringCoding$Result.<init>()V")
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Impl__PrivTo__Java__lang__With__desc____ret____obj__Java__lang__StringCoding__innerclass__Result() Java__lang__StringCoding__innerclass__Result__Instance {
	panic("Method not implemented - java/lang/StringCoding$Result.with()Ljava/lang/StringCoding$Result;")
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Impl__PrivTo__Java__lang__With__desc____arr__B__B__ret____obj__Java__lang__StringCoding__innerclass__Result(var0 ByteArray__Instance, var1 int8) Java__lang__StringCoding__innerclass__Result__Instance {
	panic("Method not implemented - java/lang/StringCoding$Result.with([BB)Ljava/lang/StringCoding$Result;")
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Impl__PrivTo__Java__lang__With__desc____arr__C__I__I__ret____obj__Java__lang__StringCoding__innerclass__Result(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringCoding__innerclass__Result__Instance {
	panic("Method not implemented - java/lang/StringCoding$Result.with([CII)Ljava/lang/StringCoding$Result;")
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) RawPtr__Java__lang__StringCoding__innerclass__Result() *Java__lang__StringCoding__innerclass__Result__Impl {
	return this
}

func (this *Java__lang__StringCoding__innerclass__Result__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__StringLatin1__innerclass__CharsSpliterator__Static struct{}

var Java__lang__StringLatin1__innerclass__CharsSpliterator__Var Java__lang__StringLatin1__innerclass__CharsSpliterator__Static

func Java__lang__StringLatin1__innerclass__CharsSpliterator() *Java__lang__StringLatin1__innerclass__CharsSpliterator__Static {
	return &Java__lang__StringLatin1__innerclass__CharsSpliterator__Var
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Static) New() *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl {
	v := &Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__StringLatin1__innerclass__CharsSpliterator__InitDispatch(v)
	return v
}

type Java__lang__StringLatin1__innerclass__CharsSpliterator__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____arr__B__I__ret__V(ByteArray__Instance, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(ByteArray__Instance, int, int, int)
	Impl__Characteristics__desc____ret__I() int
	Impl__EstimateSize__desc____ret__J() int64
	Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	Impl__GetExactSizeIfKnown__desc____ret__J() int64
	Impl__HasCharacteristics__desc__I__ret__Z(int) bool
	Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Java__lang__StringLatin1__innerclass__CharsSpliterator__InitDispatch(v Java__lang__StringLatin1__innerclass__CharsSpliterator__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Characteristics__desc____ret__I() int {
	return this._dispatch.Impl__Characteristics__desc____ret__I()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) EstimateSize__desc____ret__J() int64 {
	return this._dispatch.Impl__EstimateSize__desc____ret__J()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return this._dispatch.Impl__GetComparator__desc____ret____obj__Java__util__Comparator()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) GetExactSizeIfKnown__desc____ret__J() int64 {
	return this._dispatch.Impl__GetExactSizeIfKnown__desc____ret__J()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return this._dispatch.Impl__HasCharacteristics__desc__I__ret__Z(var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator()
}

type Java__lang__StringLatin1__innerclass__CharsSpliterator__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
	Finalize__desc____ret__V()
	HasCharacteristics__desc__I__ret__Z(int) bool
	TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Characteristics__desc____ret__I() int
	GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	GetExactSizeIfKnown__desc____ret__J() int64
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	EstimateSize__desc____ret__J() int64
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__StringLatin1__innerclass__CharsSpliterator() *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__StringLatin1__innerclass__CharsSpliterator__Dispatch
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.<init>([BI)V")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.<init>([BIII)V")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__Characteristics__desc____ret__I() int {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.characteristics()I")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__EstimateSize__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.estimateSize()J")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.forEachRemaining(Ljava/lang/Object;)V")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.tryAdvance(Ljava/lang/Object;)Z")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	panic("Method not implemented - java/lang/StringLatin1$CharsSpliterator.trySplit()Ljava/util/Spliterator$OfInt;")
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) RawPtr__Java__lang__StringLatin1__innerclass__CharsSpliterator() *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl {
	return this
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	Java__util__Spliterator__innerclass__OfInt__defaultmethod__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(this, var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return Java__util__Spliterator__defaultmethod__GetComparator__desc____ret____obj__Java__util__Comparator(this)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__GetExactSizeIfKnown__desc____ret__J() int64 {
	return Java__util__Spliterator__defaultmethod__GetExactSizeIfKnown__desc____ret__J(this)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return Java__util__Spliterator__defaultmethod__HasCharacteristics__desc__I__ret__Z(this, var0)
}

func (this *Java__lang__StringLatin1__innerclass__CharsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return Java__util__Spliterator__innerclass__OfInt__defaultmethod__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(this, var0)
}

type Java__lang__StringUTF16__innerclass__CharsSpliterator__Static struct{}

var Java__lang__StringUTF16__innerclass__CharsSpliterator__Var Java__lang__StringUTF16__innerclass__CharsSpliterator__Static

func Java__lang__StringUTF16__innerclass__CharsSpliterator() *Java__lang__StringUTF16__innerclass__CharsSpliterator__Static {
	return &Java__lang__StringUTF16__innerclass__CharsSpliterator__Var
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Static) New() *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl {
	v := &Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__StringUTF16__innerclass__CharsSpliterator__InitDispatch(v)
	return v
}

type Java__lang__StringUTF16__innerclass__CharsSpliterator__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____arr__B__I__ret__V(ByteArray__Instance, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(ByteArray__Instance, int, int, int)
	Impl__Characteristics__desc____ret__I() int
	Impl__EstimateSize__desc____ret__J() int64
	Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	Impl__GetExactSizeIfKnown__desc____ret__J() int64
	Impl__HasCharacteristics__desc__I__ret__Z(int) bool
	Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Java__lang__StringUTF16__innerclass__CharsSpliterator__InitDispatch(v Java__lang__StringUTF16__innerclass__CharsSpliterator__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Characteristics__desc____ret__I() int {
	return this._dispatch.Impl__Characteristics__desc____ret__I()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) EstimateSize__desc____ret__J() int64 {
	return this._dispatch.Impl__EstimateSize__desc____ret__J()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return this._dispatch.Impl__GetComparator__desc____ret____obj__Java__util__Comparator()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) GetExactSizeIfKnown__desc____ret__J() int64 {
	return this._dispatch.Impl__GetExactSizeIfKnown__desc____ret__J()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return this._dispatch.Impl__HasCharacteristics__desc__I__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator()
}

type Java__lang__StringUTF16__innerclass__CharsSpliterator__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
	Finalize__desc____ret__V()
	HasCharacteristics__desc__I__ret__Z(int) bool
	TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Characteristics__desc____ret__I() int
	GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	GetExactSizeIfKnown__desc____ret__J() int64
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	EstimateSize__desc____ret__J() int64
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__StringUTF16__innerclass__CharsSpliterator() *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__StringUTF16__innerclass__CharsSpliterator__Dispatch
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.<init>([BI)V")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.<init>([BIII)V")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__Characteristics__desc____ret__I() int {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.characteristics()I")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__EstimateSize__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.estimateSize()J")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.forEachRemaining(Ljava/lang/Object;)V")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.tryAdvance(Ljava/lang/Object;)Z")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	panic("Method not implemented - java/lang/StringUTF16$CharsSpliterator.trySplit()Ljava/util/Spliterator$OfInt;")
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) RawPtr__Java__lang__StringUTF16__innerclass__CharsSpliterator() *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl {
	return this
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	Java__util__Spliterator__innerclass__OfInt__defaultmethod__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(this, var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return Java__util__Spliterator__defaultmethod__GetComparator__desc____ret____obj__Java__util__Comparator(this)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__GetExactSizeIfKnown__desc____ret__J() int64 {
	return Java__util__Spliterator__defaultmethod__GetExactSizeIfKnown__desc____ret__J(this)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return Java__util__Spliterator__defaultmethod__HasCharacteristics__desc__I__ret__Z(this, var0)
}

func (this *Java__lang__StringUTF16__innerclass__CharsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return Java__util__Spliterator__innerclass__OfInt__defaultmethod__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(this, var0)
}

type Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Static struct{}

var Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Var Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Static

func Java__lang__StringUTF16__innerclass__CodePointsSpliterator() *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Static {
	return &Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Var
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Static) New() *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl {
	v := &Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__StringUTF16__innerclass__CodePointsSpliterator__InitDispatch(v)
	return v
}

type Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____arr__B__I__ret__V(ByteArray__Instance, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(ByteArray__Instance, int, int, int)
	Impl__Characteristics__desc____ret__I() int
	Impl__EstimateSize__desc____ret__J() int64
	Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	Impl__GetExactSizeIfKnown__desc____ret__J() int64
	Impl__HasCharacteristics__desc__I__ret__Z(int) bool
	Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Java__lang__StringUTF16__innerclass__CodePointsSpliterator__InitDispatch(v Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Characteristics__desc____ret__I() int {
	return this._dispatch.Impl__Characteristics__desc____ret__I()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) EstimateSize__desc____ret__J() int64 {
	return this._dispatch.Impl__EstimateSize__desc____ret__J()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	this._dispatch.Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return this._dispatch.Impl__GetComparator__desc____ret____obj__Java__util__Comparator()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) GetExactSizeIfKnown__desc____ret__J() int64 {
	return this._dispatch.Impl__GetExactSizeIfKnown__desc____ret__J()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return this._dispatch.Impl__HasCharacteristics__desc__I__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return this._dispatch.Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this._dispatch.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator()
}

type Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance
	Finalize__desc____ret__V()
	HasCharacteristics__desc__I__ret__Z(int) bool
	TryAdvance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Characteristics__desc____ret__I() int
	GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance
	TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(Java__util__function__Consumer__Instance) bool
	GetExactSizeIfKnown__desc____ret__J() int64
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	ForEachRemaining__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(Java__util__function__Consumer__Instance)
	TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance
	EstimateSize__desc____ret__J() int64
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__StringUTF16__innerclass__CodePointsSpliterator() *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Dispatch
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.<init>([BI)V")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.<init>([BIII)V")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__Characteristics__desc____ret__I() int {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.characteristics()I")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__EstimateSize__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.estimateSize()J")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.forEachRemaining(Ljava/lang/Object;)V")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.tryAdvance(Ljava/lang/Object;)Z")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt() Java__util__Spliterator__innerclass__OfInt__Instance {
	panic("Method not implemented - java/lang/StringUTF16$CodePointsSpliterator.trySplit()Ljava/util/Spliterator$OfInt;")
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfPrimitive() Java__util__Spliterator__innerclass__OfPrimitive__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__TrySplit__desc____ret____obj__Java__util__Spliterator() Java__util__Spliterator__Instance {
	return this.Impl__TrySplit__desc____ret____obj__Java__util__Spliterator__innerclass__OfInt()
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) RawPtr__Java__lang__StringUTF16__innerclass__CodePointsSpliterator() *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl {
	return this
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(var0 Java__util__function__Consumer__Instance) {
	Java__util__Spliterator__innerclass__OfInt__defaultmethod__ForEachRemaining__desc____obj__Java__util__function__Consumer__ret__V(this, var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__GetComparator__desc____ret____obj__Java__util__Comparator() Java__util__Comparator__Instance {
	return Java__util__Spliterator__defaultmethod__GetComparator__desc____ret____obj__Java__util__Comparator(this)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__GetExactSizeIfKnown__desc____ret__J() int64 {
	return Java__util__Spliterator__defaultmethod__GetExactSizeIfKnown__desc____ret__J(this)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__HasCharacteristics__desc__I__ret__Z(var0 int) bool {
	return Java__util__Spliterator__defaultmethod__HasCharacteristics__desc__I__ret__Z(this, var0)
}

func (this *Java__lang__StringUTF16__innerclass__CodePointsSpliterator__Impl) Impl__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(var0 Java__util__function__Consumer__Instance) bool {
	return Java__util__Spliterator__innerclass__OfInt__defaultmethod__TryAdvance__desc____obj__Java__util__function__Consumer__ret__Z(this, var0)
}

type Java__lang__System__Static struct {
	Err  Java__io__PrintStream__Instance
	Out  Java__io__PrintStream__Instance
	init sync.Once
}

var Java__lang__System__Var Java__lang__System__Static

func Java__lang__System() *Java__lang__System__Static {
	Java__lang__System__Var.init.Do(Java__lang__System__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__System__Var
}

func (this *Java__lang__System__Static) New() *Java__lang__System__Impl {
	v := &Java__lang__System__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__InitDispatch(v)
	return v
}

func (this *Java__lang__System__Static) Impl__Arraycopy__desc____obj__Java__lang__Object__I____obj__Java__lang__Object__I__I__ret__V(var0 Java__lang__Object__Instance, var1 int, var2 Java__lang__Object__Instance, var3 int, var4 int) {
	panic("Method not implemented - java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V")
}

func (this *Java__lang__System__Static) Impl__ClearProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.clearProperty(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__CurrentTimeMillis__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/System.currentTimeMillis()J")
}

func (this *Java__lang__System__Static) Impl__Exit__desc__I__ret__V(var0 int) {
	panic("Method not implemented - java/lang/System.exit(I)V")
}

func (this *Java__lang__System__Static) Impl__Gc__desc____ret__V() {
	panic("Method not implemented - java/lang/System.gc()V")
}

func (this *Java__lang__System__Static) Impl__GetLogger__desc____obj__Java__lang__String__ret____obj__Java__lang__System__innerclass__Logger(var0 Java__lang__String__Instance) Java__lang__System__innerclass__Logger__Instance {
	panic("Method not implemented - java/lang/System.getLogger(Ljava/lang/String;)Ljava/lang/System$Logger;")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__Getenv__desc____ret____obj__Java__util__Map() Java__util__Map__Instance {
	panic("Method not implemented - java/lang/System.getenv()Ljava/util/Map;")
}

func (this *Java__lang__System__Static) Impl__Getenv__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.getenv(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__LineSeparator__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.lineSeparator()Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__Load__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/System.load(Ljava/lang/String;)V")
}

func (this *Java__lang__System__Static) Impl__LoadLibrary__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Method not implemented - java/lang/System.loadLibrary(Ljava/lang/String;)V")
}

func (this *Java__lang__System__Static) Impl__MapLibraryName__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.mapLibraryName(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__NanoTime__desc____ret__J() int64 {
	panic("Method not implemented - java/lang/System.nanoTime()J")
}

func (this *Java__lang__System__Static) Impl__RunFinalization__desc____ret__V() {
	panic("Method not implemented - java/lang/System.runFinalization()V")
}

func (this *Java__lang__System__Static) Impl__RunFinalizersOnExit__desc__Z__ret__V(var0 bool) {
	panic("Method not implemented - java/lang/System.runFinalizersOnExit(Z)V")
}

func (this *Java__lang__System__Static) Impl__SetErr__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Method not implemented - java/lang/System.setErr(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__System__Static) Impl__SetOut__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Method not implemented - java/lang/System.setOut(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__System__Static) Impl__SetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

type Java__lang__System__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__System__Impl) Java__lang__System__InitDispatch(v Java__lang__System__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__System__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__System() *Java__lang__System__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__Dispatch
}

func (this *Java__lang__System__Impl) RawPtr__Java__lang__System() *Java__lang__System__Impl {
	return this
}

func (this *Java__lang__System__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__System__innerclass__1__Static struct{}

var Java__lang__System__innerclass__1__Var Java__lang__System__innerclass__1__Static

func Java__lang__System__innerclass__1() *Java__lang__System__innerclass__1__Static {
	return &Java__lang__System__innerclass__1__Var
}

func (this *Java__lang__System__innerclass__1__Static) New() *Java__lang__System__innerclass__1__Impl {
	v := &Java__lang__System__innerclass__1__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__innerclass__1__InitDispatch(v)
	return v
}

type Java__lang__System__innerclass__1__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
}

func (this *Java__lang__System__innerclass__1__Impl) Java__lang__System__innerclass__1__InitDispatch(v Java__lang__System__innerclass__1__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__System__innerclass__1__Impl) Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Run__desc____ret____obj__Java__lang__Object()
}

type Java__lang__System__innerclass__1__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__System__innerclass__1() *Java__lang__System__innerclass__1__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__innerclass__1__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__innerclass__1__Dispatch
}

func (this *Java__lang__System__innerclass__1__Impl) Impl__Run__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Method not implemented - java/lang/System$1.run()Ljava/lang/Object;")
}

func (this *Java__lang__System__innerclass__1__Impl) RawPtr__Java__lang__System__innerclass__1() *Java__lang__System__innerclass__1__Impl {
	return this
}

func (this *Java__lang__System__innerclass__1__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__System__innerclass__2__Static struct{}

var Java__lang__System__innerclass__2__Var Java__lang__System__innerclass__2__Static

func Java__lang__System__innerclass__2() *Java__lang__System__innerclass__2__Static {
	return &Java__lang__System__innerclass__2__Var
}

func (this *Java__lang__System__innerclass__2__Static) New() *Java__lang__System__innerclass__2__Impl {
	v := &Java__lang__System__innerclass__2__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__innerclass__2__InitDispatch(v)
	return v
}

type Java__lang__System__innerclass__2__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__FastUUID__desc__J__J__ret____obj__Java__lang__String(int64, int64) Java__lang__String__Instance
	Impl__FindBootstrapClassOrNull__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__ClassLoader__Instance, Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__GetDeclaredAnnotationMap__desc____obj__Java__lang__Class__ret____obj__Java__util__Map(Java__lang__Class__Instance) Java__util__Map__Instance
	Impl__GetEnumConstantsShared__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__Enum(Java__lang__Class__Instance) ObjectArray__Instance
	Impl__GetRawClassAnnotations__desc____obj__Java__lang__Class__ret____arr__B(Java__lang__Class__Instance) ByteArray__Instance
	Impl__GetRawClassTypeAnnotations__desc____obj__Java__lang__Class__ret____arr__B(Java__lang__Class__Instance) ByteArray__Instance
	Impl__InvokeFinalize__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Impl__NewStringUnsafe__desc____arr__C__ret____obj__Java__lang__String(CharArray__Instance) Java__lang__String__Instance
	Impl__Packages__desc____obj__Java__lang__ClassLoader__ret____obj__Java__util__stream__Stream(Java__lang__ClassLoader__Instance) Java__util__stream__Stream__Instance
	Impl__RegisterShutdownHook__desc__I__Z____obj__Java__lang__Runnable__ret__V(int, bool, Java__lang__Runnable__Instance)
}

func (this *Java__lang__System__innerclass__2__Impl) Java__lang__System__innerclass__2__InitDispatch(v Java__lang__System__innerclass__2__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__System__innerclass__2__Impl) FastUUID__desc__J__J__ret____obj__Java__lang__String(var0 int64, var1 int64) Java__lang__String__Instance {
	return this._dispatch.Impl__FastUUID__desc__J__J__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__System__innerclass__2__Impl) FindBootstrapClassOrNull__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindBootstrapClassOrNull__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret____obj__Java__lang__Class(var0, var1)
}

func (this *Java__lang__System__innerclass__2__Impl) GetDeclaredAnnotationMap__desc____obj__Java__lang__Class__ret____obj__Java__util__Map(var0 Java__lang__Class__Instance) Java__util__Map__Instance {
	return this._dispatch.Impl__GetDeclaredAnnotationMap__desc____obj__Java__lang__Class__ret____obj__Java__util__Map(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) GetEnumConstantsShared__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__Enum(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	return this._dispatch.Impl__GetEnumConstantsShared__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__Enum(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) GetRawClassAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0 Java__lang__Class__Instance) ByteArray__Instance {
	return this._dispatch.Impl__GetRawClassAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) GetRawClassTypeAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0 Java__lang__Class__Instance) ByteArray__Instance {
	return this._dispatch.Impl__GetRawClassTypeAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) InvokeFinalize__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	this._dispatch.Impl__InvokeFinalize__desc____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) NewStringUnsafe__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__NewStringUnsafe__desc____arr__C__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) Packages__desc____obj__Java__lang__ClassLoader__ret____obj__Java__util__stream__Stream(var0 Java__lang__ClassLoader__Instance) Java__util__stream__Stream__Instance {
	return this._dispatch.Impl__Packages__desc____obj__Java__lang__ClassLoader__ret____obj__Java__util__stream__Stream(var0)
}

func (this *Java__lang__System__innerclass__2__Impl) RegisterShutdownHook__desc__I__Z____obj__Java__lang__Runnable__ret__V(var0 int, var1 bool, var2 Java__lang__Runnable__Instance) {
	this._dispatch.Impl__RegisterShutdownHook__desc__I__Z____obj__Java__lang__Runnable__ret__V(var0, var1, var2)
}

type Java__lang__System__innerclass__2__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetEnumConstantsShared__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__Enum(Java__lang__Class__Instance) ObjectArray__Instance
	InvokeFinalize__desc____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance)
	Finalize__desc____ret__V()
	FastUUID__desc__J__J__ret____obj__Java__lang__String(int64, int64) Java__lang__String__Instance
	NewStringUnsafe__desc____arr__C__ret____obj__Java__lang__String(CharArray__Instance) Java__lang__String__Instance
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	GetRawClassAnnotations__desc____obj__Java__lang__Class__ret____arr__B(Java__lang__Class__Instance) ByteArray__Instance
	GetRawClassTypeAnnotations__desc____obj__Java__lang__Class__ret____arr__B(Java__lang__Class__Instance) ByteArray__Instance
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	RegisterShutdownHook__desc__I__Z____obj__Java__lang__Runnable__ret__V(int, bool, Java__lang__Runnable__Instance)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	FindBootstrapClassOrNull__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__ClassLoader__Instance, Java__lang__String__Instance) Java__lang__Class__Instance
	GetDeclaredAnnotationMap__desc____obj__Java__lang__Class__ret____obj__Java__util__Map(Java__lang__Class__Instance) Java__util__Map__Instance
	Packages__desc____obj__Java__lang__ClassLoader__ret____obj__Java__util__stream__Stream(Java__lang__ClassLoader__Instance) Java__util__stream__Stream__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__System__innerclass__2() *Java__lang__System__innerclass__2__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__innerclass__2__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__innerclass__2__Dispatch
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/System$2.<init>()V")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__FastUUID__desc__J__J__ret____obj__Java__lang__String(var0 int64, var1 int64) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System$2.fastUUID(JJ)Ljava/lang/String;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__FindBootstrapClassOrNull__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Method not implemented - java/lang/System$2.findBootstrapClassOrNull(Ljava/lang/ClassLoader;Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__GetDeclaredAnnotationMap__desc____obj__Java__lang__Class__ret____obj__Java__util__Map(var0 Java__lang__Class__Instance) Java__util__Map__Instance {
	panic("Method not implemented - java/lang/System$2.getDeclaredAnnotationMap(Ljava/lang/Class;)Ljava/util/Map;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__GetEnumConstantsShared__desc____obj__Java__lang__Class__ret____arr____obj__Java__lang__Enum(var0 Java__lang__Class__Instance) ObjectArray__Instance {
	panic("Method not implemented - java/lang/System$2.getEnumConstantsShared(Ljava/lang/Class;)[Ljava/lang/Enum;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__GetRawClassAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0 Java__lang__Class__Instance) ByteArray__Instance {
	panic("Method not implemented - java/lang/System$2.getRawClassAnnotations(Ljava/lang/Class;)[B")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__GetRawClassTypeAnnotations__desc____obj__Java__lang__Class__ret____arr__B(var0 Java__lang__Class__Instance) ByteArray__Instance {
	panic("Method not implemented - java/lang/System$2.getRawClassTypeAnnotations(Ljava/lang/Class;)[B")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__InvokeFinalize__desc____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance) {
	panic("Method not implemented - java/lang/System$2.invokeFinalize(Ljava/lang/Object;)V")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__NewStringUnsafe__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	panic("Method not implemented - java/lang/System$2.newStringUnsafe([C)Ljava/lang/String;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__Packages__desc____obj__Java__lang__ClassLoader__ret____obj__Java__util__stream__Stream(var0 Java__lang__ClassLoader__Instance) Java__util__stream__Stream__Instance {
	panic("Method not implemented - java/lang/System$2.packages(Ljava/lang/ClassLoader;)Ljava/util/stream/Stream;")
}

func (this *Java__lang__System__innerclass__2__Impl) Impl__RegisterShutdownHook__desc__I__Z____obj__Java__lang__Runnable__ret__V(var0 int, var1 bool, var2 Java__lang__Runnable__Instance) {
	panic("Method not implemented - java/lang/System$2.registerShutdownHook(IZLjava/lang/Runnable;)V")
}

func (this *Java__lang__System__innerclass__2__Impl) RawPtr__Java__lang__System__innerclass__2() *Java__lang__System__innerclass__2__Impl {
	return this
}

func (this *Java__lang__System__innerclass__2__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__System__innerclass__Logger__Static struct{}

var Java__lang__System__innerclass__Logger__Var Java__lang__System__innerclass__Logger__Static

func Java__lang__System__innerclass__Logger() *Java__lang__System__innerclass__Logger__Static {
	return &Java__lang__System__innerclass__Logger__Var
}

type Java__lang__System__innerclass__Logger__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__innerclass__LoggerFinder__Static struct {
	init sync.Once
}

var Java__lang__System__innerclass__LoggerFinder__Var Java__lang__System__innerclass__LoggerFinder__Static

func Java__lang__System__innerclass__LoggerFinder() *Java__lang__System__innerclass__LoggerFinder__Static {
	Java__lang__System__innerclass__LoggerFinder__Var.init.Do(Java__lang__System__innerclass__LoggerFinder__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__System__innerclass__LoggerFinder__Var
}

func (this *Java__lang__System__innerclass__LoggerFinder__Static) New() *Java__lang__System__innerclass__LoggerFinder__Impl {
	v := &Java__lang__System__innerclass__LoggerFinder__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__innerclass__LoggerFinder__InitDispatch(v)
	return v
}

func (this *Java__lang__System__innerclass__LoggerFinder__Static) Impl__Static_Init__desc____ret__V() { }

func (this *Java__lang__System__innerclass__LoggerFinder__Static) Impl__PrivTo__Java__lang__AccessProvider__desc____ret____obj__Java__lang__System__innerclass__LoggerFinder() Java__lang__System__innerclass__LoggerFinder__Instance {
	panic("Method not implemented - java/lang/System$LoggerFinder.accessProvider()Ljava/lang/System$LoggerFinder;")
}

func (this *Java__lang__System__innerclass__LoggerFinder__Static) Impl__GetLoggerFinder__desc____ret____obj__Java__lang__System__innerclass__LoggerFinder() Java__lang__System__innerclass__LoggerFinder__Instance {
	panic("Method not implemented - java/lang/System$LoggerFinder.getLoggerFinder()Ljava/lang/System$LoggerFinder;")
}

type Java__lang__System__innerclass__LoggerFinder__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__System__innerclass__LoggerFinder__Impl) Java__lang__System__innerclass__LoggerFinder__InitDispatch(v Java__lang__System__innerclass__LoggerFinder__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__System__innerclass__LoggerFinder__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__System__innerclass__LoggerFinder() *Java__lang__System__innerclass__LoggerFinder__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__innerclass__LoggerFinder__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__innerclass__LoggerFinder__Dispatch
}

func (this *Java__lang__System__innerclass__LoggerFinder__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/System$LoggerFinder.<init>()V")
}

func (this *Java__lang__System__innerclass__LoggerFinder__Impl) RawPtr__Java__lang__System__innerclass__LoggerFinder() *Java__lang__System__innerclass__LoggerFinder__Impl {
	return this
}

func (this *Java__lang__System__innerclass__LoggerFinder__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Throwable__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__Throwable__Var Java__lang__Throwable__Static

func Java__lang__Throwable() *Java__lang__Throwable__Static {
	Java__lang__Throwable__Var.init.Do(Java__lang__Throwable__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Throwable__Var
}

func (this *Java__lang__Throwable__Static) New() *Java__lang__Throwable__Impl {
	v := &Java__lang__Throwable__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Throwable__InitDispatch(v)
	return v
}

func (this *Java__lang__Throwable__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Throwable__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Impl__PrintStackTrace__desc____ret__V()
	Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
}

func (this *Java__lang__Throwable__Impl) Java__lang__Throwable__InitDispatch(v Java__lang__Throwable__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0, var1)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__GetCause__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance {
	return this._dispatch.Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	return this._dispatch.Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0)
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____ret__V() {
	this._dispatch.Impl__PrintStackTrace__desc____ret__V()
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	this._dispatch.Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0)
}

type Java__lang__Throwable__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Throwable__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Throwable__Dispatch
	Message   Java__lang__String__Instance
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/Throwable.<init>()V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Method not implemented - java/lang/Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Throwable.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/Throwable.addSuppressed(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Method not implemented - java/lang/Throwable.fillInStackTrace()Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Method not implemented - java/lang/Throwable.getCause()Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Throwable.getLocalizedMessage()Ljava/lang/String;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance {
	panic("Method not implemented - java/lang/Throwable.getSuppressed()[Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	panic("Method not implemented - java/lang/Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____ret__V() {
	panic("Method not implemented - java/lang/Throwable.printStackTrace()V")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Method not implemented - java/lang/Throwable.printStackTrace(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Method not implemented - java/lang/Throwable.toString()Ljava/lang/String;")
}

func (this *Java__lang__Throwable__Impl) RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl {
	return this
}

func (this *Java__lang__Throwable__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__VirtualMachineError__Static struct{}

var Java__lang__VirtualMachineError__Var Java__lang__VirtualMachineError__Static

func Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Static {
	return &Java__lang__VirtualMachineError__Var
}

func (this *Java__lang__VirtualMachineError__Static) New() *Java__lang__VirtualMachineError__Impl {
	v := &Java__lang__VirtualMachineError__Impl{
		Java__lang__Error__Impl: Java__lang__Error().New(),
	}
	v.Java__lang__VirtualMachineError__InitDispatch(v)
	return v
}

type Java__lang__VirtualMachineError__Dispatch interface {
	Java__lang__Error__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Java__lang__VirtualMachineError__InitDispatch(v Java__lang__VirtualMachineError__Dispatch) {
	this.Java__lang__Error__Impl.Java__lang__Error__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__VirtualMachineError__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Finalize__desc____ret__V()
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	PrintStackTrace__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Wait__desc__J__I__ret__V(int64, int)
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Impl
	RawPtr__Java__lang__Error() *Java__lang__Error__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__VirtualMachineError__Impl struct {
	*Java__lang__Error__Impl
	_dispatch Java__lang__VirtualMachineError__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Method not implemented - java/lang/VirtualMachineError.<init>()V")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/VirtualMachineError.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Method not implemented - java/lang/VirtualMachineError.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__VirtualMachineError__Impl) RawPtr__Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Impl {
	return this
}

func (this *Java__lang__VirtualMachineError__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Void__Static struct {
	TYPE Java__lang__Class__Instance
	init sync.Once
}

var Java__lang__Void__Var Java__lang__Void__Static

func Java__lang__Void() *Java__lang__Void__Static {
	Java__lang__Void__Var.init.Do(Java__lang__Void__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Void__Var
}

func (this *Java__lang__Void__Static) New() *Java__lang__Void__Impl {
	v := &Java__lang__Void__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Void__InitDispatch(v)
	return v
}

func (this *Java__lang__Void__Static) Impl__Static_Init__desc____ret__V() { }

type Java__lang__Void__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Void__Impl) Java__lang__Void__InitDispatch(v Java__lang__Void__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Void__Instance interface {
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Finalize__desc____ret__V()
	NotifyAll__desc____ret__V()
	Wait__desc____ret__V()
	HashCode__desc____ret__I() int
	Wait__desc__J__I__ret__V(int64, int)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Wait__desc__J__ret__V(int64)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Notify__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	RawPtr__Java__lang__Void() *Java__lang__Void__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Void__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Void__Dispatch
}

func (this *Java__lang__Void__Impl) RawPtr__Java__lang__Void() *Java__lang__Void__Impl {
	return this
}

func (this *Java__lang__Void__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}
