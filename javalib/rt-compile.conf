
// Don't need the running rt.jar because we are supplying it
exclude-running-runtime-jar = true

// This automatically trims off methods for classes we don't reference
only-methods-referencing-classes = true

// Prepend the statement that we use a redistributable OpenJDK JAR as our source
prepend-to-file =
  "// Generated from Azul Zulu packaged OpenJDK JAR and carries the same GPL license with the classpath exception"

// The only thing we need is the rt.jar here
class-path = [ ${ZULU_JDK_HOME}/jre/lib/rt.jar ]

// Put in rt which automatically gives "rt" as the package name
out-dir = javalib/rt

// All of the classes we want to generate (and their super classes/interfaces of course
// Ref http://hg.openjdk.java.net/jdk9/jdk9/jdk/file/d966fc5a7be5/src/java.base/share/classes/module-info.java
classes = [
  "java.io.?"
  "java.lang.?"
  "java.lang.annotation.?"
  "java.lang.invoke.?"
  "java.lang.ref.?"
  "java.lang.reflect.?"
  "java.math.?"
  "java.util.?"
  "java.util.concurrent.?"
  "java.util.concurrent.atomic.?"
  "java.util.concurrent.locks.?"
  "java.util.function.?"
  "java.util.regex.?"
  "java.util.spi.?"
  "java.util.stream.?"
]