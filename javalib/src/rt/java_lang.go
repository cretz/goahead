// Generated from Azul Zulu packaged OpenJDK JAR and carries the same
// GPL license with the classpath exception
package rt

import "sync"

type Java__lang__AbstractStringBuilder__Static struct{}

var Java__lang__AbstractStringBuilder__Var Java__lang__AbstractStringBuilder__Static

func Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Static {
	return &Java__lang__AbstractStringBuilder__Var
}

func (this *Java__lang__AbstractStringBuilder__Static) New() *Java__lang__AbstractStringBuilder__Impl {
	v := &Java__lang__AbstractStringBuilder__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__AbstractStringBuilder__InitDispatch(v)
	return v
}

type Java__lang__AbstractStringBuilder__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder([]rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder([]rune, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Capacity__desc____ret__I() int
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__EnsureCapacity__desc__I__ret__V(int)
	Impl__ExpandCapacity__desc__I__ret__V(int)
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, []rune, int)
	Impl__GetValue__desc____ret____arr__C() []rune
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, []rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, []rune, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Impl__SetCharAt__desc__I__C__ret__V(int, rune)
	Impl__SetLength__desc__I__ret__V(int)
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__TrimToSize__desc____ret__V()
}

func (this *Java__lang__AbstractStringBuilder__Impl) Java__lang__AbstractStringBuilder__InitDispatch(v Java__lang__AbstractStringBuilder__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Capacity__desc____ret__I() int {
	return this._dispatch.Impl__Capacity__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) EnsureCapacity__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__EnsureCapacity__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) ExpandCapacity__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__ExpandCapacity__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 []rune, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) GetValue__desc____ret____arr__C() []rune {
	return this._dispatch.Impl__GetValue__desc____ret____arr__C()
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder()
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	this._dispatch.Impl__SetCharAt__desc__I__C__ret__V(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetLength__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__SetLength__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) TrimToSize__desc____ret__V() {
	this._dispatch.Impl__TrimToSize__desc____ret__V()
}

type Java__lang__AbstractStringBuilder__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc__I__ret__V(int)
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder([]rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder([]rune, int, int) Java__lang__AbstractStringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Capacity__desc____ret__I() int
	CharAt__desc__I__ret__C(int) rune
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	ExpandCapacity__desc__I__ret__V(int)
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, []rune, int)
	GetValue__desc____ret____arr__C() []rune
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, []rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, []rune, int, int) Java__lang__AbstractStringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	SetLength__desc__I__ret__V(int)
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	TrimToSize__desc____ret__V()
	FieldGet__Java__lang__AbstractStringBuilder__Count() int
	FieldSet__Java__lang__AbstractStringBuilder__Count(v int)
	FieldGet__Java__lang__AbstractStringBuilder__Value() []rune
	FieldSet__Java__lang__AbstractStringBuilder__Value(v []rune)
}

type Java__lang__AbstractStringBuilder__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__AbstractStringBuilder__Dispatch
	Count     int
	Value     []rune
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Count() int {
	return this.Count
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Count(v int) {
	this.Count = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Value() []rune {
	return this.Value
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Value(v []rune) {
	this.Value = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__ExpandCapacity__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 []rune, var3 int) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__GetValue__desc____ret____arr__C() []rune {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Not Implemented")
}

type Java__lang__Appendable__Instance interface {
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
}

type Java__lang__AutoCloseable__Instance interface {
	Close__desc____ret__V()
}

type Java__lang__CharSequence__Instance interface {
	CharAt__desc__I__ret__C(int) rune
	Length__desc____ret__I() int
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

type Java__lang__Comparable__Instance interface {
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

type Java__lang__Error__Static struct {
	SerialVersionUID int64
}

var Java__lang__Error__Var Java__lang__Error__Static

func Java__lang__Error() *Java__lang__Error__Static {
	return &Java__lang__Error__Var
}

func (this *Java__lang__Error__Static) New() *Java__lang__Error__Impl {
	v := &Java__lang__Error__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Error__InitDispatch(v)
	return v
}

type Java__lang__Error__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Error__Impl) Java__lang__Error__InitDispatch(v Java__lang__Error__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Error__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
}

type Java__lang__Error__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Error__Dispatch
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

type Java__lang__Exception__Static struct {
	SerialVersionUID int64
}

var Java__lang__Exception__Var Java__lang__Exception__Static

func Java__lang__Exception() *Java__lang__Exception__Static {
	return &Java__lang__Exception__Var
}

func (this *Java__lang__Exception__Static) New() *Java__lang__Exception__Impl {
	v := &Java__lang__Exception__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Exception__InitDispatch(v)
	return v
}

type Java__lang__Exception__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Exception__Impl) Java__lang__Exception__InitDispatch(v Java__lang__Exception__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Exception__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
}

type Java__lang__Exception__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Exception__Dispatch
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

type Java__lang__NullPointerException__Static struct{}

var Java__lang__NullPointerException__Var Java__lang__NullPointerException__Static

func Java__lang__NullPointerException() *Java__lang__NullPointerException__Static {
	return &Java__lang__NullPointerException__Var
}

func (this *Java__lang__NullPointerException__Static) New() *Java__lang__NullPointerException__Impl {
	v := &Java__lang__NullPointerException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__NullPointerException__InitDispatch(v)
	return v
}

type Java__lang__NullPointerException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Java__lang__NullPointerException__InitDispatch(v Java__lang__NullPointerException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__NullPointerException__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
}

type Java__lang__NullPointerException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__NullPointerException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

type Java__lang__Object__Static struct {
	init sync.Once
}

var Java__lang__Object__Var Java__lang__Object__Static

func Java__lang__Object() *Java__lang__Object__Static {
	Java__lang__Object__Var.init.Do(Java__lang__Object__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Object__Var
}

func (this *Java__lang__Object__Static) New() *Java__lang__Object__Impl {
	v := &Java__lang__Object__Impl{}
	v.Java__lang__Object__InitDispatch(v)
	return v
}

func (this *Java__lang__Object__Static) Impl__Static_Init__desc____ret__V() {
	
}

type Java__lang__Object__Dispatch interface {
	Impl__Instance_Init__desc____ret__V()
	Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__Finalize__desc____ret__V()
	Impl__HashCode__desc____ret__I() int
	Impl__Notify__desc____ret__V()
	Impl__NotifyAll__desc____ret__V()
	Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Wait__desc____ret__V()
	Impl__Wait__desc__J__ret__V(int64)
	Impl__Wait__desc__J__I__ret__V(int64, int)
}

func (this *Java__lang__Object__Impl) Java__lang__Object__InitDispatch(v Java__lang__Object__Dispatch) {
	this._dispatch = v
}

func (this *Java__lang__Object__Impl) Instance_Init__desc____ret__V() {
	this._dispatch.Impl__Instance_Init__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Clone__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Object__Impl) Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__Object__Impl) Finalize__desc____ret__V() {
	this._dispatch.Impl__Finalize__desc____ret__V()
}

func (this *Java__lang__Object__Impl) HashCode__desc____ret__I() int {
	return this._dispatch.Impl__HashCode__desc____ret__I()
}

func (this *Java__lang__Object__Impl) Notify__desc____ret__V() {
	this._dispatch.Impl__Notify__desc____ret__V()
}

func (this *Java__lang__Object__Impl) NotifyAll__desc____ret__V() {
	this._dispatch.Impl__NotifyAll__desc____ret__V()
}

func (this *Java__lang__Object__Impl) ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToString__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Object__Impl) Wait__desc____ret__V() {
	this._dispatch.Impl__Wait__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Wait__desc__J__ret__V(var0 int64) {
	this._dispatch.Impl__Wait__desc__J__ret__V(var0)
}

func (this *Java__lang__Object__Impl) Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	this._dispatch.Impl__Wait__desc__J__I__ret__V(var0, var1)
}

type Java__lang__Object__Instance interface {
	Instance_Init__desc____ret__V()
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
}

type Java__lang__Object__Impl struct {
	_dispatch Java__lang__Object__Dispatch
}

func (this *Java__lang__Object__Impl) Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Finalize__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Notify__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__NotifyAll__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__ret__V(var0 int64) {
	panic("Not Implemented")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	panic("Not Implemented")
}

type Java__lang__RuntimeException__Static struct {
	SerialVersionUID int64
}

var Java__lang__RuntimeException__Var Java__lang__RuntimeException__Static

func Java__lang__RuntimeException() *Java__lang__RuntimeException__Static {
	return &Java__lang__RuntimeException__Var
}

func (this *Java__lang__RuntimeException__Static) New() *Java__lang__RuntimeException__Impl {
	v := &Java__lang__RuntimeException__Impl{
		Java__lang__Exception__Impl: Java__lang__Exception().New(),
	}
	v.Java__lang__RuntimeException__InitDispatch(v)
	return v
}

type Java__lang__RuntimeException__Dispatch interface {
	Java__lang__Exception__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Java__lang__RuntimeException__InitDispatch(v Java__lang__RuntimeException__Dispatch) {
	this.Java__lang__Exception__Impl.Java__lang__Exception__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__RuntimeException__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
}

type Java__lang__RuntimeException__Impl struct {
	*Java__lang__Exception__Impl
	_dispatch Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

type Java__lang__String__Static struct {
	init sync.Once
}

var Java__lang__String__Var Java__lang__String__Static

func Java__lang__String() *Java__lang__String__Static {
	Java__lang__String__Var.init.Do(Java__lang__String__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__String__Var
}

func (this *Java__lang__String__Static) New() *Java__lang__String__Impl {
	v := &Java__lang__String__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__String__InitDispatch(v)
	return v
}

func (this *Java__lang__String__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 []rune) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 []rune, var1 int, var2 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__Format__desc____obj__Java__lang__String____arr____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 []Java__lang__Object__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__IndexOf__desc____arr__C__I__I____obj__Java__lang__String__I__ret__I(var0 []rune, var1 int, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__IndexOf__desc____arr__C__I__I____arr__C__I__I__I__ret__I(var0 []rune, var1 int, var2 int, var3 []rune, var4 int, var5 int, var6 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__Join__desc____obj__Java__lang__CharSequence____arr____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 []Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__LastIndexOf__desc____arr__C__I__I____obj__Java__lang__String__I__ret__I(var0 []rune, var1 int, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__LastIndexOf__desc____arr__C__I__I____arr__C__I__I__I__ret__I(var0 []rune, var1 int, var2 int, var3 []rune, var4 int, var5 int, var6 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__C__ret____obj__Java__lang__String(var0 rune) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__Object__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__Z__ret____obj__Java__lang__String(var0 bool) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 []rune) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 []rune, var1 int, var2 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

type Java__lang__String__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(Java__lang__StringBuilder__Instance)
	Impl__Instance_Init__desc____arr__B__ret__V([]byte)
	Impl__Instance_Init__desc____arr__B__I__ret__V([]byte, int)
	Impl__Instance_Init__desc____arr__B__I__I__ret__V([]byte, int, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V([]byte, int, int, int)
	Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V([]byte, int, int, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V([]byte, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__C__ret__V([]rune)
	Impl__Instance_Init__desc____arr__C__I__I__ret__V([]rune, int, int)
	Impl__Instance_Init__desc____arr__C__Z__ret__V([]rune, bool)
	Impl__Instance_Init__desc____arr__I__I__I__ret__V([]int, int, int)
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__GetBytes__desc____ret____arr__B() []byte
	Impl__GetBytes__desc__I__I____arr__B__I__ret__V(int, int, []byte, int)
	Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) []byte
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, []rune, int)
	Impl__GetChars__desc____arr__C__I__ret__V([]rune, int)
	Impl__IndexOf__desc__I__ret__I(int) int
	Impl__IndexOf__desc__I__I__ret__I(int, int) int
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__IsEmpty__desc____ret__Z() bool
	Impl__LastIndexOf__desc__I__ret__I(int) int
	Impl__LastIndexOf__desc__I__I__ret__I(int, int) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	Impl__Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) []Java__lang__String__Instance
	Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) []Java__lang__String__Instance
	Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__ToCharArray__desc____ret____arr__C() []rune
	Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__String__Impl) Java__lang__String__InitDispatch(v Java__lang__String__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__ret__V(var0 []byte) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 []byte, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__ret__V(var0 []byte, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 []byte, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 []byte, var1 int, var2 int, var3 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 []byte, var1 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__ret__V(var0 []rune) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__I__I__ret__V(var0 []rune, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__Z__ret__V(var0 []rune, var1 bool) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__Z__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__I__I__I__ret__V(var0 []int, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__String__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) GetBytes__desc____ret____arr__B() []byte {
	return this._dispatch.Impl__GetBytes__desc____ret____arr__B()
}

func (this *Java__lang__String__Impl) GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 []byte, var3 int) {
	this._dispatch.Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) []byte {
	return this._dispatch.Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0)
}

func (this *Java__lang__String__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 []rune, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) GetChars__desc____arr__C__I__ret__V(var0 []rune, var1 int) {
	this._dispatch.Impl__GetChars__desc____arr__C__I__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Intern__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) IsEmpty__desc____ret__Z() bool {
	return this._dispatch.Impl__IsEmpty__desc____ret__Z()
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__String__Impl) Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3, var4)
}

func (this *Java__lang__String__Impl) Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) []Java__lang__String__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) []Java__lang__String__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0, var1)
}

func (this *Java__lang__String__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__String__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ToCharArray__desc____ret____arr__C() []rune {
	return this._dispatch.Impl__ToCharArray__desc____ret____arr__C()
}

func (this *Java__lang__String__Impl) ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToLowerCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToUpperCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Trim__desc____ret____obj__Java__lang__String()
}

type Java__lang__String__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(Java__lang__StringBuilder__Instance)
	Instance_Init__desc____arr__B__ret__V([]byte)
	Instance_Init__desc____arr__B__I__ret__V([]byte, int)
	Instance_Init__desc____arr__B__I__I__ret__V([]byte, int, int)
	Instance_Init__desc____arr__B__I__I__I__ret__V([]byte, int, int, int)
	Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V([]byte, int, int, Java__lang__String__Instance)
	Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V([]byte, Java__lang__String__Instance)
	Instance_Init__desc____arr__C__ret__V([]rune)
	Instance_Init__desc____arr__C__I__I__ret__V([]rune, int, int)
	Instance_Init__desc____arr__C__Z__ret__V([]rune, bool)
	Instance_Init__desc____arr__I__I__I__ret__V([]int, int, int)
	CharAt__desc__I__ret__C(int) rune
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	GetBytes__desc____ret____arr__B() []byte
	GetBytes__desc__I__I____arr__B__I__ret__V(int, int, []byte, int)
	GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) []byte
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, []rune, int)
	GetChars__desc____arr__C__I__ret__V([]rune, int)
	HashCode__desc____ret__I() int
	IndexOf__desc__I__ret__I(int) int
	IndexOf__desc__I__I__ret__I(int, int) int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsEmpty__desc____ret__Z() bool
	LastIndexOf__desc__I__ret__I(int) int
	LastIndexOf__desc__I__I__ret__I(int, int) int
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) []Java__lang__String__Instance
	Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) []Java__lang__String__Instance
	StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToCharArray__desc____ret____arr__C() []rune
	ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

type Java__lang__String__Impl struct {
	*Java__lang__Object__Impl
	_dispatch  Java__lang__String__Dispatch
	Underlying string
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__ret__V(var0 []byte) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 []byte, var1 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0 []byte, var1 int, var2 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 []byte, var1 int, var2 int, var3 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 []byte, var1 int, var2 int, var3 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 []byte, var1 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__ret__V(var0 []rune) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0 []rune, var1 int, var2 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__Z__ret__V(var0 []rune, var1 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0 []int, var1 int, var2 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____ret____arr__B() []byte {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 []byte, var3 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) []byte {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 []rune, var3 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__GetChars__desc____arr__C__I__ret__V(var0 []rune, var1 int) {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__IsEmpty__desc____ret__Z() bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) []Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) []Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ToCharArray__desc____ret____arr__C() []rune {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__String__Impl) Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

type Java__lang__StringBuilder__Static struct {
	SerialVersionUID int64
}

var Java__lang__StringBuilder__Var Java__lang__StringBuilder__Static

func Java__lang__StringBuilder() *Java__lang__StringBuilder__Static {
	return &Java__lang__StringBuilder__Var
}

func (this *Java__lang__StringBuilder__Static) New() *Java__lang__StringBuilder__Impl {
	v := &Java__lang__StringBuilder__Impl{
		Java__lang__AbstractStringBuilder__Impl: Java__lang__AbstractStringBuilder().New(),
	}
	v.Java__lang__StringBuilder__InitDispatch(v)
	return v
}

type Java__lang__StringBuilder__Dispatch interface {
	Java__lang__AbstractStringBuilder__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(Java__lang__CharSequence__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder([]rune) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder([]rune, int, int) Java__lang__StringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, []rune) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, []rune, int, int) Java__lang__StringBuilder__Instance
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
}

func (this *Java__lang__StringBuilder__Impl) Java__lang__StringBuilder__InitDispatch(v Java__lang__StringBuilder__Dispatch) {
	this.Java__lang__AbstractStringBuilder__Impl.Java__lang__AbstractStringBuilder__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 []rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 []rune, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 []rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 []rune, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder()
}

type Java__lang__StringBuilder__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc__I__ret__V(int)
	Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(Java__lang__CharSequence__Instance)
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder([]rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__StringBuilder([]rune) Java__lang__StringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder([]rune, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder([]rune, int, int) Java__lang__StringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Capacity__desc____ret__I() int
	CharAt__desc__I__ret__C(int) rune
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, []rune, int)
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, []rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, []rune) Java__lang__StringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, []rune, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, []rune, int, int) Java__lang__StringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	SetLength__desc__I__ret__V(int)
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	TrimToSize__desc____ret__V()
}

type Java__lang__StringBuilder__Impl struct {
	*Java__lang__AbstractStringBuilder__Impl
	_dispatch  Java__lang__StringBuilder__Dispatch
	Underlying string
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 []rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 []rune, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 []rune, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 []rune, var3 int) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 []rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 []rune, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 []rune, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__StringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Not Implemented")
}

type Java__lang__System__Static struct {
	Err  Java__io__PrintStream__Instance
	Out  Java__io__PrintStream__Instance
	init sync.Once
}

var Java__lang__System__Var Java__lang__System__Static

func Java__lang__System() *Java__lang__System__Static {
	Java__lang__System__Var.init.Do(Java__lang__System__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__System__Var
}

func (this *Java__lang__System__Static) New() *Java__lang__System__Impl {
	v := &Java__lang__System__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__InitDispatch(v)
	return v
}

func (this *Java__lang__System__Static) Impl__Arraycopy__desc____obj__Java__lang__Object__I____obj__Java__lang__Object__I__I__ret__V(var0 Java__lang__Object__Instance, var1 int, var2 Java__lang__Object__Instance, var3 int, var4 int) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__ClearProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__CurrentTimeMillis__desc____ret__J() int64 {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__Exit__desc__I__ret__V(var0 int) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__Gc__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__Getenv__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__IdentityHashCode__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__LineSeparator__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__Load__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__LoadLibrary__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__MapLibraryName__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__NanoTime__desc____ret__J() int64 {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__RunFinalization__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__RunFinalizersOnExit__desc__Z__ret__V(var0 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__SetErr__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__SetOut__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__System__Static) Impl__SetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented")
}

type Java__lang__System__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__System__Impl) Java__lang__System__InitDispatch(v Java__lang__System__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__System__Instance interface{}

type Java__lang__System__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__Dispatch
}

type Java__lang__Throwable__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__Throwable__Var Java__lang__Throwable__Static

func Java__lang__Throwable() *Java__lang__Throwable__Static {
	Java__lang__Throwable__Var.init.Do(Java__lang__Throwable__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Throwable__Var
}

func (this *Java__lang__Throwable__Static) New() *Java__lang__Throwable__Impl {
	v := &Java__lang__Throwable__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Throwable__InitDispatch(v)
	return v
}

func (this *Java__lang__Throwable__Static) Impl__Static_Init__desc____ret__V() {
	
}

type Java__lang__Throwable__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetStackTraceDepth__desc____ret__I() int
	Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() []Java__lang__Throwable__Instance
	Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Impl__PrintStackTrace__desc____ret__V()
	Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
}

func (this *Java__lang__Throwable__Impl) Java__lang__Throwable__InitDispatch(v Java__lang__Throwable__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0, var1)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__GetCause__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetStackTraceDepth__desc____ret__I() int {
	return this._dispatch.Impl__GetStackTraceDepth__desc____ret__I()
}

func (this *Java__lang__Throwable__Impl) GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() []Java__lang__Throwable__Instance {
	return this._dispatch.Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	return this._dispatch.Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0)
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____ret__V() {
	this._dispatch.Impl__PrintStackTrace__desc____ret__V()
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	this._dispatch.Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0)
}

type Java__lang__Throwable__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() []Java__lang__Throwable__Instance
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

type Java__lang__Throwable__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Throwable__Dispatch
	Message   Java__lang__String__Instance
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__GetStackTraceDepth__desc____ret__I() int {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() []Java__lang__Throwable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__Throwable__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented")
}

type Java__lang__VirtualMachineError__Static struct{}

var Java__lang__VirtualMachineError__Var Java__lang__VirtualMachineError__Static

func Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Static {
	return &Java__lang__VirtualMachineError__Var
}

func (this *Java__lang__VirtualMachineError__Static) New() *Java__lang__VirtualMachineError__Impl {
	v := &Java__lang__VirtualMachineError__Impl{
		Java__lang__Error__Impl: Java__lang__Error().New(),
	}
	v.Java__lang__VirtualMachineError__InitDispatch(v)
	return v
}

type Java__lang__VirtualMachineError__Dispatch interface {
	Java__lang__Error__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Java__lang__VirtualMachineError__InitDispatch(v Java__lang__VirtualMachineError__Dispatch) {
	this.Java__lang__Error__Impl.Java__lang__Error__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__VirtualMachineError__Instance interface {
	Instance_Init__desc____ret__V()
	Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
}

type Java__lang__VirtualMachineError__Impl struct {
	*Java__lang__Error__Impl
	_dispatch Java__lang__VirtualMachineError__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented")
}
