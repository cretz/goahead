// Generated from Azul Zulu packaged OpenJDK JAR and carries the same
// GPL license with the classpath exception
package rt

import "sync"

type Java__lang__AbstractStringBuilder__Static struct{}

var Java__lang__AbstractStringBuilder__Var Java__lang__AbstractStringBuilder__Static

func Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Static {
	return &Java__lang__AbstractStringBuilder__Var
}

func (this *Java__lang__AbstractStringBuilder__Static) New() *Java__lang__AbstractStringBuilder__Impl {
	v := &Java__lang__AbstractStringBuilder__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__AbstractStringBuilder__InitDispatch(v)
	return v
}

type Java__lang__AbstractStringBuilder__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__Capacity__desc____ret__I() int
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Impl__EnsureCapacity__desc__I__ret__V(int)
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Impl__GetValue__desc____ret____arr__C() CharArray__Instance
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Impl__SetCharAt__desc__I__C__ret__V(int, rune)
	Impl__SetLength__desc__I__ret__V(int)
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__TrimToSize__desc____ret__V()
}

func (this *Java__lang__AbstractStringBuilder__Impl) Java__lang__AbstractStringBuilder__InitDispatch(v Java__lang__AbstractStringBuilder__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Capacity__desc____ret__I() int {
	return this._dispatch.Impl__Capacity__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) EnsureCapacity__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__EnsureCapacity__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) GetValue__desc____ret____arr__C() CharArray__Instance {
	return this._dispatch.Impl__GetValue__desc____ret____arr__C()
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__AbstractStringBuilder__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder()
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	this._dispatch.Impl__SetCharAt__desc__I__C__ret__V(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SetLength__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__SetLength__desc__I__ret__V(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__AbstractStringBuilder__Impl) TrimToSize__desc____ret__V() {
	this._dispatch.Impl__TrimToSize__desc____ret__V()
}

type Java__lang__AbstractStringBuilder__Instance interface {
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Capacity__desc____ret__I() int
	CharAt__desc__I__ret__C(int) rune
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetValue__desc____ret____arr__C() CharArray__Instance
	HashCode__desc____ret__I() int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	SetLength__desc__I__ret__V(int)
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	TrimToSize__desc____ret__V()
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	FieldGet__Java__lang__AbstractStringBuilder__Count() int
	FieldSet__Java__lang__AbstractStringBuilder__Count(v int)
	FieldGet__Java__lang__AbstractStringBuilder__Value() CharArray__Instance
	FieldSet__Java__lang__AbstractStringBuilder__Value(v CharArray__Instance)
	RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AbstractStringBuilder__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__AbstractStringBuilder__Dispatch
	Count     int
	Value     CharArray__Instance
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Count() int {
	return this.Count
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Count(v int) {
	this.Count = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldGet__Java__lang__AbstractStringBuilder__Value() CharArray__Instance {
	return this.Value
}

func (this *Java__lang__AbstractStringBuilder__Impl) FieldSet__Java__lang__AbstractStringBuilder__Value(v CharArray__Instance) {
	this.Value = v
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/AbstractStringBuilder.<init>()V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/AbstractStringBuilder.<init>(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(D)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(F)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(J)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/AbstractStringBuilder;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/Object;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append(Z)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append([C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.append([CII)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.appendCodePoint(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.capacity()I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented - java/lang/AbstractStringBuilder.charAt(I)C")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.codePointAt(I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.codePointBefore(I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.codePointCount(II)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.delete(II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.deleteCharAt(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/AbstractStringBuilder.ensureCapacity(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Not Implemented - java/lang/AbstractStringBuilder.getChars(II[CI)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__GetValue__desc____ret____arr__C() CharArray__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.getValue()[C")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(IC)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(ID)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(IF)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(IJ)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/Object;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(ILjava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(IZ)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(I[C)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.insert(I[CII)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.length()I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/AbstractStringBuilder.offsetByCodePoints(II)I")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.replace(IILjava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.reverse()Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Not Implemented - java/lang/AbstractStringBuilder.setCharAt(IC)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/AbstractStringBuilder.setLength(I)V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/AbstractStringBuilder.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Abstract")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Not Implemented - java/lang/AbstractStringBuilder.trimToSize()V")
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0)
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0, var1, var2)
}

func (this *Java__lang__AbstractStringBuilder__Impl) RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl {
	return this
}

func (this *Java__lang__AbstractStringBuilder__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Appendable__Static struct{}

var Java__lang__Appendable__Var Java__lang__Appendable__Static

func Java__lang__Appendable() *Java__lang__Appendable__Static {
	return &Java__lang__Appendable__Var
}

type Java__lang__Appendable__Instance interface {
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__Static struct{}

var Java__lang__AutoCloseable__Var Java__lang__AutoCloseable__Static

func Java__lang__AutoCloseable() *Java__lang__AutoCloseable__Static {
	return &Java__lang__AutoCloseable__Var
}

type Java__lang__AutoCloseable__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Close__desc____ret__V()
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__dynproxy____Static struct{}

var Java__lang__AutoCloseable__dynproxy____Var Java__lang__AutoCloseable__dynproxy____Static

func Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Static {
	return &Java__lang__AutoCloseable__dynproxy____Var
}

func (this *Java__lang__AutoCloseable__dynproxy____Static) New() *Java__lang__AutoCloseable__dynproxy____Impl {
	v := &Java__lang__AutoCloseable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__AutoCloseable__dynproxy____InitDispatch(v)
	return v
}

type Java__lang__AutoCloseable__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Close__desc____ret__V()
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Java__lang__AutoCloseable__dynproxy____InitDispatch(v Java__lang__AutoCloseable__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Close__desc____ret__V() {
	this._dispatch.Impl__Close__desc____ret__V()
}

type Java__lang__AutoCloseable__dynproxy____Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Close__desc____ret__V()
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__AutoCloseable__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__AutoCloseable__dynproxy____Dispatch
	fn        func()
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) RawPtr__Java__lang__AutoCloseable__dynproxy__() *Java__lang__AutoCloseable__dynproxy____Impl {
	return this
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__lang__AutoCloseable__Static) DynProxy_Create(fn func()) Java__lang__AutoCloseable__Instance {
	v := &Java__lang__AutoCloseable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__lang__AutoCloseable__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__lang__AutoCloseable__dynproxy____Impl) Impl__Close__desc____ret__V() {
	this.fn()
}

type Java__lang__Boolean__Static struct {
	FALSE Java__lang__Boolean__Instance
	TRUE  Java__lang__Boolean__Instance
	TYPE  Java__lang__Class__Instance
	init  sync.Once
}

var Java__lang__Boolean__Var Java__lang__Boolean__Static

func Java__lang__Boolean() *Java__lang__Boolean__Static {
	Java__lang__Boolean__Var.init.Do(Java__lang__Boolean__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Boolean__Var
}

func (this *Java__lang__Boolean__Static) New() *Java__lang__Boolean__Impl {
	v := &Java__lang__Boolean__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Boolean__InitDispatch(v)
	return v
}

func (this *Java__lang__Boolean__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Boolean__Static) Impl__Compare__desc__Z__Z__ret__I(var0 bool, var1 bool) int {
	panic("Not Implemented - java/lang/Boolean.compare(ZZ)I")
}

func (this *Java__lang__Boolean__Static) Impl__GetBoolean__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/Boolean.getBoolean(Ljava/lang/String;)Z")
}

func (this *Java__lang__Boolean__Static) Impl__HashCode__desc__Z__ret__I(var0 bool) int {
	panic("Not Implemented - java/lang/Boolean.hashCode(Z)I")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalAnd__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Not Implemented - java/lang/Boolean.logicalAnd(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalOr__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Not Implemented - java/lang/Boolean.logicalOr(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__LogicalXor__desc__Z__Z__ret__Z(var0 bool, var1 bool) bool {
	panic("Not Implemented - java/lang/Boolean.logicalXor(ZZ)Z")
}

func (this *Java__lang__Boolean__Static) Impl__ParseBoolean__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/Boolean.parseBoolean(Ljava/lang/String;)Z")
}

func (this *Java__lang__Boolean__Static) Impl__ToString__desc__Z__ret____obj__Java__lang__String(var0 bool) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Boolean.toString(Z)Ljava/lang/String;")
}

func (this *Java__lang__Boolean__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Boolean(var0 Java__lang__String__Instance) Java__lang__Boolean__Instance {
	panic("Not Implemented - java/lang/Boolean.valueOf(Ljava/lang/String;)Ljava/lang/Boolean;")
}

func (this *Java__lang__Boolean__Static) Impl__ValueOf__desc__Z__ret____obj__Java__lang__Boolean(var0 bool) Java__lang__Boolean__Instance {
	panic("Not Implemented - java/lang/Boolean.valueOf(Z)Ljava/lang/Boolean;")
}

type Java__lang__Boolean__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc__Z__ret__V(bool)
	Impl__BooleanValue__desc____ret__Z() bool
	Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(Java__lang__Boolean__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Boolean__Impl) Java__lang__Boolean__InitDispatch(v Java__lang__Boolean__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Boolean__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Boolean__Impl) Instance_Init__desc__Z__ret__V(var0 bool) {
	this._dispatch.Impl__Instance_Init__desc__Z__ret__V(var0)
}

func (this *Java__lang__Boolean__Impl) BooleanValue__desc____ret__Z() bool {
	return this._dispatch.Impl__BooleanValue__desc____ret__Z()
}

func (this *Java__lang__Boolean__Impl) CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0 Java__lang__Boolean__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0)
}

func (this *Java__lang__Boolean__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Boolean__Instance interface {
	BooleanValue__desc____ret__Z() bool
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Boolean__ret__I(Java__lang__Boolean__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Boolean() *Java__lang__Boolean__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Boolean__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Boolean__Dispatch
	Value     bool
}

func (this *Java__lang__Boolean__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Boolean.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Boolean__Impl) Impl__Instance_Init__desc__Z__ret__V(var0 bool) {
	panic("Not Implemented - java/lang/Boolean.<init>(Z)V")
}

func (this *Java__lang__Boolean__Impl) Impl__BooleanValue__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Boolean.booleanValue()Z")
}

func (this *Java__lang__Boolean__Impl) Impl__CompareTo__desc____obj__Java__lang__Boolean__ret__I(var0 Java__lang__Boolean__Instance) int {
	panic("Not Implemented - java/lang/Boolean.compareTo(Ljava/lang/Boolean;)I")
}

func (this *Java__lang__Boolean__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Boolean.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Boolean__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Boolean.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Boolean__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Boolean.hashCode()I")
}

func (this *Java__lang__Boolean__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Boolean.toString()Ljava/lang/String;")
}

func (this *Java__lang__Boolean__Impl) RawPtr__Java__lang__Boolean() *Java__lang__Boolean__Impl {
	return this
}

func (this *Java__lang__Boolean__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Byte__Static struct {
	BYTES     int
	MAX_VALUE int8
	MIN_VALUE int8
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Byte__Var Java__lang__Byte__Static

func Java__lang__Byte() *Java__lang__Byte__Static {
	Java__lang__Byte__Var.init.Do(Java__lang__Byte__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Byte__Var
}

func (this *Java__lang__Byte__Static) New() *Java__lang__Byte__Impl {
	v := &Java__lang__Byte__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Byte__InitDispatch(v)
	return v
}

func (this *Java__lang__Byte__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Byte__Static) Impl__Compare__desc__B__B__ret__I(var0 int8, var1 int8) int {
	panic("Not Implemented - java/lang/Byte.compare(BB)I")
}

func (this *Java__lang__Byte__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance) Java__lang__Byte__Instance {
	panic("Not Implemented - java/lang/Byte.decode(Ljava/lang/String;)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__HashCode__desc__B__ret__I(var0 int8) int {
	panic("Not Implemented - java/lang/Byte.hashCode(B)I")
}

func (this *Java__lang__Byte__Static) Impl__ParseByte__desc____obj__Java__lang__String__ret__B(var0 Java__lang__String__Instance) int8 {
	panic("Not Implemented - java/lang/Byte.parseByte(Ljava/lang/String;)B")
}

func (this *Java__lang__Byte__Static) Impl__ParseByte__desc____obj__Java__lang__String__I__ret__B(var0 Java__lang__String__Instance, var1 int) int8 {
	panic("Not Implemented - java/lang/Byte.parseByte(Ljava/lang/String;I)B")
}

func (this *Java__lang__Byte__Static) Impl__ToString__desc__B__ret____obj__Java__lang__String(var0 int8) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Byte.toString(B)Ljava/lang/String;")
}

func (this *Java__lang__Byte__Static) Impl__ToUnsignedInt__desc__B__ret__I(var0 int8) int {
	panic("Not Implemented - java/lang/Byte.toUnsignedInt(B)I")
}

func (this *Java__lang__Byte__Static) Impl__ToUnsignedLong__desc__B__ret__J(var0 int8) int64 {
	panic("Not Implemented - java/lang/Byte.toUnsignedLong(B)J")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc__B__ret____obj__Java__lang__Byte(var0 int8) Java__lang__Byte__Instance {
	panic("Not Implemented - java/lang/Byte.valueOf(B)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance) Java__lang__Byte__Instance {
	panic("Not Implemented - java/lang/Byte.valueOf(Ljava/lang/String;)Ljava/lang/Byte;")
}

func (this *Java__lang__Byte__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Byte(var0 Java__lang__String__Instance, var1 int) Java__lang__Byte__Instance {
	panic("Not Implemented - java/lang/Byte.valueOf(Ljava/lang/String;I)Ljava/lang/Byte;")
}

type Java__lang__Byte__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__B__ret__V(int8)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(Java__lang__Byte__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Byte__Impl) Java__lang__Byte__InitDispatch(v Java__lang__Byte__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Byte__Impl) Instance_Init__desc__B__ret__V(var0 int8) {
	this._dispatch.Impl__Instance_Init__desc__B__ret__V(var0)
}

func (this *Java__lang__Byte__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Byte__Impl) CompareTo__desc____obj__Java__lang__Byte__ret__I(var0 Java__lang__Byte__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(var0)
}

func (this *Java__lang__Byte__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Byte__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Byte__ret__I(Java__lang__Byte__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Byte() *Java__lang__Byte__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Byte__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Byte__Dispatch
	Value     byte
}

func (this *Java__lang__Byte__Impl) Impl__Instance_Init__desc__B__ret__V(var0 int8) {
	panic("Not Implemented - java/lang/Byte.<init>(B)V")
}

func (this *Java__lang__Byte__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Byte.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Byte__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Byte.byteValue()B")
}

func (this *Java__lang__Byte__Impl) Impl__CompareTo__desc____obj__Java__lang__Byte__ret__I(var0 Java__lang__Byte__Instance) int {
	panic("Not Implemented - java/lang/Byte.compareTo(Ljava/lang/Byte;)I")
}

func (this *Java__lang__Byte__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Byte.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Byte__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Byte.doubleValue()D")
}

func (this *Java__lang__Byte__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Byte.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Byte__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Byte.floatValue()F")
}

func (this *Java__lang__Byte__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Byte.hashCode()I")
}

func (this *Java__lang__Byte__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Byte.intValue()I")
}

func (this *Java__lang__Byte__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/Byte.longValue()J")
}

func (this *Java__lang__Byte__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Byte.shortValue()S")
}

func (this *Java__lang__Byte__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Byte.toString()Ljava/lang/String;")
}

func (this *Java__lang__Byte__Impl) RawPtr__Java__lang__Byte() *Java__lang__Byte__Impl {
	return this
}

func (this *Java__lang__Byte__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__CharSequence__Static struct{}

var Java__lang__CharSequence__Var Java__lang__CharSequence__Static

func Java__lang__CharSequence() *Java__lang__CharSequence__Static {
	return &Java__lang__CharSequence__Var
}

type Java__lang__CharSequence__Instance interface {
	CharAt__desc__I__ret__C(int) rune
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Length__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__Static struct {
	__dollar__assertionsDisabled              bool
	BYTES                                     int
	COMBINING_SPACING_MARK                    int8
	CONNECTOR_PUNCTUATION                     int8
	CONTROL                                   int8
	CURRENCY_SYMBOL                           int8
	DASH_PUNCTUATION                          int8
	DECIMAL_DIGIT_NUMBER                      int8
	DIRECTIONALITY_ARABIC_NUMBER              int8
	DIRECTIONALITY_BOUNDARY_NEUTRAL           int8
	DIRECTIONALITY_COMMON_NUMBER_SEPARATOR    int8
	DIRECTIONALITY_EUROPEAN_NUMBER            int8
	DIRECTIONALITY_EUROPEAN_NUMBER_SEPARATOR  int8
	DIRECTIONALITY_EUROPEAN_NUMBER_TERMINATOR int8
	DIRECTIONALITY_LEFT_TO_RIGHT              int8
	DIRECTIONALITY_LEFT_TO_RIGHT_EMBEDDING    int8
	DIRECTIONALITY_LEFT_TO_RIGHT_OVERRIDE     int8
	DIRECTIONALITY_NONSPACING_MARK            int8
	DIRECTIONALITY_OTHER_NEUTRALS             int8
	DIRECTIONALITY_PARAGRAPH_SEPARATOR        int8
	DIRECTIONALITY_POP_DIRECTIONAL_FORMAT     int8
	DIRECTIONALITY_RIGHT_TO_LEFT              int8
	DIRECTIONALITY_RIGHT_TO_LEFT_ARABIC       int8
	DIRECTIONALITY_RIGHT_TO_LEFT_EMBEDDING    int8
	DIRECTIONALITY_RIGHT_TO_LEFT_OVERRIDE     int8
	DIRECTIONALITY_SEGMENT_SEPARATOR          int8
	DIRECTIONALITY_UNDEFINED                  int8
	DIRECTIONALITY_WHITESPACE                 int8
	ENCLOSING_MARK                            int8
	END_PUNCTUATION                           int8
	ERROR                                     int
	FINAL_QUOTE_PUNCTUATION                   int8
	FORMAT                                    int8
	INITIAL_QUOTE_PUNCTUATION                 int8
	LETTER_NUMBER                             int8
	LINE_SEPARATOR                            int8
	LOWERCASE_LETTER                          int8
	MATH_SYMBOL                               int8
	MAX_CODE_POINT                            int
	MAX_HIGH_SURROGATE                        rune
	MAX_LOW_SURROGATE                         rune
	MAX_RADIX                                 int
	MAX_SURROGATE                             rune
	MAX_VALUE                                 rune
	MIN_CODE_POINT                            int
	MIN_HIGH_SURROGATE                        rune
	MIN_LOW_SURROGATE                         rune
	MIN_RADIX                                 int
	MIN_SUPPLEMENTARY_CODE_POINT              int
	MIN_SURROGATE                             rune
	MIN_VALUE                                 rune
	MODIFIER_LETTER                           int8
	MODIFIER_SYMBOL                           int8
	NON_SPACING_MARK                          int8
	OTHER_LETTER                              int8
	OTHER_NUMBER                              int8
	OTHER_PUNCTUATION                         int8
	OTHER_SYMBOL                              int8
	PARAGRAPH_SEPARATOR                       int8
	PRIVATE_USE                               int8
	SIZE                                      int
	SPACE_SEPARATOR                           int8
	START_PUNCTUATION                         int8
	SURROGATE                                 int8
	TITLECASE_LETTER                          int8
	TYPE                                      Java__lang__Class__Instance
	UNASSIGNED                                int8
	UPPERCASE_LETTER                          int8
	init                                      sync.Once
}

var Java__lang__Character__Var Java__lang__Character__Static

func Java__lang__Character() *Java__lang__Character__Static {
	Java__lang__Character__Var.init.Do(Java__lang__Character__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Character__Var
}

func (this *Java__lang__Character__Static) New() *Java__lang__Character__Impl {
	v := &Java__lang__Character__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Character__InitDispatch(v)
	return v
}

func (this *Java__lang__Character__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Character__Static) Impl__CharCount__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.charCount(I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____obj__Java__lang__CharSequence__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Character.codePointAt(Ljava/lang/CharSequence;I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____arr__C__I__ret__I(var0 CharArray__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Character.codePointAt([CI)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAt__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointAt([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointAtImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointAtImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____obj__Java__lang__CharSequence__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Character.codePointBefore(Ljava/lang/CharSequence;I)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____arr__C__I__ret__I(var0 CharArray__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Character.codePointBefore([CI)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBefore__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointBefore([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointBeforeImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointBeforeImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointCount__desc____obj__Java__lang__CharSequence__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointCount(Ljava/lang/CharSequence;II)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointCount__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointCount([CII)I")
}

func (this *Java__lang__Character__Static) Impl__CodePointCountImpl__desc____arr__C__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.codePointCountImpl([CII)I")
}

func (this *Java__lang__Character__Static) Impl__Compare__desc__C__C__ret__I(var0 rune, var1 rune) int {
	panic("Not Implemented - java/lang/Character.compare(CC)I")
}

func (this *Java__lang__Character__Static) Impl__Digit__desc__C__I__ret__I(var0 rune, var1 int) int {
	panic("Not Implemented - java/lang/Character.digit(CI)I")
}

func (this *Java__lang__Character__Static) Impl__Digit__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Character.digit(II)I")
}

func (this *Java__lang__Character__Static) Impl__ForDigit__desc__I__I__ret__C(var0 int, var1 int) rune {
	panic("Not Implemented - java/lang/Character.forDigit(II)C")
}

func (this *Java__lang__Character__Static) Impl__GetDirectionality__desc__C__ret__B(var0 rune) int8 {
	panic("Not Implemented - java/lang/Character.getDirectionality(C)B")
}

func (this *Java__lang__Character__Static) Impl__GetDirectionality__desc__I__ret__B(var0 int) int8 {
	panic("Not Implemented - java/lang/Character.getDirectionality(I)B")
}

func (this *Java__lang__Character__Static) Impl__GetName__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Character.getName(I)Ljava/lang/String;")
}

func (this *Java__lang__Character__Static) Impl__GetNumericValue__desc__C__ret__I(var0 rune) int {
	panic("Not Implemented - java/lang/Character.getNumericValue(C)I")
}

func (this *Java__lang__Character__Static) Impl__GetNumericValue__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.getNumericValue(I)I")
}

func (this *Java__lang__Character__Static) Impl__GetType__desc__C__ret__I(var0 rune) int {
	panic("Not Implemented - java/lang/Character.getType(C)I")
}

func (this *Java__lang__Character__Static) Impl__GetType__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.getType(I)I")
}

func (this *Java__lang__Character__Static) Impl__HashCode__desc__C__ret__I(var0 rune) int {
	panic("Not Implemented - java/lang/Character.hashCode(C)I")
}

func (this *Java__lang__Character__Static) Impl__HighSurrogate__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented - java/lang/Character.highSurrogate(I)C")
}

func (this *Java__lang__Character__Static) Impl__IsAlphabetic__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isAlphabetic(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsBmpCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isBmpCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDefined__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isDefined(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDefined__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isDefined(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsDigit__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isDigit(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsHighSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isHighSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsISOControl__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isISOControl(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsISOControl__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isISOControl(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdentifierIgnorable__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isIdentifierIgnorable(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdentifierIgnorable__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isIdentifierIgnorable(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsIdeographic__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isIdeographic(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierPart__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isJavaIdentifierPart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierPart__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isJavaIdentifierPart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierStart__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isJavaIdentifierStart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaIdentifierStart__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isJavaIdentifierStart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaLetter__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isJavaLetter(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsJavaLetterOrDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isJavaLetterOrDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetter__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isLetter(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetter__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isLetter(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetterOrDigit__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isLetterOrDigit(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLetterOrDigit__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isLetterOrDigit(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isLowSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowerCase__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isLowerCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsLowerCase__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isLowerCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsMirrored__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isMirrored(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsMirrored__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isMirrored(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpace__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isSpace(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpaceChar__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isSpaceChar(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSpaceChar__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isSpaceChar(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSupplementaryCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isSupplementaryCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSurrogate__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isSurrogate(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsSurrogatePair__desc__C__C__ret__Z(var0 rune, var1 rune) bool {
	panic("Not Implemented - java/lang/Character.isSurrogatePair(CC)Z")
}

func (this *Java__lang__Character__Static) Impl__IsTitleCase__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isTitleCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsTitleCase__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isTitleCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierPart__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isUnicodeIdentifierPart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierPart__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isUnicodeIdentifierPart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierStart__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isUnicodeIdentifierStart(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUnicodeIdentifierStart__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isUnicodeIdentifierStart(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUpperCase__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isUpperCase(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsUpperCase__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isUpperCase(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsValidCodePoint__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isValidCodePoint(I)Z")
}

func (this *Java__lang__Character__Static) Impl__IsWhitespace__desc__C__ret__Z(var0 rune) bool {
	panic("Not Implemented - java/lang/Character.isWhitespace(C)Z")
}

func (this *Java__lang__Character__Static) Impl__IsWhitespace__desc__I__ret__Z(var0 int) bool {
	panic("Not Implemented - java/lang/Character.isWhitespace(I)Z")
}

func (this *Java__lang__Character__Static) Impl__LowSurrogate__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented - java/lang/Character.lowSurrogate(I)C")
}

func (this *Java__lang__Character__Static) Impl__OffsetByCodePoints__desc____obj__Java__lang__CharSequence__I__I__ret__I(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) int {
	panic("Not Implemented - java/lang/Character.offsetByCodePoints(Ljava/lang/CharSequence;II)I")
}

func (this *Java__lang__Character__Static) Impl__OffsetByCodePoints__desc____arr__C__I__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 int, var4 int) int {
	panic("Not Implemented - java/lang/Character.offsetByCodePoints([CIIII)I")
}

func (this *Java__lang__Character__Static) Impl__OffsetByCodePointsImpl__desc____arr__C__I__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 int, var4 int) int {
	panic("Not Implemented - java/lang/Character.offsetByCodePointsImpl([CIIII)I")
}

func (this *Java__lang__Character__Static) Impl__ReverseBytes__desc__C__ret__C(var0 rune) rune {
	panic("Not Implemented - java/lang/Character.reverseBytes(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToChars__desc__I__ret____arr__C(var0 int) CharArray__Instance {
	panic("Not Implemented - java/lang/Character.toChars(I)[C")
}

func (this *Java__lang__Character__Static) Impl__ToChars__desc__I____arr__C__I__ret__I(var0 int, var1 CharArray__Instance, var2 int) int {
	panic("Not Implemented - java/lang/Character.toChars(I[CI)I")
}

func (this *Java__lang__Character__Static) Impl__ToCodePoint__desc__C__C__ret__I(var0 rune, var1 rune) int {
	panic("Not Implemented - java/lang/Character.toCodePoint(CC)I")
}

func (this *Java__lang__Character__Static) Impl__ToLowerCase__desc__C__ret__C(var0 rune) rune {
	panic("Not Implemented - java/lang/Character.toLowerCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToLowerCase__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.toLowerCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__ToString__desc__C__ret____obj__Java__lang__String(var0 rune) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Character.toString(C)Ljava/lang/String;")
}

func (this *Java__lang__Character__Static) Impl__ToSurrogates__desc__I____arr__C__I__ret__V(var0 int, var1 CharArray__Instance, var2 int) {
	panic("Not Implemented - java/lang/Character.toSurrogates(I[CI)V")
}

func (this *Java__lang__Character__Static) Impl__ToTitleCase__desc__C__ret__C(var0 rune) rune {
	panic("Not Implemented - java/lang/Character.toTitleCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToTitleCase__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.toTitleCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCase__desc__C__ret__C(var0 rune) rune {
	panic("Not Implemented - java/lang/Character.toUpperCase(C)C")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCase__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.toUpperCase(I)I")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCaseCharArray__desc__I__ret____arr__C(var0 int) CharArray__Instance {
	panic("Not Implemented - java/lang/Character.toUpperCaseCharArray(I)[C")
}

func (this *Java__lang__Character__Static) Impl__ToUpperCaseEx__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Character.toUpperCaseEx(I)I")
}

func (this *Java__lang__Character__Static) Impl__ValueOf__desc__C__ret____obj__Java__lang__Character(var0 rune) Java__lang__Character__Instance {
	panic("Not Implemented - java/lang/Character.valueOf(C)Ljava/lang/Character;")
}

type Java__lang__Character__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc__C__ret__V(rune)
	Impl__CharValue__desc____ret__C() rune
	Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(Java__lang__Character__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Character__Impl) Java__lang__Character__InitDispatch(v Java__lang__Character__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Character__Impl) Instance_Init__desc__C__ret__V(var0 rune) {
	this._dispatch.Impl__Instance_Init__desc__C__ret__V(var0)
}

func (this *Java__lang__Character__Impl) CharValue__desc____ret__C() rune {
	return this._dispatch.Impl__CharValue__desc____ret__C()
}

func (this *Java__lang__Character__Impl) CompareTo__desc____obj__Java__lang__Character__ret__I(var0 Java__lang__Character__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(var0)
}

func (this *Java__lang__Character__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Character__Instance interface {
	CharValue__desc____ret__C() rune
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Character__ret__I(Java__lang__Character__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Character() *Java__lang__Character__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Character__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Character__Dispatch
	Value     rune
}

func (this *Java__lang__Character__Impl) Impl__Instance_Init__desc__C__ret__V(var0 rune) {
	panic("Not Implemented - java/lang/Character.<init>(C)V")
}

func (this *Java__lang__Character__Impl) Impl__CharValue__desc____ret__C() rune {
	panic("Not Implemented - java/lang/Character.charValue()C")
}

func (this *Java__lang__Character__Impl) Impl__CompareTo__desc____obj__Java__lang__Character__ret__I(var0 Java__lang__Character__Instance) int {
	panic("Not Implemented - java/lang/Character.compareTo(Ljava/lang/Character;)I")
}

func (this *Java__lang__Character__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Character.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Character__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Character.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Character__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Character.hashCode()I")
}

func (this *Java__lang__Character__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Character.toString()Ljava/lang/String;")
}

func (this *Java__lang__Character__Impl) RawPtr__Java__lang__Character() *Java__lang__Character__Impl {
	return this
}

func (this *Java__lang__Character__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Class__Static struct {
	init sync.Once
}

var Java__lang__Class__Var Java__lang__Class__Static

func Java__lang__Class() *Java__lang__Class__Static {
	Java__lang__Class__Var.init.Do(Java__lang__Class__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Class__Var
}

func (this *Java__lang__Class__Static) New() *Java__lang__Class__Impl {
	v := &Java__lang__Class__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Class__InitDispatch(v)
	return v
}

func (this *Java__lang__Class__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Class__Static) Impl__Access__dollar__300__desc____arr____obj__Java__lang__Object____arr____obj__Java__lang__Object__ret__Z(var0 ObjectArray__Instance, var1 ObjectArray__Instance) bool {
	panic("Not Implemented - java/lang/Class.access$300([Ljava/lang/Object;[Ljava/lang/Object;)Z")
}

func (this *Java__lang__Class__Static) Impl__Access__dollar__402__desc__Z__ret__Z(var0 bool) bool {
	panic("Not Implemented - java/lang/Class.access$402(Z)Z")
}

func (this *Java__lang__Class__Static) Impl__Access__dollar__502__desc__Z__ret__Z(var0 bool) bool {
	panic("Not Implemented - java/lang/Class.access$502(Z)Z")
}

func (this *Java__lang__Class__Static) Impl__ForName__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.forName(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Static) Impl__ForName__desc____obj__Java__lang__String__Z____obj__Java__lang__ClassLoader__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool, var2 Java__lang__ClassLoader__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Static) Impl__GetPrimitiveClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.getPrimitiveClass(Ljava/lang/String;)Ljava/lang/Class;")
}

type Java__lang__Class__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(Java__lang__Class__Instance) Java__lang__Class__Instance
	Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Impl__DesiredAssertionStatus__desc____ret__Z() bool
	Impl__GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance
	Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance
	Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	Impl__GetModifiers__desc____ret__I() int
	Impl__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance
	Impl__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance
	Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	Impl__GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__IsAnnotation__desc____ret__Z() bool
	Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	Impl__IsAnonymousClass__desc____ret__Z() bool
	Impl__IsArray__desc____ret__Z() bool
	Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	Impl__IsEnum__desc____ret__Z() bool
	Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__IsInterface__desc____ret__Z() bool
	Impl__IsLocalClass__desc____ret__Z() bool
	Impl__IsMemberClass__desc____ret__Z() bool
	Impl__IsPrimitive__desc____ret__Z() bool
	Impl__IsSynthetic__desc____ret__Z() bool
	Impl__NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(ObjectArray__Instance)
	Impl__ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__Class__Impl) Java__lang__Class__InitDispatch(v Java__lang__Class__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Class__Impl) AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0 Java__lang__Class__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__Class__Impl) Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0)
}

func (this *Java__lang__Class__Impl) DesiredAssertionStatus__desc____ret__Z() bool {
	return this._dispatch.Impl__DesiredAssertionStatus__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetCanonicalName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__Class__Impl) GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__Class__Impl) GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetComponentType__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance {
	return this._dispatch.Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type()
}

func (this *Java__lang__Class__Impl) GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance {
	return this._dispatch.Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type()
}

func (this *Java__lang__Class__Impl) GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	return this._dispatch.Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetModifiers__desc____ret__I() int {
	return this._dispatch.Impl__GetModifiers__desc____ret__I()
}

func (this *Java__lang__Class__Impl) GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__GetRawAnnotations__desc____ret____arr__B()
}

func (this *Java__lang__Class__Impl) GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__GetRawTypeAnnotations__desc____ret____arr__B()
}

func (this *Java__lang__Class__Impl) GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	return this._dispatch.Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetSimpleName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetSuperclass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Class__Impl) GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetTypeName__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Class__Impl) IsAnnotation__desc____ret__Z() bool {
	return this._dispatch.Impl__IsAnnotation__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	return this._dispatch.Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsAnonymousClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsAnonymousClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsArray__desc____ret__Z() bool {
	return this._dispatch.Impl__IsArray__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	return this._dispatch.Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsEnum__desc____ret__Z() bool {
	return this._dispatch.Impl__IsEnum__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsInstance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__Class__Impl) IsInterface__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInterface__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsLocalClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsLocalClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsMemberClass__desc____ret__Z() bool {
	return this._dispatch.Impl__IsMemberClass__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsPrimitive__desc____ret__Z() bool {
	return this._dispatch.Impl__IsPrimitive__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) IsSynthetic__desc____ret__Z() bool {
	return this._dispatch.Impl__IsSynthetic__desc____ret__Z()
}

func (this *Java__lang__Class__Impl) NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__NewInstance__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Class__Impl) SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0 ObjectArray__Instance) {
	this._dispatch.Impl__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0)
}

func (this *Java__lang__Class__Impl) ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToGenericString__desc____ret____obj__Java__lang__String()
}

type Java__lang__Class__Instance interface {
	AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(Java__lang__Class__Instance) Java__lang__Class__Instance
	Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DesiredAssertionStatus__desc____ret__Z() bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance
	GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance
	GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance
	GetModifiers__desc____ret__I() int
	GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance
	GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance
	GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	HashCode__desc____ret__I() int
	IsAnnotation__desc____ret__Z() bool
	IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	IsAnonymousClass__desc____ret__Z() bool
	IsArray__desc____ret__Z() bool
	IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(Java__lang__Class__Instance) bool
	IsEnum__desc____ret__Z() bool
	IsInstance__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	IsInterface__desc____ret__Z() bool
	IsLocalClass__desc____ret__Z() bool
	IsMemberClass__desc____ret__Z() bool
	IsPrimitive__desc____ret__Z() bool
	IsSynthetic__desc____ret__Z() bool
	NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	SetSigners__desc____arr____obj__Java__lang__Object__ret__V(ObjectArray__Instance)
	ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Class() *Java__lang__Class__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Class__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Class__Dispatch
}

func (this *Java__lang__Class__Impl) Impl__AsSubclass__desc____obj__Java__lang__Class__ret____obj__Java__lang__Class(var0 Java__lang__Class__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.asSubclass(Ljava/lang/Class;)Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__Cast__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	panic("Not Implemented - java/lang/Class.cast(Ljava/lang/Object;)Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__DesiredAssertionStatus__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.desiredAssertionStatus()Z")
}

func (this *Java__lang__Class__Impl) Impl__GetCanonicalName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.getCanonicalName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Not Implemented - java/lang/Class.getClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__Class__Impl) Impl__GetClassLoader0__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Not Implemented - java/lang/Class.getClassLoader0()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__Class__Impl) Impl__GetClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getClasses()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetComponentType__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.getComponentType()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaredClasses__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getDeclaredClasses()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetDeclaringClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.getDeclaringClass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetEnclosingClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.getEnclosingClass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetEnumConstants__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getEnumConstants()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__GetEnumConstantsShared__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getEnumConstantsShared()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__GetGenericInterfaces__desc____ret____arr____obj__Java__lang__reflect__Type() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getGenericInterfaces()[Ljava/lang/reflect/Type;")
}

func (this *Java__lang__Class__Impl) Impl__GetGenericSuperclass__desc____ret____obj__Java__lang__reflect__Type() Java__lang__reflect__Type__Instance {
	panic("Not Implemented - java/lang/Class.getGenericSuperclass()Ljava/lang/reflect/Type;")
}

func (this *Java__lang__Class__Impl) Impl__GetInterfaces__desc____ret____arr____obj__Java__lang__Class() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getInterfaces()[Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetModifiers__desc____ret__I() int {
	panic("Not Implemented - java/lang/Class.getModifiers()I")
}

func (this *Java__lang__Class__Impl) Impl__GetName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.getName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetRawAnnotations__desc____ret____arr__B() ByteArray__Instance {
	panic("Not Implemented - java/lang/Class.getRawAnnotations()[B")
}

func (this *Java__lang__Class__Impl) Impl__GetRawTypeAnnotations__desc____ret____arr__B() ByteArray__Instance {
	panic("Not Implemented - java/lang/Class.getRawTypeAnnotations()[B")
}

func (this *Java__lang__Class__Impl) Impl__GetSigners__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Class.getSigners()[Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__GetSimpleName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.getSimpleName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__GetSuperclass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/Class.getSuperclass()Ljava/lang/Class;")
}

func (this *Java__lang__Class__Impl) Impl__GetTypeName__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.getTypeName()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__IsAnnotation__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isAnnotation()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAnnotationPresent__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Not Implemented - java/lang/Class.isAnnotationPresent(Ljava/lang/Class;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAnonymousClass__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isAnonymousClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsArray__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isArray()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsAssignableFrom__desc____obj__Java__lang__Class__ret__Z(var0 Java__lang__Class__Instance) bool {
	panic("Not Implemented - java/lang/Class.isAssignableFrom(Ljava/lang/Class;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsEnum__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isEnum()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsInstance__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Class.isInstance(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Class__Impl) Impl__IsInterface__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isInterface()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsLocalClass__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isLocalClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsMemberClass__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isMemberClass()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsPrimitive__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isPrimitive()Z")
}

func (this *Java__lang__Class__Impl) Impl__IsSynthetic__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Class.isSynthetic()Z")
}

func (this *Java__lang__Class__Impl) Impl__NewInstance__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Not Implemented - java/lang/Class.newInstance()Ljava/lang/Object;")
}

func (this *Java__lang__Class__Impl) Impl__SetSigners__desc____arr____obj__Java__lang__Object__ret__V(var0 ObjectArray__Instance) {
	panic("Not Implemented - java/lang/Class.setSigners([Ljava/lang/Object;)V")
}

func (this *Java__lang__Class__Impl) Impl__ToGenericString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.toGenericString()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Class.toString()Ljava/lang/String;")
}

func (this *Java__lang__Class__Impl) RawPtr__Java__lang__Class() *Java__lang__Class__Impl {
	return this
}

func (this *Java__lang__Class__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassCastException__Static struct{}

var Java__lang__ClassCastException__Var Java__lang__ClassCastException__Static

func Java__lang__ClassCastException() *Java__lang__ClassCastException__Static {
	return &Java__lang__ClassCastException__Var
}

func (this *Java__lang__ClassCastException__Static) New() *Java__lang__ClassCastException__Impl {
	v := &Java__lang__ClassCastException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__ClassCastException__InitDispatch(v)
	return v
}

type Java__lang__ClassCastException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__ClassCastException__Impl) Java__lang__ClassCastException__InitDispatch(v Java__lang__ClassCastException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__ClassCastException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__ClassCastException() *Java__lang__ClassCastException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassCastException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__ClassCastException__Dispatch
}

func (this *Java__lang__ClassCastException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/ClassCastException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__ClassCastException__Impl) RawPtr__Java__lang__ClassCastException() *Java__lang__ClassCastException__Impl {
	return this
}

func (this *Java__lang__ClassCastException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__ClassLoader__Static struct {
	init sync.Once
}

var Java__lang__ClassLoader__Var Java__lang__ClassLoader__Static

func Java__lang__ClassLoader() *Java__lang__ClassLoader__Static {
	Java__lang__ClassLoader__Var.init.Do(Java__lang__ClassLoader__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__ClassLoader__Var
}

func (this *Java__lang__ClassLoader__Static) New() *Java__lang__ClassLoader__Impl {
	v := &Java__lang__ClassLoader__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__ClassLoader__InitDispatch(v)
	return v
}

func (this *Java__lang__ClassLoader__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__ClassLoader__Static) Impl__CheckClassLoaderPermission__desc____obj__Java__lang__ClassLoader____obj__Java__lang__Class__ret__V(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__Class__Instance) {
	panic("Not Implemented - java/lang/ClassLoader.checkClassLoaderPermission(Ljava/lang/ClassLoader;Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Static) Impl__FindNative__desc____obj__Java__lang__ClassLoader____obj__Java__lang__String__ret__J(var0 Java__lang__ClassLoader__Instance, var1 Java__lang__String__Instance) int64 {
	panic("Not Implemented - java/lang/ClassLoader.findNative(Ljava/lang/ClassLoader;Ljava/lang/String;)J")
}

func (this *Java__lang__ClassLoader__Static) Impl__GetClassLoader__desc____obj__Java__lang__Class__ret____obj__Java__lang__ClassLoader(var0 Java__lang__Class__Instance) Java__lang__ClassLoader__Instance {
	panic("Not Implemented - java/lang/ClassLoader.getClassLoader(Ljava/lang/Class;)Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__GetSystemClassLoader__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Not Implemented - java/lang/ClassLoader.getSystemClassLoader()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Static) Impl__LoadLibrary__desc____obj__Java__lang__Class____obj__Java__lang__String__Z__ret__V(var0 Java__lang__Class__Instance, var1 Java__lang__String__Instance, var2 bool) {
	panic("Not Implemented - java/lang/ClassLoader.loadLibrary(Ljava/lang/Class;Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Static) Impl__RegisterAsParallelCapable__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/ClassLoader.registerAsParallelCapable()Z")
}

type Java__lang__ClassLoader__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(Java__lang__ClassLoader__Instance)
	Impl__AddClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Impl__ClearAssertionStatus__desc____ret__V()
	Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(Java__lang__String__Instance, ByteArray__Instance, int, int) Java__lang__Class__Instance
	Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(ByteArray__Instance, int, int) Java__lang__Class__Instance
	Impl__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(Java__lang__String__Instance) Java__lang__Object__Instance
	Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	Impl__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(Java__lang__ClassLoader__Instance) bool
	Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(Java__lang__String__Instance, bool) Java__lang__Class__Instance
	Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Impl__SetDefaultAssertionStatus__desc__Z__ret__V(bool)
	Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(Java__lang__Class__Instance, ObjectArray__Instance)
}

func (this *Java__lang__ClassLoader__Impl) Java__lang__ClassLoader__InitDispatch(v Java__lang__ClassLoader__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__ClassLoader__Impl) Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0 Java__lang__ClassLoader__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) AddClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	this._dispatch.Impl__AddClass__desc____obj__Java__lang__Class__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) ClearAssertionStatus__desc____ret__V() {
	this._dispatch.Impl__ClearAssertionStatus__desc____ret__V()
}

func (this *Java__lang__ClassLoader__Impl) DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 ByteArray__Instance, var2 int, var3 int) Java__lang__Class__Instance {
	return this._dispatch.Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0, var1, var2, var3)
}

func (this *Java__lang__ClassLoader__Impl) DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0 ByteArray__Instance, var1 int, var2 int) Java__lang__Class__Instance {
	return this._dispatch.Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0, var1, var2)
}

func (this *Java__lang__ClassLoader__Impl) DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0 Java__lang__String__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0)
}

func (this *Java__lang__ClassLoader__Impl) GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	return this._dispatch.Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader()
}

func (this *Java__lang__ClassLoader__Impl) IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0 Java__lang__ClassLoader__Instance) bool {
	return this._dispatch.Impl__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0)
}

func (this *Java__lang__ClassLoader__Impl) LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	return this._dispatch.Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0)
}

func (this *Java__lang__ClassLoader__Impl) LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool) Java__lang__Class__Instance {
	return this._dispatch.Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) ResolveClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	this._dispatch.Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) SetDefaultAssertionStatus__desc__Z__ret__V(var0 bool) {
	this._dispatch.Impl__SetDefaultAssertionStatus__desc__Z__ret__V(var0)
}

func (this *Java__lang__ClassLoader__Impl) SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	this._dispatch.Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0, var1)
}

func (this *Java__lang__ClassLoader__Impl) SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0 Java__lang__Class__Instance, var1 ObjectArray__Instance) {
	this._dispatch.Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0, var1)
}

type Java__lang__ClassLoader__Instance interface {
	AddClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	ClearAssertionStatus__desc____ret__V()
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(Java__lang__String__Instance, ByteArray__Instance, int, int) Java__lang__Class__Instance
	DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(ByteArray__Instance, int, int) Java__lang__Class__Instance
	DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(Java__lang__String__Instance) Java__lang__Object__Instance
	GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance
	HashCode__desc____ret__I() int
	IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(Java__lang__ClassLoader__Instance) bool
	LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(Java__lang__String__Instance) Java__lang__Class__Instance
	LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(Java__lang__String__Instance, bool) Java__lang__Class__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ResolveClass__desc____obj__Java__lang__Class__ret__V(Java__lang__Class__Instance)
	SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	SetDefaultAssertionStatus__desc__Z__ret__V(bool)
	SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(Java__lang__String__Instance, bool)
	SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(Java__lang__Class__Instance, ObjectArray__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	FieldGet__Java__lang__ClassLoader__AssertionLock() Java__lang__Object__Instance
	FieldSet__Java__lang__ClassLoader__AssertionLock(v Java__lang__Object__Instance)
	RawPtr__Java__lang__ClassLoader() *Java__lang__ClassLoader__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__ClassLoader__Impl struct {
	*Java__lang__Object__Impl
	_dispatch     Java__lang__ClassLoader__Dispatch
	AssertionLock Java__lang__Object__Instance
}

func (this *Java__lang__ClassLoader__Impl) FieldGet__Java__lang__ClassLoader__AssertionLock() Java__lang__Object__Instance {
	return this.AssertionLock
}

func (this *Java__lang__ClassLoader__Impl) FieldSet__Java__lang__ClassLoader__AssertionLock(v Java__lang__Object__Instance) {
	this.AssertionLock = v
}

func (this *Java__lang__ClassLoader__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/ClassLoader.<init>()V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__Instance_Init__desc____obj__Java__lang__ClassLoader__ret__V(var0 Java__lang__ClassLoader__Instance) {
	panic("Not Implemented - java/lang/ClassLoader.<init>(Ljava/lang/ClassLoader;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__AddClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	panic("Not Implemented - java/lang/ClassLoader.addClass(Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__ClearAssertionStatus__desc____ret__V() {
	panic("Not Implemented - java/lang/ClassLoader.clearAssertionStatus()V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__DefineClass__desc____obj__Java__lang__String____arr__B__I__I__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 ByteArray__Instance, var2 int, var3 int) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.defineClass(Ljava/lang/String;[BII)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__DefineClass__desc____arr__B__I__I__ret____obj__Java__lang__Class(var0 ByteArray__Instance, var1 int, var2 int) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.defineClass([BII)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__DesiredAssertionStatus__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/ClassLoader.desiredAssertionStatus(Ljava/lang/String;)Z")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.findClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindLibrary__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/ClassLoader.findLibrary(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindLoadedClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.findLoadedClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__FindSystemClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.findSystemClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__GetClassLoadingLock__desc____obj__Java__lang__String__ret____obj__Java__lang__Object(var0 Java__lang__String__Instance) Java__lang__Object__Instance {
	panic("Not Implemented - java/lang/ClassLoader.getClassLoadingLock(Ljava/lang/String;)Ljava/lang/Object;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__GetParent__desc____ret____obj__Java__lang__ClassLoader() Java__lang__ClassLoader__Instance {
	panic("Not Implemented - java/lang/ClassLoader.getParent()Ljava/lang/ClassLoader;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__IsAncestor__desc____obj__Java__lang__ClassLoader__ret__Z(var0 Java__lang__ClassLoader__Instance) bool {
	panic("Not Implemented - java/lang/ClassLoader.isAncestor(Ljava/lang/ClassLoader;)Z")
}

func (this *Java__lang__ClassLoader__Impl) Impl__LoadClass__desc____obj__Java__lang__String__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.loadClass(Ljava/lang/String;)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__LoadClass__desc____obj__Java__lang__String__Z__ret____obj__Java__lang__Class(var0 Java__lang__String__Instance, var1 bool) Java__lang__Class__Instance {
	panic("Not Implemented - java/lang/ClassLoader.loadClass(Ljava/lang/String;Z)Ljava/lang/Class;")
}

func (this *Java__lang__ClassLoader__Impl) Impl__ResolveClass__desc____obj__Java__lang__Class__ret__V(var0 Java__lang__Class__Instance) {
	panic("Not Implemented - java/lang/ClassLoader.resolveClass(Ljava/lang/Class;)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetClassAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Not Implemented - java/lang/ClassLoader.setClassAssertionStatus(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetDefaultAssertionStatus__desc__Z__ret__V(var0 bool) {
	panic("Not Implemented - java/lang/ClassLoader.setDefaultAssertionStatus(Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetPackageAssertionStatus__desc____obj__Java__lang__String__Z__ret__V(var0 Java__lang__String__Instance, var1 bool) {
	panic("Not Implemented - java/lang/ClassLoader.setPackageAssertionStatus(Ljava/lang/String;Z)V")
}

func (this *Java__lang__ClassLoader__Impl) Impl__SetSigners__desc____obj__Java__lang__Class____arr____obj__Java__lang__Object__ret__V(var0 Java__lang__Class__Instance, var1 ObjectArray__Instance) {
	panic("Not Implemented - java/lang/ClassLoader.setSigners(Ljava/lang/Class;[Ljava/lang/Object;)V")
}

func (this *Java__lang__ClassLoader__Impl) RawPtr__Java__lang__ClassLoader() *Java__lang__ClassLoader__Impl {
	return this
}

func (this *Java__lang__ClassLoader__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Comparable__Static struct{}

var Java__lang__Comparable__Var Java__lang__Comparable__Static

func Java__lang__Comparable() *Java__lang__Comparable__Static {
	return &Java__lang__Comparable__Var
}

type Java__lang__Comparable__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Comparable__dynproxy____Static struct{}

var Java__lang__Comparable__dynproxy____Var Java__lang__Comparable__dynproxy____Static

func Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Static {
	return &Java__lang__Comparable__dynproxy____Var
}

func (this *Java__lang__Comparable__dynproxy____Static) New() *Java__lang__Comparable__dynproxy____Impl {
	v := &Java__lang__Comparable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Comparable__dynproxy____InitDispatch(v)
	return v
}

type Java__lang__Comparable__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Comparable__dynproxy____Impl) Java__lang__Comparable__dynproxy____InitDispatch(v Java__lang__Comparable__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Comparable__dynproxy____Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Comparable__dynproxy____Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Comparable__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Comparable__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance) int
}

func (this *Java__lang__Comparable__dynproxy____Impl) RawPtr__Java__lang__Comparable__dynproxy__() *Java__lang__Comparable__dynproxy____Impl {
	return this
}

func (this *Java__lang__Comparable__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__lang__Comparable__Static) DynProxy_Create(fn func(Java__lang__Object__Instance) int) Java__lang__Comparable__Instance {
	v := &Java__lang__Comparable__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__lang__Comparable__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__lang__Comparable__dynproxy____Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this.fn(var0)
}

type Java__lang__Double__Static struct {
	BYTES             int
	MAX_EXPONENT      int
	MAX_VALUE         float64
	MIN_EXPONENT      int
	MIN_NORMAL        float64
	MIN_VALUE         float64
	NEGATIVE_INFINITY float64
	NaN               float64
	POSITIVE_INFINITY float64
	SIZE              int
	TYPE              Java__lang__Class__Instance
	init              sync.Once
}

var Java__lang__Double__Var Java__lang__Double__Static

func Java__lang__Double() *Java__lang__Double__Static {
	Java__lang__Double__Var.init.Do(Java__lang__Double__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Double__Var
}

func (this *Java__lang__Double__Static) New() *Java__lang__Double__Impl {
	v := &Java__lang__Double__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Double__InitDispatch(v)
	return v
}

func (this *Java__lang__Double__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Double__Static) Impl__Compare__desc__D__D__ret__I(var0 float64, var1 float64) int {
	panic("Not Implemented - java/lang/Double.compare(DD)I")
}

func (this *Java__lang__Double__Static) Impl__DoubleToLongBits__desc__D__ret__J(var0 float64) int64 {
	panic("Not Implemented - java/lang/Double.doubleToLongBits(D)J")
}

func (this *Java__lang__Double__Static) Impl__DoubleToRawLongBits__desc__D__ret__J(var0 float64) int64 {
	panic("Not Implemented - java/lang/Double.doubleToRawLongBits(D)J")
}

func (this *Java__lang__Double__Static) Impl__HashCode__desc__D__ret__I(var0 float64) int {
	panic("Not Implemented - java/lang/Double.hashCode(D)I")
}

func (this *Java__lang__Double__Static) Impl__IsFinite__desc__D__ret__Z(var0 float64) bool {
	panic("Not Implemented - java/lang/Double.isFinite(D)Z")
}

func (this *Java__lang__Double__Static) Impl__IsInfinite__desc__D__ret__Z(var0 float64) bool {
	panic("Not Implemented - java/lang/Double.isInfinite(D)Z")
}

func (this *Java__lang__Double__Static) Impl__IsNaN__desc__D__ret__Z(var0 float64) bool {
	panic("Not Implemented - java/lang/Double.isNaN(D)Z")
}

func (this *Java__lang__Double__Static) Impl__LongBitsToDouble__desc__J__ret__D(var0 int64) float64 {
	panic("Not Implemented - java/lang/Double.longBitsToDouble(J)D")
}

func (this *Java__lang__Double__Static) Impl__Max__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Not Implemented - java/lang/Double.max(DD)D")
}

func (this *Java__lang__Double__Static) Impl__Min__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Not Implemented - java/lang/Double.min(DD)D")
}

func (this *Java__lang__Double__Static) Impl__ParseDouble__desc____obj__Java__lang__String__ret__D(var0 Java__lang__String__Instance) float64 {
	panic("Not Implemented - java/lang/Double.parseDouble(Ljava/lang/String;)D")
}

func (this *Java__lang__Double__Static) Impl__Sum__desc__D__D__ret__D(var0 float64, var1 float64) float64 {
	panic("Not Implemented - java/lang/Double.sum(DD)D")
}

func (this *Java__lang__Double__Static) Impl__ToHexString__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Double.toHexString(D)Ljava/lang/String;")
}

func (this *Java__lang__Double__Static) Impl__ToString__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Double.toString(D)Ljava/lang/String;")
}

func (this *Java__lang__Double__Static) Impl__ValueOf__desc__D__ret____obj__Java__lang__Double(var0 float64) Java__lang__Double__Instance {
	panic("Not Implemented - java/lang/Double.valueOf(D)Ljava/lang/Double;")
}

func (this *Java__lang__Double__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Double(var0 Java__lang__String__Instance) Java__lang__Double__Instance {
	panic("Not Implemented - java/lang/Double.valueOf(Ljava/lang/String;)Ljava/lang/Double;")
}

type Java__lang__Double__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__D__ret__V(float64)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(Java__lang__Double__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__IsInfinite__desc____ret__Z() bool
	Impl__IsNaN__desc____ret__Z() bool
}

func (this *Java__lang__Double__Impl) Java__lang__Double__InitDispatch(v Java__lang__Double__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Double__Impl) Instance_Init__desc__D__ret__V(var0 float64) {
	this._dispatch.Impl__Instance_Init__desc__D__ret__V(var0)
}

func (this *Java__lang__Double__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Double__Impl) CompareTo__desc____obj__Java__lang__Double__ret__I(var0 Java__lang__Double__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(var0)
}

func (this *Java__lang__Double__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Double__Impl) IsInfinite__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInfinite__desc____ret__Z()
}

func (this *Java__lang__Double__Impl) IsNaN__desc____ret__Z() bool {
	return this._dispatch.Impl__IsNaN__desc____ret__Z()
}

type Java__lang__Double__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Double__ret__I(Java__lang__Double__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	IsInfinite__desc____ret__Z() bool
	IsNaN__desc____ret__Z() bool
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Double() *Java__lang__Double__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Double__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Double__Dispatch
	Value     float64
}

func (this *Java__lang__Double__Impl) Impl__Instance_Init__desc__D__ret__V(var0 float64) {
	panic("Not Implemented - java/lang/Double.<init>(D)V")
}

func (this *Java__lang__Double__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Double.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Double__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Double.byteValue()B")
}

func (this *Java__lang__Double__Impl) Impl__CompareTo__desc____obj__Java__lang__Double__ret__I(var0 Java__lang__Double__Instance) int {
	panic("Not Implemented - java/lang/Double.compareTo(Ljava/lang/Double;)I")
}

func (this *Java__lang__Double__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Double.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Double__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Double.doubleValue()D")
}

func (this *Java__lang__Double__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Double.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Double__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Double.floatValue()F")
}

func (this *Java__lang__Double__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Double.hashCode()I")
}

func (this *Java__lang__Double__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Double.intValue()I")
}

func (this *Java__lang__Double__Impl) Impl__IsInfinite__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Double.isInfinite()Z")
}

func (this *Java__lang__Double__Impl) Impl__IsNaN__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Double.isNaN()Z")
}

func (this *Java__lang__Double__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/Double.longValue()J")
}

func (this *Java__lang__Double__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Double.shortValue()S")
}

func (this *Java__lang__Double__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Double.toString()Ljava/lang/String;")
}

func (this *Java__lang__Double__Impl) RawPtr__Java__lang__Double() *Java__lang__Double__Impl {
	return this
}

func (this *Java__lang__Double__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Error__Static struct {
	SerialVersionUID int64
}

var Java__lang__Error__Var Java__lang__Error__Static

func Java__lang__Error() *Java__lang__Error__Static {
	return &Java__lang__Error__Var
}

func (this *Java__lang__Error__Static) New() *Java__lang__Error__Impl {
	v := &Java__lang__Error__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Error__InitDispatch(v)
	return v
}

type Java__lang__Error__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Error__Impl) Java__lang__Error__InitDispatch(v Java__lang__Error__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Error__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Error() *Java__lang__Error__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Error__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Error__Dispatch
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/Error.<init>()V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Error.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented - java/lang/Error.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Error__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Error.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Error__Impl) RawPtr__Java__lang__Error() *Java__lang__Error__Impl {
	return this
}

func (this *Java__lang__Error__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Exception__Static struct {
	SerialVersionUID int64
}

var Java__lang__Exception__Var Java__lang__Exception__Static

func Java__lang__Exception() *Java__lang__Exception__Static {
	return &Java__lang__Exception__Var
}

func (this *Java__lang__Exception__Static) New() *Java__lang__Exception__Impl {
	v := &Java__lang__Exception__Impl{
		Java__lang__Throwable__Impl: Java__lang__Throwable().New(),
	}
	v.Java__lang__Exception__InitDispatch(v)
	return v
}

type Java__lang__Exception__Dispatch interface {
	Java__lang__Throwable__Dispatch
}

func (this *Java__lang__Exception__Impl) Java__lang__Exception__InitDispatch(v Java__lang__Exception__Dispatch) {
	this.Java__lang__Throwable__Impl.Java__lang__Throwable__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Exception__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Exception__Impl struct {
	*Java__lang__Throwable__Impl
	_dispatch Java__lang__Exception__Dispatch
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/Exception.<init>()V")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented - java/lang/Exception.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Exception__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Exception.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Exception__Impl) RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl {
	return this
}

func (this *Java__lang__Exception__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Float__Static struct {
	BYTES             int
	MAX_EXPONENT      int
	MAX_VALUE         float32
	MIN_EXPONENT      int
	MIN_NORMAL        float32
	MIN_VALUE         float32
	NEGATIVE_INFINITY float32
	NaN               float32
	POSITIVE_INFINITY float32
	SIZE              int
	TYPE              Java__lang__Class__Instance
	init              sync.Once
}

var Java__lang__Float__Var Java__lang__Float__Static

func Java__lang__Float() *Java__lang__Float__Static {
	Java__lang__Float__Var.init.Do(Java__lang__Float__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Float__Var
}

func (this *Java__lang__Float__Static) New() *Java__lang__Float__Impl {
	v := &Java__lang__Float__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Float__InitDispatch(v)
	return v
}

func (this *Java__lang__Float__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Float__Static) Impl__Compare__desc__F__F__ret__I(var0 float32, var1 float32) int {
	panic("Not Implemented - java/lang/Float.compare(FF)I")
}

func (this *Java__lang__Float__Static) Impl__FloatToIntBits__desc__F__ret__I(var0 float32) int {
	panic("Not Implemented - java/lang/Float.floatToIntBits(F)I")
}

func (this *Java__lang__Float__Static) Impl__FloatToRawIntBits__desc__F__ret__I(var0 float32) int {
	panic("Not Implemented - java/lang/Float.floatToRawIntBits(F)I")
}

func (this *Java__lang__Float__Static) Impl__HashCode__desc__F__ret__I(var0 float32) int {
	panic("Not Implemented - java/lang/Float.hashCode(F)I")
}

func (this *Java__lang__Float__Static) Impl__IntBitsToFloat__desc__I__ret__F(var0 int) float32 {
	panic("Not Implemented - java/lang/Float.intBitsToFloat(I)F")
}

func (this *Java__lang__Float__Static) Impl__IsFinite__desc__F__ret__Z(var0 float32) bool {
	panic("Not Implemented - java/lang/Float.isFinite(F)Z")
}

func (this *Java__lang__Float__Static) Impl__IsInfinite__desc__F__ret__Z(var0 float32) bool {
	panic("Not Implemented - java/lang/Float.isInfinite(F)Z")
}

func (this *Java__lang__Float__Static) Impl__IsNaN__desc__F__ret__Z(var0 float32) bool {
	panic("Not Implemented - java/lang/Float.isNaN(F)Z")
}

func (this *Java__lang__Float__Static) Impl__Max__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Not Implemented - java/lang/Float.max(FF)F")
}

func (this *Java__lang__Float__Static) Impl__Min__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Not Implemented - java/lang/Float.min(FF)F")
}

func (this *Java__lang__Float__Static) Impl__ParseFloat__desc____obj__Java__lang__String__ret__F(var0 Java__lang__String__Instance) float32 {
	panic("Not Implemented - java/lang/Float.parseFloat(Ljava/lang/String;)F")
}

func (this *Java__lang__Float__Static) Impl__Sum__desc__F__F__ret__F(var0 float32, var1 float32) float32 {
	panic("Not Implemented - java/lang/Float.sum(FF)F")
}

func (this *Java__lang__Float__Static) Impl__ToHexString__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Float.toHexString(F)Ljava/lang/String;")
}

func (this *Java__lang__Float__Static) Impl__ToString__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Float.toString(F)Ljava/lang/String;")
}

func (this *Java__lang__Float__Static) Impl__ValueOf__desc__F__ret____obj__Java__lang__Float(var0 float32) Java__lang__Float__Instance {
	panic("Not Implemented - java/lang/Float.valueOf(F)Ljava/lang/Float;")
}

func (this *Java__lang__Float__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Float(var0 Java__lang__String__Instance) Java__lang__Float__Instance {
	panic("Not Implemented - java/lang/Float.valueOf(Ljava/lang/String;)Ljava/lang/Float;")
}

type Java__lang__Float__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__D__ret__V(float64)
	Impl__Instance_Init__desc__F__ret__V(float32)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(Java__lang__Float__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__IsInfinite__desc____ret__Z() bool
	Impl__IsNaN__desc____ret__Z() bool
}

func (this *Java__lang__Float__Impl) Java__lang__Float__InitDispatch(v Java__lang__Float__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Float__Impl) Instance_Init__desc__D__ret__V(var0 float64) {
	this._dispatch.Impl__Instance_Init__desc__D__ret__V(var0)
}

func (this *Java__lang__Float__Impl) Instance_Init__desc__F__ret__V(var0 float32) {
	this._dispatch.Impl__Instance_Init__desc__F__ret__V(var0)
}

func (this *Java__lang__Float__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Float__Impl) CompareTo__desc____obj__Java__lang__Float__ret__I(var0 Java__lang__Float__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(var0)
}

func (this *Java__lang__Float__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Float__Impl) IsInfinite__desc____ret__Z() bool {
	return this._dispatch.Impl__IsInfinite__desc____ret__Z()
}

func (this *Java__lang__Float__Impl) IsNaN__desc____ret__Z() bool {
	return this._dispatch.Impl__IsNaN__desc____ret__Z()
}

type Java__lang__Float__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Float__ret__I(Java__lang__Float__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	IsInfinite__desc____ret__Z() bool
	IsNaN__desc____ret__Z() bool
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Float() *Java__lang__Float__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Float__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Float__Dispatch
	Value     float32
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc__D__ret__V(var0 float64) {
	panic("Not Implemented - java/lang/Float.<init>(D)V")
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc__F__ret__V(var0 float32) {
	panic("Not Implemented - java/lang/Float.<init>(F)V")
}

func (this *Java__lang__Float__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Float.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Float__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Float.byteValue()B")
}

func (this *Java__lang__Float__Impl) Impl__CompareTo__desc____obj__Java__lang__Float__ret__I(var0 Java__lang__Float__Instance) int {
	panic("Not Implemented - java/lang/Float.compareTo(Ljava/lang/Float;)I")
}

func (this *Java__lang__Float__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Float.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Float__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Float.doubleValue()D")
}

func (this *Java__lang__Float__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Float.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Float__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Float.floatValue()F")
}

func (this *Java__lang__Float__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Float.hashCode()I")
}

func (this *Java__lang__Float__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Float.intValue()I")
}

func (this *Java__lang__Float__Impl) Impl__IsInfinite__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Float.isInfinite()Z")
}

func (this *Java__lang__Float__Impl) Impl__IsNaN__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/Float.isNaN()Z")
}

func (this *Java__lang__Float__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/Float.longValue()J")
}

func (this *Java__lang__Float__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Float.shortValue()S")
}

func (this *Java__lang__Float__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Float.toString()Ljava/lang/String;")
}

func (this *Java__lang__Float__Impl) RawPtr__Java__lang__Float() *Java__lang__Float__Impl {
	return this
}

func (this *Java__lang__Float__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__IllegalArgumentException__Static struct{}

var Java__lang__IllegalArgumentException__Var Java__lang__IllegalArgumentException__Static

func Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Static {
	return &Java__lang__IllegalArgumentException__Var
}

func (this *Java__lang__IllegalArgumentException__Static) New() *Java__lang__IllegalArgumentException__Impl {
	v := &Java__lang__IllegalArgumentException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__IllegalArgumentException__InitDispatch(v)
	return v
}

type Java__lang__IllegalArgumentException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__IllegalArgumentException__Impl) Java__lang__IllegalArgumentException__InitDispatch(v Java__lang__IllegalArgumentException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__IllegalArgumentException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__IllegalArgumentException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__IllegalArgumentException__Dispatch
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/IllegalArgumentException.<init>()V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/IllegalArgumentException.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__IllegalArgumentException__Impl) RawPtr__Java__lang__IllegalArgumentException() *Java__lang__IllegalArgumentException__Impl {
	return this
}

func (this *Java__lang__IllegalArgumentException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__IllegalMonitorStateException__Static struct{}

var Java__lang__IllegalMonitorStateException__Var Java__lang__IllegalMonitorStateException__Static

func Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Static {
	return &Java__lang__IllegalMonitorStateException__Var
}

func (this *Java__lang__IllegalMonitorStateException__Static) New() *Java__lang__IllegalMonitorStateException__Impl {
	v := &Java__lang__IllegalMonitorStateException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__IllegalMonitorStateException__InitDispatch(v)
	return v
}

type Java__lang__IllegalMonitorStateException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Java__lang__IllegalMonitorStateException__InitDispatch(v Java__lang__IllegalMonitorStateException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__IllegalMonitorStateException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__IllegalMonitorStateException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__IllegalMonitorStateException__Dispatch
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/IllegalMonitorStateException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__IllegalMonitorStateException__Impl) RawPtr__Java__lang__IllegalMonitorStateException() *Java__lang__IllegalMonitorStateException__Impl {
	return this
}

func (this *Java__lang__IllegalMonitorStateException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Integer__Static struct {
	BYTES     int
	DigitOnes CharArray__Instance
	DigitTens CharArray__Instance
	MAX_VALUE int
	MIN_VALUE int
	SIZE      int
	TYPE      Java__lang__Class__Instance
	Digits    CharArray__Instance
	SizeTable IntArray__Instance
	init      sync.Once
}

var Java__lang__Integer__Var Java__lang__Integer__Static

func Java__lang__Integer() *Java__lang__Integer__Static {
	Java__lang__Integer__Var.init.Do(Java__lang__Integer__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Integer__Var
}

func (this *Java__lang__Integer__Static) New() *Java__lang__Integer__Impl {
	v := &Java__lang__Integer__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Integer__InitDispatch(v)
	return v
}

func (this *Java__lang__Integer__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Integer__Static) Impl__BitCount__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.bitCount(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Compare__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.compare(II)I")
}

func (this *Java__lang__Integer__Static) Impl__CompareUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.compareUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.decode(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__DivideUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.divideUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__FormatUnsignedInt__desc__I__I____arr__C__I__I__ret__I(var0 int, var1 int, var2 CharArray__Instance, var3 int, var4 int) int {
	panic("Not Implemented - java/lang/Integer.formatUnsignedInt(II[CII)I")
}

func (this *Java__lang__Integer__Static) Impl__GetChars__desc__I__I____arr__C__ret__V(var0 int, var1 int, var2 CharArray__Instance) {
	panic("Not Implemented - java/lang/Integer.getChars(II[C)V")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.getInteger(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 int) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.getInteger(Ljava/lang/String;I)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__GetInteger__desc____obj__Java__lang__String____obj__Java__lang__Integer__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 Java__lang__Integer__Instance) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.getInteger(Ljava/lang/String;Ljava/lang/Integer;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__HashCode__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.hashCode(I)I")
}

func (this *Java__lang__Integer__Static) Impl__HighestOneBit__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.highestOneBit(I)I")
}

func (this *Java__lang__Integer__Static) Impl__LowestOneBit__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.lowestOneBit(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Max__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.max(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Min__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.min(II)I")
}

func (this *Java__lang__Integer__Static) Impl__NumberOfLeadingZeros__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.numberOfLeadingZeros(I)I")
}

func (this *Java__lang__Integer__Static) Impl__NumberOfTrailingZeros__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.numberOfTrailingZeros(I)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseInt__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/Integer.parseInt(Ljava/lang/String;)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseInt__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Integer.parseInt(Ljava/lang/String;I)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseUnsignedInt__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/Integer.parseUnsignedInt(Ljava/lang/String;)I")
}

func (this *Java__lang__Integer__Static) Impl__ParseUnsignedInt__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/Integer.parseUnsignedInt(Ljava/lang/String;I)I")
}

func (this *Java__lang__Integer__Static) Impl__RemainderUnsigned__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.remainderUnsigned(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Reverse__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.reverse(I)I")
}

func (this *Java__lang__Integer__Static) Impl__ReverseBytes__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.reverseBytes(I)I")
}

func (this *Java__lang__Integer__Static) Impl__RotateLeft__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.rotateLeft(II)I")
}

func (this *Java__lang__Integer__Static) Impl__RotateRight__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.rotateRight(II)I")
}

func (this *Java__lang__Integer__Static) Impl__Signum__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.signum(I)I")
}

func (this *Java__lang__Integer__Static) Impl__StringSize__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/Integer.stringSize(I)I")
}

func (this *Java__lang__Integer__Static) Impl__Sum__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/Integer.sum(II)I")
}

func (this *Java__lang__Integer__Static) Impl__ToBinaryString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toBinaryString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToHexString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toHexString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToOctalString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toOctalString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToString__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toString(II)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedLong__desc__I__ret__J(var0 int) int64 {
	panic("Not Implemented - java/lang/Integer.toUnsignedLong(I)J")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedString__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toUnsignedString(I)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ToUnsignedString__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toUnsignedString(II)Ljava/lang/String;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc__I__ret____obj__Java__lang__Integer(var0 int) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.valueOf(I)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.valueOf(Ljava/lang/String;)Ljava/lang/Integer;")
}

func (this *Java__lang__Integer__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Integer(var0 Java__lang__String__Instance, var1 int) Java__lang__Integer__Instance {
	panic("Not Implemented - java/lang/Integer.valueOf(Ljava/lang/String;I)Ljava/lang/Integer;")
}

type Java__lang__Integer__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__I__ret__V(int)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(Java__lang__Integer__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Integer__Impl) Java__lang__Integer__InitDispatch(v Java__lang__Integer__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Integer__Impl) Instance_Init__desc__I__ret__V(var0 int) {
	this._dispatch.Impl__Instance_Init__desc__I__ret__V(var0)
}

func (this *Java__lang__Integer__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Integer__Impl) CompareTo__desc____obj__Java__lang__Integer__ret__I(var0 Java__lang__Integer__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(var0)
}

func (this *Java__lang__Integer__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Integer__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Integer__ret__I(Java__lang__Integer__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Integer() *Java__lang__Integer__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Integer__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Integer__Dispatch
	Value     int
}

func (this *Java__lang__Integer__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/Integer.<init>(I)V")
}

func (this *Java__lang__Integer__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Integer.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Integer__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Integer.byteValue()B")
}

func (this *Java__lang__Integer__Impl) Impl__CompareTo__desc____obj__Java__lang__Integer__ret__I(var0 Java__lang__Integer__Instance) int {
	panic("Not Implemented - java/lang/Integer.compareTo(Ljava/lang/Integer;)I")
}

func (this *Java__lang__Integer__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Integer.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Integer__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Integer.doubleValue()D")
}

func (this *Java__lang__Integer__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Integer.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Integer__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Integer.floatValue()F")
}

func (this *Java__lang__Integer__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Integer.hashCode()I")
}

func (this *Java__lang__Integer__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Integer.intValue()I")
}

func (this *Java__lang__Integer__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/Integer.longValue()J")
}

func (this *Java__lang__Integer__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Integer.shortValue()S")
}

func (this *Java__lang__Integer__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Integer.toString()Ljava/lang/String;")
}

func (this *Java__lang__Integer__Impl) RawPtr__Java__lang__Integer() *Java__lang__Integer__Impl {
	return this
}

func (this *Java__lang__Integer__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Long__Static struct {
	BYTES     int
	MAX_VALUE int64
	MIN_VALUE int64
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Long__Var Java__lang__Long__Static

func Java__lang__Long() *Java__lang__Long__Static {
	Java__lang__Long__Var.init.Do(Java__lang__Long__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Long__Var
}

func (this *Java__lang__Long__Static) New() *Java__lang__Long__Impl {
	v := &Java__lang__Long__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Long__InitDispatch(v)
	return v
}

func (this *Java__lang__Long__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Long__Static) Impl__BitCount__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.bitCount(J)I")
}

func (this *Java__lang__Long__Static) Impl__Compare__desc__J__J__ret__I(var0 int64, var1 int64) int {
	panic("Not Implemented - java/lang/Long.compare(JJ)I")
}

func (this *Java__lang__Long__Static) Impl__CompareUnsigned__desc__J__J__ret__I(var0 int64, var1 int64) int {
	panic("Not Implemented - java/lang/Long.compareUnsigned(JJ)I")
}

func (this *Java__lang__Long__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.decode(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__DivideUnsigned__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Not Implemented - java/lang/Long.divideUnsigned(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__FormatUnsignedLong__desc__J__I____arr__C__I__I__ret__I(var0 int64, var1 int, var2 CharArray__Instance, var3 int, var4 int) int {
	panic("Not Implemented - java/lang/Long.formatUnsignedLong(JI[CII)I")
}

func (this *Java__lang__Long__Static) Impl__GetChars__desc__J__I____arr__C__ret__V(var0 int64, var1 int, var2 CharArray__Instance) {
	panic("Not Implemented - java/lang/Long.getChars(JI[C)V")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.getLong(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String__J__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 int64) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.getLong(Ljava/lang/String;J)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__GetLong__desc____obj__Java__lang__String____obj__Java__lang__Long__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 Java__lang__Long__Instance) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.getLong(Ljava/lang/String;Ljava/lang/Long;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__HashCode__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.hashCode(J)I")
}

func (this *Java__lang__Long__Static) Impl__HighestOneBit__desc__J__ret__J(var0 int64) int64 {
	panic("Not Implemented - java/lang/Long.highestOneBit(J)J")
}

func (this *Java__lang__Long__Static) Impl__LowestOneBit__desc__J__ret__J(var0 int64) int64 {
	panic("Not Implemented - java/lang/Long.lowestOneBit(J)J")
}

func (this *Java__lang__Long__Static) Impl__Max__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Not Implemented - java/lang/Long.max(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__Min__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Not Implemented - java/lang/Long.min(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__NumberOfLeadingZeros__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.numberOfLeadingZeros(J)I")
}

func (this *Java__lang__Long__Static) Impl__NumberOfTrailingZeros__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.numberOfTrailingZeros(J)I")
}

func (this *Java__lang__Long__Static) Impl__ParseLong__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	panic("Not Implemented - java/lang/Long.parseLong(Ljava/lang/String;)J")
}

func (this *Java__lang__Long__Static) Impl__ParseLong__desc____obj__Java__lang__String__I__ret__J(var0 Java__lang__String__Instance, var1 int) int64 {
	panic("Not Implemented - java/lang/Long.parseLong(Ljava/lang/String;I)J")
}

func (this *Java__lang__Long__Static) Impl__ParseUnsignedLong__desc____obj__Java__lang__String__ret__J(var0 Java__lang__String__Instance) int64 {
	panic("Not Implemented - java/lang/Long.parseUnsignedLong(Ljava/lang/String;)J")
}

func (this *Java__lang__Long__Static) Impl__ParseUnsignedLong__desc____obj__Java__lang__String__I__ret__J(var0 Java__lang__String__Instance, var1 int) int64 {
	panic("Not Implemented - java/lang/Long.parseUnsignedLong(Ljava/lang/String;I)J")
}

func (this *Java__lang__Long__Static) Impl__RemainderUnsigned__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Not Implemented - java/lang/Long.remainderUnsigned(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__Reverse__desc__J__ret__J(var0 int64) int64 {
	panic("Not Implemented - java/lang/Long.reverse(J)J")
}

func (this *Java__lang__Long__Static) Impl__ReverseBytes__desc__J__ret__J(var0 int64) int64 {
	panic("Not Implemented - java/lang/Long.reverseBytes(J)J")
}

func (this *Java__lang__Long__Static) Impl__RotateLeft__desc__J__I__ret__J(var0 int64, var1 int) int64 {
	panic("Not Implemented - java/lang/Long.rotateLeft(JI)J")
}

func (this *Java__lang__Long__Static) Impl__RotateRight__desc__J__I__ret__J(var0 int64, var1 int) int64 {
	panic("Not Implemented - java/lang/Long.rotateRight(JI)J")
}

func (this *Java__lang__Long__Static) Impl__Signum__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.signum(J)I")
}

func (this *Java__lang__Long__Static) Impl__StringSize__desc__J__ret__I(var0 int64) int {
	panic("Not Implemented - java/lang/Long.stringSize(J)I")
}

func (this *Java__lang__Long__Static) Impl__Sum__desc__J__J__ret__J(var0 int64, var1 int64) int64 {
	panic("Not Implemented - java/lang/Long.sum(JJ)J")
}

func (this *Java__lang__Long__Static) Impl__ToBinaryString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toBinaryString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToHexString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toHexString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToOctalString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toOctalString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToString__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toString(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToUnsignedString__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toUnsignedString(J)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToUnsignedString__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toUnsignedString(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ToUnsignedString0__desc__J__I__ret____obj__Java__lang__String(var0 int64, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toUnsignedString0(JI)Ljava/lang/String;")
}

func (this *Java__lang__Long__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.valueOf(Ljava/lang/String;)Ljava/lang/Long;")
}

func (this *Java__lang__Long__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Long(var0 Java__lang__String__Instance, var1 int) Java__lang__Long__Instance {
	panic("Not Implemented - java/lang/Long.valueOf(Ljava/lang/String;I)Ljava/lang/Long;")
}

type Java__lang__Long__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc__J__ret__V(int64)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(Java__lang__Long__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
}

func (this *Java__lang__Long__Impl) Java__lang__Long__InitDispatch(v Java__lang__Long__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Long__Impl) Instance_Init__desc__J__ret__V(var0 int64) {
	this._dispatch.Impl__Instance_Init__desc__J__ret__V(var0)
}

func (this *Java__lang__Long__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Long__Impl) CompareTo__desc____obj__Java__lang__Long__ret__I(var0 Java__lang__Long__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(var0)
}

func (this *Java__lang__Long__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

type Java__lang__Long__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Long__ret__I(Java__lang__Long__Instance) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Long() *Java__lang__Long__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Long__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Long__Dispatch
	Value     int64
}

func (this *Java__lang__Long__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Long.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Long__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Long.byteValue()B")
}

func (this *Java__lang__Long__Impl) Impl__CompareTo__desc____obj__Java__lang__Long__ret__I(var0 Java__lang__Long__Instance) int {
	panic("Not Implemented - java/lang/Long.compareTo(Ljava/lang/Long;)I")
}

func (this *Java__lang__Long__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Long.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Long__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Long.doubleValue()D")
}

func (this *Java__lang__Long__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Long.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Long__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Long.floatValue()F")
}

func (this *Java__lang__Long__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Long.hashCode()I")
}

func (this *Java__lang__Long__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Long.intValue()I")
}

func (this *Java__lang__Long__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Long.shortValue()S")
}

func (this *Java__lang__Long__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Long.toString()Ljava/lang/String;")
}

func (this *Java__lang__Long__Impl) RawPtr__Java__lang__Long() *Java__lang__Long__Impl {
	return this
}

func (this *Java__lang__Long__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__NegativeArraySizeException__Static struct{}

var Java__lang__NegativeArraySizeException__Var Java__lang__NegativeArraySizeException__Static

func Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Static {
	return &Java__lang__NegativeArraySizeException__Var
}

func (this *Java__lang__NegativeArraySizeException__Static) New() *Java__lang__NegativeArraySizeException__Impl {
	v := &Java__lang__NegativeArraySizeException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__NegativeArraySizeException__InitDispatch(v)
	return v
}

type Java__lang__NegativeArraySizeException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__NegativeArraySizeException__Impl) Java__lang__NegativeArraySizeException__InitDispatch(v Java__lang__NegativeArraySizeException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__NegativeArraySizeException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__NegativeArraySizeException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__NegativeArraySizeException__Dispatch
}

func (this *Java__lang__NegativeArraySizeException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/NegativeArraySizeException.<init>()V")
}

func (this *Java__lang__NegativeArraySizeException__Impl) RawPtr__Java__lang__NegativeArraySizeException() *Java__lang__NegativeArraySizeException__Impl {
	return this
}

func (this *Java__lang__NegativeArraySizeException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__NullPointerException__Static struct{}

var Java__lang__NullPointerException__Var Java__lang__NullPointerException__Static

func Java__lang__NullPointerException() *Java__lang__NullPointerException__Static {
	return &Java__lang__NullPointerException__Var
}

func (this *Java__lang__NullPointerException__Static) New() *Java__lang__NullPointerException__Impl {
	v := &Java__lang__NullPointerException__Impl{
		Java__lang__RuntimeException__Impl: Java__lang__RuntimeException().New(),
	}
	v.Java__lang__NullPointerException__InitDispatch(v)
	return v
}

type Java__lang__NullPointerException__Dispatch interface {
	Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Java__lang__NullPointerException__InitDispatch(v Java__lang__NullPointerException__Dispatch) {
	this.Java__lang__RuntimeException__Impl.Java__lang__RuntimeException__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__NullPointerException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__NullPointerException() *Java__lang__NullPointerException__Impl
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__NullPointerException__Impl struct {
	*Java__lang__RuntimeException__Impl
	_dispatch Java__lang__NullPointerException__Dispatch
}

func (this *Java__lang__NullPointerException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/NullPointerException.<init>()V")
}

func (this *Java__lang__NullPointerException__Impl) RawPtr__Java__lang__NullPointerException() *Java__lang__NullPointerException__Impl {
	return this
}

func (this *Java__lang__NullPointerException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Number__Static struct{}

var Java__lang__Number__Var Java__lang__Number__Static

func Java__lang__Number() *Java__lang__Number__Static {
	return &Java__lang__Number__Var
}

func (this *Java__lang__Number__Static) New() *Java__lang__Number__Impl {
	v := &Java__lang__Number__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Number__InitDispatch(v)
	return v
}

type Java__lang__Number__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__ByteValue__desc____ret__B() int8
	Impl__DoubleValue__desc____ret__D() float64
	Impl__FloatValue__desc____ret__F() float32
	Impl__IntValue__desc____ret__I() int
	Impl__LongValue__desc____ret__J() int64
	Impl__ShortValue__desc____ret__S() int16
}

func (this *Java__lang__Number__Impl) Java__lang__Number__InitDispatch(v Java__lang__Number__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Number__Impl) ByteValue__desc____ret__B() int8 {
	return this._dispatch.Impl__ByteValue__desc____ret__B()
}

func (this *Java__lang__Number__Impl) DoubleValue__desc____ret__D() float64 {
	return this._dispatch.Impl__DoubleValue__desc____ret__D()
}

func (this *Java__lang__Number__Impl) FloatValue__desc____ret__F() float32 {
	return this._dispatch.Impl__FloatValue__desc____ret__F()
}

func (this *Java__lang__Number__Impl) IntValue__desc____ret__I() int {
	return this._dispatch.Impl__IntValue__desc____ret__I()
}

func (this *Java__lang__Number__Impl) LongValue__desc____ret__J() int64 {
	return this._dispatch.Impl__LongValue__desc____ret__J()
}

func (this *Java__lang__Number__Impl) ShortValue__desc____ret__S() int16 {
	return this._dispatch.Impl__ShortValue__desc____ret__S()
}

type Java__lang__Number__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Number__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Number__Dispatch
}

func (this *Java__lang__Number__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/Number.<init>()V")
}

func (this *Java__lang__Number__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Number.byteValue()B")
}

func (this *Java__lang__Number__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Abstract")
}

func (this *Java__lang__Number__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Abstract")
}

func (this *Java__lang__Number__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Abstract")
}

func (this *Java__lang__Number__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Abstract")
}

func (this *Java__lang__Number__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Number.shortValue()S")
}

func (this *Java__lang__Number__Impl) RawPtr__Java__lang__Number() *Java__lang__Number__Impl {
	return this
}

func (this *Java__lang__Number__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Object__Static struct {
	init sync.Once
}

var Java__lang__Object__Var Java__lang__Object__Static

func Java__lang__Object() *Java__lang__Object__Static {
	Java__lang__Object__Var.init.Do(Java__lang__Object__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Object__Var
}

func (this *Java__lang__Object__Static) New() *Java__lang__Object__Impl {
	v := &Java__lang__Object__Impl{}
	v.Java__lang__Object__InitDispatch(v)
	return v
}

func (this *Java__lang__Object__Static) Impl__Static_Init__desc____ret__V() {
	
}

type Java__lang__Object__Dispatch interface {
	Impl__Instance_Init__desc____ret__V()
	Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Impl__Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Impl__Finalize__desc____ret__V()
	Impl__GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	Impl__HashCode__desc____ret__I() int
	Impl__Notify__desc____ret__V()
	Impl__NotifyAll__desc____ret__V()
	Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Wait__desc____ret__V()
	Impl__Wait__desc__J__ret__V(int64)
	Impl__Wait__desc__J__I__ret__V(int64, int)
	Impl_Self() Java__lang__Object__Instance
}

func (this *Java__lang__Object__Impl) Java__lang__Object__InitDispatch(v Java__lang__Object__Dispatch) {
	this._dispatch = v
}

func (this *Java__lang__Object__Impl) Instance_Init__desc____ret__V() {
	this._dispatch.Impl__Instance_Init__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	return this._dispatch.Impl__Clone__desc____ret____obj__Java__lang__Object()
}

func (this *Java__lang__Object__Impl) Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	return this._dispatch.Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0)
}

func (this *Java__lang__Object__Impl) Finalize__desc____ret__V() {
	this._dispatch.Impl__Finalize__desc____ret__V()
}

func (this *Java__lang__Object__Impl) GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance {
	return this._dispatch.Impl__GetClass__desc____ret____obj__Java__lang__Class()
}

func (this *Java__lang__Object__Impl) HashCode__desc____ret__I() int {
	return this._dispatch.Impl__HashCode__desc____ret__I()
}

func (this *Java__lang__Object__Impl) Notify__desc____ret__V() {
	this._dispatch.Impl__Notify__desc____ret__V()
}

func (this *Java__lang__Object__Impl) NotifyAll__desc____ret__V() {
	this._dispatch.Impl__NotifyAll__desc____ret__V()
}

func (this *Java__lang__Object__Impl) ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToString__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Object__Impl) Wait__desc____ret__V() {
	this._dispatch.Impl__Wait__desc____ret__V()
}

func (this *Java__lang__Object__Impl) Wait__desc__J__ret__V(var0 int64) {
	this._dispatch.Impl__Wait__desc__J__ret__V(var0)
}

func (this *Java__lang__Object__Impl) Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	this._dispatch.Impl__Wait__desc__J__I__ret__V(var0, var1)
}

func (this *Java__lang__Object__Impl) Self() Java__lang__Object__Instance {
	return this._dispatch.Impl_Self()
}

type Java__lang__Object__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Object__Impl struct {
	_dispatch Java__lang__Object__Dispatch
}

func (this *Java__lang__Object__Impl) Impl__Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance {
	panic("Not Implemented - java/lang/Object.clone()Ljava/lang/Object;")
}

func (this *Java__lang__Object__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Object.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Object__Impl) Impl__Finalize__desc____ret__V() {
	panic("Not Implemented - java/lang/Object.finalize()V")
}

func (this *Java__lang__Object__Impl) Impl__Notify__desc____ret__V() {
	panic("Not Implemented - java/lang/Object.notify()V")
}

func (this *Java__lang__Object__Impl) Impl__NotifyAll__desc____ret__V() {
	panic("Not Implemented - java/lang/Object.notifyAll()V")
}

func (this *Java__lang__Object__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Object.toString()Ljava/lang/String;")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc____ret__V() {
	panic("Not Implemented - java/lang/Object.wait()V")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__ret__V(var0 int64) {
	panic("Not Implemented - java/lang/Object.wait(J)V")
}

func (this *Java__lang__Object__Impl) Impl__Wait__desc__J__I__ret__V(var0 int64, var1 int) {
	panic("Not Implemented - java/lang/Object.wait(JI)V")
}

func (this *Java__lang__Object__Impl) RawPtr__Java__lang__Object() *Java__lang__Object__Impl {
	return this
}

func (this *Java__lang__Object__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__RuntimeException__Static struct {
	SerialVersionUID int64
}

var Java__lang__RuntimeException__Var Java__lang__RuntimeException__Static

func Java__lang__RuntimeException() *Java__lang__RuntimeException__Static {
	return &Java__lang__RuntimeException__Var
}

func (this *Java__lang__RuntimeException__Static) New() *Java__lang__RuntimeException__Impl {
	v := &Java__lang__RuntimeException__Impl{
		Java__lang__Exception__Impl: Java__lang__Exception().New(),
	}
	v.Java__lang__RuntimeException__InitDispatch(v)
	return v
}

type Java__lang__RuntimeException__Dispatch interface {
	Java__lang__Exception__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Java__lang__RuntimeException__InitDispatch(v Java__lang__RuntimeException__Dispatch) {
	this.Java__lang__Exception__Impl.Java__lang__Exception__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__RuntimeException__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl
	RawPtr__Java__lang__Exception() *Java__lang__Exception__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__RuntimeException__Impl struct {
	*Java__lang__Exception__Impl
	_dispatch Java__lang__RuntimeException__Dispatch
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/RuntimeException.<init>()V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented - java/lang/RuntimeException.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__RuntimeException__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/RuntimeException.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__RuntimeException__Impl) RawPtr__Java__lang__RuntimeException() *Java__lang__RuntimeException__Impl {
	return this
}

func (this *Java__lang__RuntimeException__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Short__Static struct {
	BYTES     int
	MAX_VALUE int16
	MIN_VALUE int16
	SIZE      int
	TYPE      Java__lang__Class__Instance
	init      sync.Once
}

var Java__lang__Short__Var Java__lang__Short__Static

func Java__lang__Short() *Java__lang__Short__Static {
	Java__lang__Short__Var.init.Do(Java__lang__Short__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Short__Var
}

func (this *Java__lang__Short__Static) New() *Java__lang__Short__Impl {
	v := &Java__lang__Short__Impl{
		Java__lang__Number__Impl: Java__lang__Number().New(),
	}
	v.Java__lang__Short__InitDispatch(v)
	return v
}

func (this *Java__lang__Short__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__Short__Static) Impl__Compare__desc__S__S__ret__I(var0 int16, var1 int16) int {
	panic("Not Implemented - java/lang/Short.compare(SS)I")
}

func (this *Java__lang__Short__Static) Impl__Decode__desc____obj__Java__lang__String__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance) Java__lang__Short__Instance {
	panic("Not Implemented - java/lang/Short.decode(Ljava/lang/String;)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__HashCode__desc__S__ret__I(var0 int16) int {
	panic("Not Implemented - java/lang/Short.hashCode(S)I")
}

func (this *Java__lang__Short__Static) Impl__ParseShort__desc____obj__Java__lang__String__ret__S(var0 Java__lang__String__Instance) int16 {
	panic("Not Implemented - java/lang/Short.parseShort(Ljava/lang/String;)S")
}

func (this *Java__lang__Short__Static) Impl__ParseShort__desc____obj__Java__lang__String__I__ret__S(var0 Java__lang__String__Instance, var1 int) int16 {
	panic("Not Implemented - java/lang/Short.parseShort(Ljava/lang/String;I)S")
}

func (this *Java__lang__Short__Static) Impl__ReverseBytes__desc__S__ret__S(var0 int16) int16 {
	panic("Not Implemented - java/lang/Short.reverseBytes(S)S")
}

func (this *Java__lang__Short__Static) Impl__ToString__desc__S__ret____obj__Java__lang__String(var0 int16) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Short.toString(S)Ljava/lang/String;")
}

func (this *Java__lang__Short__Static) Impl__ToUnsignedInt__desc__S__ret__I(var0 int16) int {
	panic("Not Implemented - java/lang/Short.toUnsignedInt(S)I")
}

func (this *Java__lang__Short__Static) Impl__ToUnsignedLong__desc__S__ret__J(var0 int16) int64 {
	panic("Not Implemented - java/lang/Short.toUnsignedLong(S)J")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc____obj__Java__lang__String__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance) Java__lang__Short__Instance {
	panic("Not Implemented - java/lang/Short.valueOf(Ljava/lang/String;)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc____obj__Java__lang__String__I__ret____obj__Java__lang__Short(var0 Java__lang__String__Instance, var1 int) Java__lang__Short__Instance {
	panic("Not Implemented - java/lang/Short.valueOf(Ljava/lang/String;I)Ljava/lang/Short;")
}

func (this *Java__lang__Short__Static) Impl__ValueOf__desc__S__ret____obj__Java__lang__Short(var0 int16) Java__lang__Short__Instance {
	panic("Not Implemented - java/lang/Short.valueOf(S)Ljava/lang/Short;")
}

type Java__lang__Short__Dispatch interface {
	Java__lang__Number__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc__S__ret__V(int16)
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(Java__lang__Short__Instance) int
}

func (this *Java__lang__Short__Impl) Java__lang__Short__InitDispatch(v Java__lang__Short__Dispatch) {
	this.Java__lang__Number__Impl.Java__lang__Number__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Short__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Short__Impl) Instance_Init__desc__S__ret__V(var0 int16) {
	this._dispatch.Impl__Instance_Init__desc__S__ret__V(var0)
}

func (this *Java__lang__Short__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__Short__Impl) CompareTo__desc____obj__Java__lang__Short__ret__I(var0 Java__lang__Short__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(var0)
}

type Java__lang__Short__Instance interface {
	ByteValue__desc____ret__B() int8
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CompareTo__desc____obj__Java__lang__Short__ret__I(Java__lang__Short__Instance) int
	DoubleValue__desc____ret__D() float64
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FloatValue__desc____ret__F() float32
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IntValue__desc____ret__I() int
	LongValue__desc____ret__J() int64
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ShortValue__desc____ret__S() int16
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Short() *Java__lang__Short__Impl
	RawPtr__Java__lang__Number() *Java__lang__Number__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Short__Impl struct {
	*Java__lang__Number__Impl
	_dispatch Java__lang__Short__Dispatch
	Value     int16
}

func (this *Java__lang__Short__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/Short.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__Short__Impl) Impl__Instance_Init__desc__S__ret__V(var0 int16) {
	panic("Not Implemented - java/lang/Short.<init>(S)V")
}

func (this *Java__lang__Short__Impl) Impl__ByteValue__desc____ret__B() int8 {
	panic("Not Implemented - java/lang/Short.byteValue()B")
}

func (this *Java__lang__Short__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/Short.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__Short__Impl) Impl__CompareTo__desc____obj__Java__lang__Short__ret__I(var0 Java__lang__Short__Instance) int {
	panic("Not Implemented - java/lang/Short.compareTo(Ljava/lang/Short;)I")
}

func (this *Java__lang__Short__Impl) Impl__DoubleValue__desc____ret__D() float64 {
	panic("Not Implemented - java/lang/Short.doubleValue()D")
}

func (this *Java__lang__Short__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/Short.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__Short__Impl) Impl__FloatValue__desc____ret__F() float32 {
	panic("Not Implemented - java/lang/Short.floatValue()F")
}

func (this *Java__lang__Short__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/Short.hashCode()I")
}

func (this *Java__lang__Short__Impl) Impl__IntValue__desc____ret__I() int {
	panic("Not Implemented - java/lang/Short.intValue()I")
}

func (this *Java__lang__Short__Impl) Impl__LongValue__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/Short.longValue()J")
}

func (this *Java__lang__Short__Impl) Impl__ShortValue__desc____ret__S() int16 {
	panic("Not Implemented - java/lang/Short.shortValue()S")
}

func (this *Java__lang__Short__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Short.toString()Ljava/lang/String;")
}

func (this *Java__lang__Short__Impl) RawPtr__Java__lang__Short() *Java__lang__Short__Impl {
	return this
}

func (this *Java__lang__Short__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__String__Static struct {
	init sync.Once
}

var Java__lang__String__Var Java__lang__String__Static

func Java__lang__String() *Java__lang__String__Static {
	Java__lang__String__Var.init.Do(Java__lang__String__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__String__Var
}

func (this *Java__lang__String__Static) New() *Java__lang__String__Impl {
	v := &Java__lang__String__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__String__InitDispatch(v)
	return v
}

func (this *Java__lang__String__Static) Impl__Static_Init__desc____ret__V() {
	
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.copyValueOf([C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__CopyValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 CharArray__Instance, var1 int, var2 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.copyValueOf([CII)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__Format__desc____obj__Java__lang__String____arr____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 ObjectArray__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__IndexOf__desc____arr__C__I__I____obj__Java__lang__String__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Not Implemented - java/lang/String.indexOf([CIILjava/lang/String;I)I")
}

func (this *Java__lang__String__Static) Impl__IndexOf__desc____arr__C__I__I____arr__C__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 CharArray__Instance, var4 int, var5 int, var6 int) int {
	panic("Not Implemented - java/lang/String.indexOf([CII[CIII)I")
}

func (this *Java__lang__String__Static) Impl__Join__desc____obj__Java__lang__CharSequence____arr____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 ObjectArray__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.join(Ljava/lang/CharSequence;[Ljava/lang/CharSequence;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__LastIndexOf__desc____arr__C__I__I____obj__Java__lang__String__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance, var4 int) int {
	panic("Not Implemented - java/lang/String.lastIndexOf([CIILjava/lang/String;I)I")
}

func (this *Java__lang__String__Static) Impl__LastIndexOf__desc____arr__C__I__I____arr__C__I__I__I__ret__I(var0 CharArray__Instance, var1 int, var2 int, var3 CharArray__Instance, var4 int, var5 int, var6 int) int {
	panic("Not Implemented - java/lang/String.lastIndexOf([CII[CIII)I")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__C__ret____obj__Java__lang__String(var0 rune) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__D__ret____obj__Java__lang__String(var0 float64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(D)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__F__ret____obj__Java__lang__String(var0 float32) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(F)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(I)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__J__ret____obj__Java__lang__String(var0 int64) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(J)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____obj__Java__lang__Object__ret____obj__Java__lang__String(var0 Java__lang__Object__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(Ljava/lang/Object;)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc__Z__ret____obj__Java__lang__String(var0 bool) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf(Z)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__ret____obj__Java__lang__String(var0 CharArray__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf([C)Ljava/lang/String;")
}

func (this *Java__lang__String__Static) Impl__ValueOf__desc____arr__C__I__I__ret____obj__Java__lang__String(var0 CharArray__Instance, var1 int, var2 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.valueOf([CII)Ljava/lang/String;")
}

type Java__lang__String__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(Java__lang__StringBuilder__Instance)
	Impl__Instance_Init__desc____arr__B__ret__V(ByteArray__Instance)
	Impl__Instance_Init__desc____arr__B__I__ret__V(ByteArray__Instance, int)
	Impl__Instance_Init__desc____arr__B__I__I__ret__V(ByteArray__Instance, int, int)
	Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(ByteArray__Instance, int, int, int)
	Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(ByteArray__Instance, int, int, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(ByteArray__Instance, Java__lang__String__Instance)
	Impl__Instance_Init__desc____arr__C__ret__V(CharArray__Instance)
	Impl__Instance_Init__desc____arr__C__I__I__ret__V(CharArray__Instance, int, int)
	Impl__Instance_Init__desc____arr__C__Z__ret__V(CharArray__Instance, bool)
	Impl__Instance_Init__desc____arr__I__I__I__ret__V(IntArray__Instance, int, int)
	Impl__CharAt__desc__I__ret__C(int) rune
	Impl__CodePointAt__desc__I__ret__I(int) int
	Impl__CodePointBefore__desc__I__ret__I(int) int
	Impl__CodePointCount__desc__I__I__ret__I(int, int) int
	Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	Impl__CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__GetBytes__desc____ret____arr__B() ByteArray__Instance
	Impl__GetBytes__desc__I__I____arr__B__I__ret__V(int, int, ByteArray__Instance, int)
	Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) ByteArray__Instance
	Impl__GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	Impl__GetChars__desc____arr__C__I__ret__V(CharArray__Instance, int)
	Impl__IndexOf__desc__I__ret__I(int) int
	Impl__IndexOf__desc__I__I__ret__I(int, int) int
	Impl__IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__IsEmpty__desc____ret__Z() bool
	Impl__LastIndexOf__desc__I__ret__I(int) int
	Impl__LastIndexOf__desc__I__I__ret__I(int, int) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Impl__Length__desc____ret__I() int
	Impl__Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	Impl__Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) ObjectArray__Instance
	Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) ObjectArray__Instance
	Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Impl__Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Impl__Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	Impl__ToCharArray__desc____ret____arr__C() CharArray__Instance
	Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
}

func (this *Java__lang__String__Impl) Java__lang__String__InitDispatch(v Java__lang__String__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__ret__V(var0 ByteArray__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__ret__V(var0 CharArray__Instance) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__ret__V(var0)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__C__Z__ret__V(var0 CharArray__Instance, var1 bool) {
	this._dispatch.Impl__Instance_Init__desc____arr__C__Z__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) Instance_Init__desc____arr__I__I__I__ret__V(var0 IntArray__Instance, var1 int, var2 int) {
	this._dispatch.Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0, var1, var2)
}

func (this *Java__lang__String__Impl) CharAt__desc__I__ret__C(var0 int) rune {
	return this._dispatch.Impl__CharAt__desc__I__ret__C(var0)
}

func (this *Java__lang__String__Impl) CodePointAt__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointAt__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointBefore__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__CodePointBefore__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__CodePointCount__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	return this._dispatch.Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) GetBytes__desc____ret____arr__B() ByteArray__Instance {
	return this._dispatch.Impl__GetBytes__desc____ret____arr__B()
}

func (this *Java__lang__String__Impl) GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int) {
	this._dispatch.Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) ByteArray__Instance {
	return this._dispatch.Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0)
}

func (this *Java__lang__String__Impl) GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	this._dispatch.Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) GetChars__desc____arr__C__I__ret__V(var0 CharArray__Instance, var1 int) {
	this._dispatch.Impl__GetChars__desc____arr__C__I__ret__V(var0, var1)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Intern__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) IsEmpty__desc____ret__Z() bool {
	return this._dispatch.Impl__IsEmpty__desc____ret__Z()
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__ret__I(var0 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0)
}

func (this *Java__lang__String__Impl) LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	return this._dispatch.Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) Length__desc____ret__I() int {
	return this._dispatch.Impl__Length__desc____ret__I()
}

func (this *Java__lang__String__Impl) Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	return this._dispatch.Impl__OffsetByCodePoints__desc__I__I__ret__I(var0, var1)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3)
}

func (this *Java__lang__String__Impl) RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	return this._dispatch.Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0, var1, var2, var3, var4)
}

func (this *Java__lang__String__Impl) Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	return this._dispatch.Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) ObjectArray__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) ObjectArray__Instance {
	return this._dispatch.Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0)
}

func (this *Java__lang__String__Impl) StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	return this._dispatch.Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0, var1)
}

func (this *Java__lang__String__Impl) SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	return this._dispatch.Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0, var1)
}

func (this *Java__lang__String__Impl) Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__ret____obj__Java__lang__String(var0)
}

func (this *Java__lang__String__Impl) Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	return this._dispatch.Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0, var1)
}

func (this *Java__lang__String__Impl) ToCharArray__desc____ret____arr__C() CharArray__Instance {
	return this._dispatch.Impl__ToCharArray__desc____ret____arr__C()
}

func (this *Java__lang__String__Impl) ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToLowerCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__ToUpperCase__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__String__Impl) Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__Trim__desc____ret____obj__Java__lang__String()
}

type Java__lang__String__Instance interface {
	CharAt__desc__I__ret__C(int) rune
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	CompareTo__desc____obj__Java__lang__Object__ret__I(Java__lang__Object__Instance) int
	CompareTo__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance) Java__lang__String__Instance
	Contains__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(Java__lang__CharSequence__Instance) bool
	EndsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Finalize__desc____ret__V()
	GetBytes__desc____ret____arr__B() ByteArray__Instance
	GetBytes__desc__I__I____arr__B__I__ret__V(int, int, ByteArray__Instance, int)
	GetBytes__desc____obj__Java__lang__String__ret____arr__B(Java__lang__String__Instance) ByteArray__Instance
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	GetChars__desc____arr__C__I__ret__V(CharArray__Instance, int)
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IndexOf__desc__I__ret__I(int) int
	IndexOf__desc__I__I__ret__I(int, int) int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	IsEmpty__desc____ret__Z() bool
	LastIndexOf__desc__I__ret__I(int) int
	LastIndexOf__desc__I__I__ret__I(int, int) int
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	Matches__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(int, Java__lang__String__Instance, int, int) bool
	RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(bool, int, Java__lang__String__Instance, int, int) bool
	Replace__desc__C__C__ret____obj__Java__lang__String(rune, rune) Java__lang__String__Instance
	Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(Java__lang__CharSequence__Instance, Java__lang__CharSequence__Instance) Java__lang__String__Instance
	ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(Java__lang__String__Instance, Java__lang__String__Instance) Java__lang__String__Instance
	Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(Java__lang__String__Instance) ObjectArray__Instance
	Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(Java__lang__String__Instance, int) ObjectArray__Instance
	StartsWith__desc____obj__Java__lang__String__ret__Z(Java__lang__String__Instance) bool
	StartsWith__desc____obj__Java__lang__String__I__ret__Z(Java__lang__String__Instance, int) bool
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToCharArray__desc____ret____arr__C() CharArray__Instance
	ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__String() *Java__lang__String__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__String__Impl struct {
	*Java__lang__Object__Impl
	_dispatch  Java__lang__String__Dispatch
	Underlying string
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/String.<init>()V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/String.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____obj__Java__lang__StringBuilder__ret__V(var0 Java__lang__StringBuilder__Instance) {
	panic("Not Implemented - java/lang/String.<init>(Ljava/lang/StringBuilder;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__ret__V(var0 ByteArray__Instance) {
	panic("Not Implemented - java/lang/String.<init>([B)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__ret__V(var0 ByteArray__Instance, var1 int) {
	panic("Not Implemented - java/lang/String.<init>([BI)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int) {
	panic("Not Implemented - java/lang/String.<init>([BII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I__I__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 int) {
	panic("Not Implemented - java/lang/String.<init>([BIII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B__I__I____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 int, var2 int, var3 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/String.<init>([BIILjava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__B____obj__Java__lang__String__ret__V(var0 ByteArray__Instance, var1 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/String.<init>([BLjava/lang/String;)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__ret__V(var0 CharArray__Instance) {
	panic("Not Implemented - java/lang/String.<init>([C)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__I__I__ret__V(var0 CharArray__Instance, var1 int, var2 int) {
	panic("Not Implemented - java/lang/String.<init>([CII)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__C__Z__ret__V(var0 CharArray__Instance, var1 bool) {
	panic("Not Implemented - java/lang/String.<init>([CZ)V")
}

func (this *Java__lang__String__Impl) Impl__Instance_Init__desc____arr__I__I__I__ret__V(var0 IntArray__Instance, var1 int, var2 int) {
	panic("Not Implemented - java/lang/String.<init>([III)V")
}

func (this *Java__lang__String__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented - java/lang/String.charAt(I)C")
}

func (this *Java__lang__String__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/String.codePointAt(I)I")
}

func (this *Java__lang__String__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/String.codePointBefore(I)I")
}

func (this *Java__lang__String__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/String.codePointCount(II)I")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__Object__ret__I(var0 Java__lang__Object__Instance) int {
	panic("Not Implemented - java/lang/String.compareTo(Ljava/lang/Object;)I")
}

func (this *Java__lang__String__Impl) Impl__CompareTo__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/String.compareTo(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__CompareToIgnoreCase__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/String.compareToIgnoreCase(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__Concat__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.concat(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Contains__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Not Implemented - java/lang/String.contains(Ljava/lang/CharSequence;)Z")
}

func (this *Java__lang__String__Impl) Impl__ContentEquals__desc____obj__Java__lang__CharSequence__ret__Z(var0 Java__lang__CharSequence__Instance) bool {
	panic("Not Implemented - java/lang/String.contentEquals(Ljava/lang/CharSequence;)Z")
}

func (this *Java__lang__String__Impl) Impl__EndsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/String.endsWith(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__Equals__desc____obj__Java__lang__Object__ret__Z(var0 Java__lang__Object__Instance) bool {
	panic("Not Implemented - java/lang/String.equals(Ljava/lang/Object;)Z")
}

func (this *Java__lang__String__Impl) Impl__EqualsIgnoreCase__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/String.equalsIgnoreCase(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____ret____arr__B() ByteArray__Instance {
	panic("Not Implemented - java/lang/String.getBytes()[B")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc__I__I____arr__B__I__ret__V(var0 int, var1 int, var2 ByteArray__Instance, var3 int) {
	panic("Not Implemented - java/lang/String.getBytes(II[BI)V")
}

func (this *Java__lang__String__Impl) Impl__GetBytes__desc____obj__Java__lang__String__ret____arr__B(var0 Java__lang__String__Instance) ByteArray__Instance {
	panic("Not Implemented - java/lang/String.getBytes(Ljava/lang/String;)[B")
}

func (this *Java__lang__String__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Not Implemented - java/lang/String.getChars(II[CI)V")
}

func (this *Java__lang__String__Impl) Impl__GetChars__desc____arr__C__I__ret__V(var0 CharArray__Instance, var1 int) {
	panic("Not Implemented - java/lang/String.getChars([CI)V")
}

func (this *Java__lang__String__Impl) Impl__HashCode__desc____ret__I() int {
	panic("Not Implemented - java/lang/String.hashCode()I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/String.indexOf(I)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/String.indexOf(II)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/String.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/String.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__String__Impl) Impl__Intern__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.intern()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__IsEmpty__desc____ret__Z() bool {
	panic("Not Implemented - java/lang/String.isEmpty()Z")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/String.lastIndexOf(I)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/String.lastIndexOf(II)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/String.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__String__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/String.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__String__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented - java/lang/String.length()I")
}

func (this *Java__lang__String__Impl) Impl__Matches__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/String.matches(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/String.offsetByCodePoints(II)I")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__I____obj__Java__lang__String__I__I__ret__Z(var0 int, var1 Java__lang__String__Instance, var2 int, var3 int) bool {
	panic("Not Implemented - java/lang/String.regionMatches(ILjava/lang/String;II)Z")
}

func (this *Java__lang__String__Impl) Impl__RegionMatches__desc__Z__I____obj__Java__lang__String__I__I__ret__Z(var0 bool, var1 int, var2 Java__lang__String__Instance, var3 int, var4 int) bool {
	panic("Not Implemented - java/lang/String.regionMatches(ZILjava/lang/String;II)Z")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc__C__C__ret____obj__Java__lang__String(var0 rune, var1 rune) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.replace(CC)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Replace__desc____obj__Java__lang__CharSequence____obj__Java__lang__CharSequence__ret____obj__Java__lang__String(var0 Java__lang__CharSequence__Instance, var1 Java__lang__CharSequence__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.replace(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ReplaceAll__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.replaceAll(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ReplaceFirst__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.replaceFirst(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance) ObjectArray__Instance {
	panic("Not Implemented - java/lang/String.split(Ljava/lang/String;)[Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Split__desc____obj__Java__lang__String__I__ret____arr____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 int) ObjectArray__Instance {
	panic("Not Implemented - java/lang/String.split(Ljava/lang/String;I)[Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__ret__Z(var0 Java__lang__String__Instance) bool {
	panic("Not Implemented - java/lang/String.startsWith(Ljava/lang/String;)Z")
}

func (this *Java__lang__String__Impl) Impl__StartsWith__desc____obj__Java__lang__String__I__ret__Z(var0 Java__lang__String__Instance, var1 int) bool {
	panic("Not Implemented - java/lang/String.startsWith(Ljava/lang/String;I)Z")
}

func (this *Java__lang__String__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented - java/lang/String.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToCharArray__desc____ret____arr__C() CharArray__Instance {
	panic("Not Implemented - java/lang/String.toCharArray()[C")
}

func (this *Java__lang__String__Impl) Impl__ToLowerCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.toLowerCase()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.toString()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__ToUpperCase__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.toUpperCase()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) Impl__Trim__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/String.trim()Ljava/lang/String;")
}

func (this *Java__lang__String__Impl) RawPtr__Java__lang__String() *Java__lang__String__Impl {
	return this
}

func (this *Java__lang__String__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__StringBuilder__Static struct {
	SerialVersionUID int64
}

var Java__lang__StringBuilder__Var Java__lang__StringBuilder__Static

func Java__lang__StringBuilder() *Java__lang__StringBuilder__Static {
	return &Java__lang__StringBuilder__Var
}

func (this *Java__lang__StringBuilder__Static) New() *Java__lang__StringBuilder__Impl {
	v := &Java__lang__StringBuilder__Impl{
		Java__lang__AbstractStringBuilder__Impl: Java__lang__AbstractStringBuilder().New(),
	}
	v.Java__lang__StringBuilder__InitDispatch(v)
	return v
}

type Java__lang__StringBuilder__Dispatch interface {
	Java__lang__AbstractStringBuilder__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(Java__lang__CharSequence__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(CharArray__Instance) Java__lang__StringBuilder__Instance
	Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance) Java__lang__StringBuilder__Instance
	Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
}

func (this *Java__lang__StringBuilder__Impl) Java__lang__StringBuilder__InitDispatch(v Java__lang__StringBuilder__Dispatch) {
	this.Java__lang__AbstractStringBuilder__Impl.Java__lang__AbstractStringBuilder__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	return this._dispatch.Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder()
}

type Java__lang__StringBuilder__Instance interface {
	Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(rune) Java__lang__AbstractStringBuilder__Instance
	Append__desc__C__ret____obj__Java__lang__Appendable(rune) Java__lang__Appendable__Instance
	Append__desc__C__ret____obj__Java__lang__StringBuilder(rune) Java__lang__StringBuilder__Instance
	Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(float64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__D__ret____obj__Java__lang__StringBuilder(float64) Java__lang__StringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(float32) Java__lang__AbstractStringBuilder__Instance
	Append__desc__F__ret____obj__Java__lang__StringBuilder(float32) Java__lang__StringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	Append__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(int64) Java__lang__AbstractStringBuilder__Instance
	Append__desc__J__ret____obj__Java__lang__StringBuilder(int64) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__AbstractStringBuilder__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__AbstractStringBuilder__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(Java__lang__CharSequence__Instance, int, int) Java__lang__Appendable__Instance
	Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(bool) Java__lang__AbstractStringBuilder__Instance
	Append__desc__Z__ret____obj__Java__lang__StringBuilder(bool) Java__lang__StringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(CharArray__Instance) Java__lang__StringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	Capacity__desc____ret__I() int
	CharAt__desc__I__ret__C(int) rune
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	CodePointAt__desc__I__ret__I(int) int
	CodePointBefore__desc__I__ret__I(int) int
	CodePointCount__desc__I__I__ret__I(int, int) int
	Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(int) Java__lang__AbstractStringBuilder__Instance
	DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(int) Java__lang__StringBuilder__Instance
	EnsureCapacity__desc__I__ret__V(int)
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetChars__desc__I__I____arr__C__I__ret__V(int, int, CharArray__Instance, int)
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetValue__desc____ret____arr__C() CharArray__Instance
	HashCode__desc____ret__I() int
	IndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	IndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(int, rune) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(int, rune) Java__lang__StringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(int, float64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(int, float64) Java__lang__StringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(int, float32) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(int, float32) Java__lang__StringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(int, int) Java__lang__StringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(int, int64) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(int, int64) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(int, Java__lang__CharSequence__Instance, int, int) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(int, Java__lang__Object__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(int, bool) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(int, bool) Java__lang__StringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance) Java__lang__StringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(int, CharArray__Instance, int, int) Java__lang__AbstractStringBuilder__Instance
	Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(int, CharArray__Instance, int, int) Java__lang__StringBuilder__Instance
	LastIndexOf__desc____obj__Java__lang__String__ret__I(Java__lang__String__Instance) int
	LastIndexOf__desc____obj__Java__lang__String__I__ret__I(Java__lang__String__Instance, int) int
	Length__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	OffsetByCodePoints__desc__I__I__ret__I(int, int) int
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(int, int, Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance
	Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(int, int, Java__lang__String__Instance) Java__lang__StringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance
	Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance
	SetCharAt__desc__I__C__ret__V(int, rune)
	SetLength__desc__I__ret__V(int)
	SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(int, int) Java__lang__CharSequence__Instance
	Substring__desc__I__ret____obj__Java__lang__String(int) Java__lang__String__Instance
	Substring__desc__I__I__ret____obj__Java__lang__String(int, int) Java__lang__String__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	TrimToSize__desc____ret__V()
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	FieldGet__Java__lang__AbstractStringBuilder__Count() int
	FieldSet__Java__lang__AbstractStringBuilder__Count(v int)
	FieldGet__Java__lang__AbstractStringBuilder__Value() CharArray__Instance
	FieldSet__Java__lang__AbstractStringBuilder__Value(v CharArray__Instance)
	RawPtr__Java__lang__StringBuilder() *Java__lang__StringBuilder__Impl
	RawPtr__Java__lang__AbstractStringBuilder() *Java__lang__AbstractStringBuilder__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__StringBuilder__Impl struct {
	*Java__lang__AbstractStringBuilder__Impl
	_dispatch  Java__lang__StringBuilder__Dispatch
	Underlying string
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/StringBuilder.<init>(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__CharSequence__ret__V(var0 Java__lang__CharSequence__Instance) {
	panic("Not Implemented - java/lang/StringBuilder.<init>(Ljava/lang/CharSequence;)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/StringBuilder.<init>(Ljava/lang/String;)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0 rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0 float64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(D)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0 float32) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(F)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(I)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0 int64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(J)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(Ljava/lang/Object;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(Ljava/lang/String;)Ljava/lang/AbstractStringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0 bool) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append(Z)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append([C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.append([CII)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.appendCodePoint(I)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Capacity__desc____ret__I() int {
	panic("Not Implemented - java/lang/StringBuilder.capacity()I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CharAt__desc__I__ret__C(var0 int) rune {
	panic("Not Implemented - java/lang/StringBuilder.charAt(I)C")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointAt__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/StringBuilder.codePointAt(I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointBefore__desc__I__ret__I(var0 int) int {
	panic("Not Implemented - java/lang/StringBuilder.codePointBefore(I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__CodePointCount__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/StringBuilder.codePointCount(II)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.delete(II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.deleteCharAt(I)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__EnsureCapacity__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/StringBuilder.ensureCapacity(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__GetChars__desc__I__I____arr__C__I__ret__V(var0 int, var1 int, var2 CharArray__Instance, var3 int) {
	panic("Not Implemented - java/lang/StringBuilder.getChars(II[CI)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/StringBuilder.indexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__IndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/StringBuilder.indexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 rune) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(IC)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0 int, var1 float64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(ID)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0 int, var1 float32) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(IF)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0 int, var1 int64) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(IJ)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(ILjava/lang/CharSequence;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(ILjava/lang/CharSequence;II)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(ILjava/lang/Object;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(ILjava/lang/String;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0 int, var1 bool) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(IZ)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(I[C)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.insert(I[CII)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__ret__I(var0 Java__lang__String__Instance) int {
	panic("Not Implemented - java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__LastIndexOf__desc____obj__Java__lang__String__I__ret__I(var0 Java__lang__String__Instance, var1 int) int {
	panic("Not Implemented - java/lang/StringBuilder.lastIndexOf(Ljava/lang/String;I)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Length__desc____ret__I() int {
	panic("Not Implemented - java/lang/StringBuilder.length()I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__OffsetByCodePoints__desc__I__I__ret__I(var0 int, var1 int) int {
	panic("Not Implemented - java/lang/StringBuilder.offsetByCodePoints(II)I")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.replace(IILjava/lang/String;)Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder() Java__lang__StringBuilder__Instance {
	panic("Not Implemented - java/lang/StringBuilder.reverse()Ljava/lang/StringBuilder;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetCharAt__desc__I__C__ret__V(var0 int, var1 rune) {
	panic("Not Implemented - java/lang/StringBuilder.setCharAt(IC)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SetLength__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/StringBuilder.setLength(I)V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__SubSequence__desc__I__I__ret____obj__Java__lang__CharSequence(var0 int, var1 int) Java__lang__CharSequence__Instance {
	panic("Not Implemented - java/lang/StringBuilder.subSequence(II)Ljava/lang/CharSequence;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__ret____obj__Java__lang__String(var0 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/StringBuilder.substring(I)Ljava/lang/String;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Substring__desc__I__I__ret____obj__Java__lang__String(var0 int, var1 int) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/StringBuilder.substring(II)Ljava/lang/String;")
}

func (this *Java__lang__StringBuilder__Impl) Impl__TrimToSize__desc____ret__V() {
	panic("Not Implemented - java/lang/StringBuilder.trimToSize()V")
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__AbstractStringBuilder(var0 rune) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__C__ret____obj__Java__lang__Appendable(var0 rune) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__D__ret____obj__Java__lang__AbstractStringBuilder(var0 float64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__D__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__F__ret____obj__Java__lang__AbstractStringBuilder(var0 float32) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__F__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__J__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__Appendable(var0 Java__lang__CharSequence__Instance, var1 int, var2 int) Java__lang__Appendable__Instance {
	return this.Impl__Append__desc____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 bool) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc__Z__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____arr__C__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 CharArray__Instance, var1 int, var2 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Append__desc____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__AppendCodePoint__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Delete__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Delete__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__DeleteCharAt__desc__I__ret____obj__Java__lang__StringBuilder(var0)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 rune) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__D__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__D__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__F__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 float32) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__F__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__I__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__J__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int64) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__J__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__CharSequence__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__CharSequence__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__CharSequence__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__Object__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__Object__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I__Z__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 bool) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I__Z__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____arr__C__ret____obj__Java__lang__StringBuilder(var0, var1)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 CharArray__Instance, var2 int, var3 int) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Insert__desc__I____arr__C__I__I__ret____obj__Java__lang__StringBuilder(var0, var1, var2, var3)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__AbstractStringBuilder(var0 int, var1 int, var2 Java__lang__String__Instance) Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Replace__desc__I__I____obj__Java__lang__String__ret____obj__Java__lang__StringBuilder(var0, var1, var2)
}

func (this *Java__lang__StringBuilder__Impl) Impl__Reverse__desc____ret____obj__Java__lang__AbstractStringBuilder() Java__lang__AbstractStringBuilder__Instance {
	return this.Impl__Reverse__desc____ret____obj__Java__lang__StringBuilder()
}

func (this *Java__lang__StringBuilder__Impl) RawPtr__Java__lang__StringBuilder() *Java__lang__StringBuilder__Impl {
	return this
}

func (this *Java__lang__StringBuilder__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__System__Static struct {
	Err  Java__io__PrintStream__Instance
	Out  Java__io__PrintStream__Instance
	init sync.Once
}

var Java__lang__System__Var Java__lang__System__Static

func Java__lang__System() *Java__lang__System__Static {
	Java__lang__System__Var.init.Do(Java__lang__System__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__System__Var
}

func (this *Java__lang__System__Static) New() *Java__lang__System__Impl {
	v := &Java__lang__System__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__System__InitDispatch(v)
	return v
}

func (this *Java__lang__System__Static) Impl__Arraycopy__desc____obj__Java__lang__Object__I____obj__Java__lang__Object__I__I__ret__V(var0 Java__lang__Object__Instance, var1 int, var2 Java__lang__Object__Instance, var3 int, var4 int) {
	panic("Not Implemented - java/lang/System.arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V")
}

func (this *Java__lang__System__Static) Impl__ClearProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.clearProperty(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__CurrentTimeMillis__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/System.currentTimeMillis()J")
}

func (this *Java__lang__System__Static) Impl__Exit__desc__I__ret__V(var0 int) {
	panic("Not Implemented - java/lang/System.exit(I)V")
}

func (this *Java__lang__System__Static) Impl__Gc__desc____ret__V() {
	panic("Not Implemented - java/lang/System.gc()V")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.getProperty(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__GetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__Getenv__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.getenv(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__LineSeparator__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.lineSeparator()Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__Load__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/System.load(Ljava/lang/String;)V")
}

func (this *Java__lang__System__Static) Impl__LoadLibrary__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	panic("Not Implemented - java/lang/System.loadLibrary(Ljava/lang/String;)V")
}

func (this *Java__lang__System__Static) Impl__MapLibraryName__desc____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.mapLibraryName(Ljava/lang/String;)Ljava/lang/String;")
}

func (this *Java__lang__System__Static) Impl__NanoTime__desc____ret__J() int64 {
	panic("Not Implemented - java/lang/System.nanoTime()J")
}

func (this *Java__lang__System__Static) Impl__RunFinalization__desc____ret__V() {
	panic("Not Implemented - java/lang/System.runFinalization()V")
}

func (this *Java__lang__System__Static) Impl__RunFinalizersOnExit__desc__Z__ret__V(var0 bool) {
	panic("Not Implemented - java/lang/System.runFinalizersOnExit(Z)V")
}

func (this *Java__lang__System__Static) Impl__SetErr__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented - java/lang/System.setErr(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__System__Static) Impl__SetOut__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented - java/lang/System.setOut(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__System__Static) Impl__SetProperty__desc____obj__Java__lang__String____obj__Java__lang__String__ret____obj__Java__lang__String(var0 Java__lang__String__Instance, var1 Java__lang__String__Instance) Java__lang__String__Instance {
	panic("Not Implemented - java/lang/System.setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;")
}

type Java__lang__System__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__System__Impl) Java__lang__System__InitDispatch(v Java__lang__System__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__System__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__System() *Java__lang__System__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__System__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__System__Dispatch
}

func (this *Java__lang__System__Impl) RawPtr__Java__lang__System() *Java__lang__System__Impl {
	return this
}

func (this *Java__lang__System__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Throwable__Static struct {
	__dollar__assertionsDisabled bool
	init                         sync.Once
}

var Java__lang__Throwable__Var Java__lang__Throwable__Static

func Java__lang__Throwable() *Java__lang__Throwable__Static {
	Java__lang__Throwable__Var.init.Do(Java__lang__Throwable__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Throwable__Var
}

func (this *Java__lang__Throwable__Static) New() *Java__lang__Throwable__Impl {
	v := &Java__lang__Throwable__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Throwable__InitDispatch(v)
	return v
}

func (this *Java__lang__Throwable__Static) Impl__Static_Init__desc____ret__V() {
	
}

type Java__lang__Throwable__Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(Java__lang__String__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance)
	Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(Java__lang__String__Instance, Java__lang__Throwable__Instance, bool, bool)
	Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Impl__GetStackTraceDepth__desc____ret__I() int
	Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Impl__PrintStackTrace__desc____ret__V()
	Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
}

func (this *Java__lang__Throwable__Impl) Java__lang__Throwable__InitDispatch(v Java__lang__Throwable__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String__ret__V(var0 Java__lang__String__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0, var1)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0, var1, var2, var3)
}

func (this *Java__lang__Throwable__Impl) Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	this._dispatch.Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0)
}

func (this *Java__lang__Throwable__Impl) FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	return this._dispatch.Impl__GetCause__desc____ret____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	return this._dispatch.Impl__GetMessage__desc____ret____obj__Java__lang__String()
}

func (this *Java__lang__Throwable__Impl) GetStackTraceDepth__desc____ret__I() int {
	return this._dispatch.Impl__GetStackTraceDepth__desc____ret__I()
}

func (this *Java__lang__Throwable__Impl) GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance {
	return this._dispatch.Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable()
}

func (this *Java__lang__Throwable__Impl) InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	return this._dispatch.Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0)
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____ret__V() {
	this._dispatch.Impl__PrintStackTrace__desc____ret__V()
}

func (this *Java__lang__Throwable__Impl) PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	this._dispatch.Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0)
}

type Java__lang__Throwable__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Throwable__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Throwable__Dispatch
	Message   Java__lang__String__Instance
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/Throwable.<init>()V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__Z__Z__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance, var2 bool, var3 bool) {
	panic("Not Implemented - java/lang/Throwable.<init>(Ljava/lang/String;Ljava/lang/Throwable;ZZ)V")
}

func (this *Java__lang__Throwable__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Throwable.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/Throwable.addSuppressed(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Not Implemented - java/lang/Throwable.fillInStackTrace()Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance {
	panic("Not Implemented - java/lang/Throwable.getCause()Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Throwable.getLocalizedMessage()Ljava/lang/String;")
}

func (this *Java__lang__Throwable__Impl) Impl__GetStackTraceDepth__desc____ret__I() int {
	panic("Not Implemented - java/lang/Throwable.getStackTraceDepth()I")
}

func (this *Java__lang__Throwable__Impl) Impl__GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance {
	panic("Not Implemented - java/lang/Throwable.getSuppressed()[Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(var0 Java__lang__Throwable__Instance) Java__lang__Throwable__Instance {
	panic("Not Implemented - java/lang/Throwable.initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____ret__V() {
	panic("Not Implemented - java/lang/Throwable.printStackTrace()V")
}

func (this *Java__lang__Throwable__Impl) Impl__PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(var0 Java__io__PrintStream__Instance) {
	panic("Not Implemented - java/lang/Throwable.printStackTrace(Ljava/io/PrintStream;)V")
}

func (this *Java__lang__Throwable__Impl) Impl__ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance {
	panic("Not Implemented - java/lang/Throwable.toString()Ljava/lang/String;")
}

func (this *Java__lang__Throwable__Impl) RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl {
	return this
}

func (this *Java__lang__Throwable__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__VirtualMachineError__Static struct{}

var Java__lang__VirtualMachineError__Var Java__lang__VirtualMachineError__Static

func Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Static {
	return &Java__lang__VirtualMachineError__Var
}

func (this *Java__lang__VirtualMachineError__Static) New() *Java__lang__VirtualMachineError__Impl {
	v := &Java__lang__VirtualMachineError__Impl{
		Java__lang__Error__Impl: Java__lang__Error().New(),
	}
	v.Java__lang__VirtualMachineError__InitDispatch(v)
	return v
}

type Java__lang__VirtualMachineError__Dispatch interface {
	Java__lang__Error__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Java__lang__VirtualMachineError__InitDispatch(v Java__lang__VirtualMachineError__Dispatch) {
	this.Java__lang__Error__Impl.Java__lang__Error__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__VirtualMachineError__Instance interface {
	AddSuppressed__desc____obj__Java__lang__Throwable__ret__V(Java__lang__Throwable__Instance)
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	FillInStackTrace__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	Finalize__desc____ret__V()
	GetCause__desc____ret____obj__Java__lang__Throwable() Java__lang__Throwable__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	GetLocalizedMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetMessage__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	GetStackTraceDepth__desc____ret__I() int
	GetSuppressed__desc____ret____arr____obj__Java__lang__Throwable() ObjectArray__Instance
	HashCode__desc____ret__I() int
	InitCause__desc____obj__Java__lang__Throwable__ret____obj__Java__lang__Throwable(Java__lang__Throwable__Instance) Java__lang__Throwable__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	PrintStackTrace__desc____ret__V()
	PrintStackTrace__desc____obj__Java__io__PrintStream__ret__V(Java__io__PrintStream__Instance)
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Impl
	RawPtr__Java__lang__Error() *Java__lang__Error__Impl
	RawPtr__Java__lang__Throwable() *Java__lang__Throwable__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__VirtualMachineError__Impl struct {
	*Java__lang__Error__Impl
	_dispatch Java__lang__VirtualMachineError__Dispatch
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____ret__V() {
	panic("Not Implemented - java/lang/VirtualMachineError.<init>()V")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__String____obj__Java__lang__Throwable__ret__V(var0 Java__lang__String__Instance, var1 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/VirtualMachineError.<init>(Ljava/lang/String;Ljava/lang/Throwable;)V")
}

func (this *Java__lang__VirtualMachineError__Impl) Impl__Instance_Init__desc____obj__Java__lang__Throwable__ret__V(var0 Java__lang__Throwable__Instance) {
	panic("Not Implemented - java/lang/VirtualMachineError.<init>(Ljava/lang/Throwable;)V")
}

func (this *Java__lang__VirtualMachineError__Impl) RawPtr__Java__lang__VirtualMachineError() *Java__lang__VirtualMachineError__Impl {
	return this
}

func (this *Java__lang__VirtualMachineError__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

type Java__lang__Void__Static struct {
	TYPE Java__lang__Class__Instance
	init sync.Once
}

var Java__lang__Void__Var Java__lang__Void__Static

func Java__lang__Void() *Java__lang__Void__Static {
	Java__lang__Void__Var.init.Do(Java__lang__Void__Var.Impl__Static_Init__desc____ret__V)
	return &Java__lang__Void__Var
}

func (this *Java__lang__Void__Static) New() *Java__lang__Void__Impl {
	v := &Java__lang__Void__Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__lang__Void__InitDispatch(v)
	return v
}

func (this *Java__lang__Void__Static) Impl__Static_Init__desc____ret__V() {
	
}

type Java__lang__Void__Dispatch interface {
	Java__lang__Object__Dispatch
}

func (this *Java__lang__Void__Impl) Java__lang__Void__InitDispatch(v Java__lang__Void__Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

type Java__lang__Void__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Void() *Java__lang__Void__Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__lang__Void__Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__lang__Void__Dispatch
}

func (this *Java__lang__Void__Impl) RawPtr__Java__lang__Void() *Java__lang__Void__Impl {
	return this
}

func (this *Java__lang__Void__Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}
