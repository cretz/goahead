// Generated from Azul Zulu packaged OpenJDK JAR and carries the same
// GPL license with the classpath exception
package rt

type Java__util__function__BiConsumer__Static struct{}

var Java__util__function__BiConsumer__Var Java__util__function__BiConsumer__Static

func Java__util__function__BiConsumer() *Java__util__function__BiConsumer__Static {
	return &Java__util__function__BiConsumer__Var
}

type Java__util__function__BiConsumer__Instance interface {
	Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance, Java__lang__Object__Instance)
	AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

func Java__util__function__BiConsumer__defaultmethod__AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(this Java__util__function__BiConsumer__Instance, var0 Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance {
	panic("Not Implemented - java/util/function/BiConsumer.andThen(Ljava/util/function/BiConsumer;)Ljava/util/function/BiConsumer;")
}

type Java__util__function__BiConsumer__dynproxy____Static struct{}

var Java__util__function__BiConsumer__dynproxy____Var Java__util__function__BiConsumer__dynproxy____Static

func Java__util__function__BiConsumer__dynproxy__() *Java__util__function__BiConsumer__dynproxy____Static {
	return &Java__util__function__BiConsumer__dynproxy____Var
}

func (this *Java__util__function__BiConsumer__dynproxy____Static) New() *Java__util__function__BiConsumer__dynproxy____Impl {
	v := &Java__util__function__BiConsumer__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__util__function__BiConsumer__dynproxy____InitDispatch(v)
	return v
}

type Java__util__function__BiConsumer__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance, Java__lang__Object__Instance)
	Impl__AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) Java__util__function__BiConsumer__dynproxy____InitDispatch(v Java__util__function__BiConsumer__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) {
	this._dispatch.Impl__Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(var0, var1)
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(var0 Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance {
	return this._dispatch.Impl__AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(var0)
}

type Java__util__function__BiConsumer__dynproxy____Instance interface {
	Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(Java__lang__Object__Instance, Java__lang__Object__Instance)
	AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__util__function__BiConsumer__dynproxy__() *Java__util__function__BiConsumer__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__BiConsumer__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__util__function__BiConsumer__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance, Java__lang__Object__Instance)
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) RawPtr__Java__util__function__BiConsumer__dynproxy__() *Java__util__function__BiConsumer__dynproxy____Impl {
	return this
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) Impl__AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(var0 Java__util__function__BiConsumer__Instance) Java__util__function__BiConsumer__Instance {
	return Java__util__function__BiConsumer__defaultmethod__AndThen__desc____obj__Java__util__function__BiConsumer__ret____obj__Java__util__function__BiConsumer(this, var0)
}

func (_ *Java__util__function__BiConsumer__Static) DynProxy_Create(fn func(Java__lang__Object__Instance, Java__lang__Object__Instance)) Java__util__function__BiConsumer__Instance {
	v := &Java__util__function__BiConsumer__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__util__function__BiConsumer__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__util__function__BiConsumer__dynproxy____Impl) Impl__Accept__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret__V(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) {
	this.fn(var0, var1)
}

type Java__util__function__BiFunction__Static struct{}

var Java__util__function__BiFunction__Var Java__util__function__BiFunction__Static

func Java__util__function__BiFunction() *Java__util__function__BiFunction__Static {
	return &Java__util__function__BiFunction__Var
}

type Java__util__function__BiFunction__Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

func Java__util__function__BiFunction__defaultmethod__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(this Java__util__function__BiFunction__Instance, var0 Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance {
	panic("Not Implemented - java/util/function/BiFunction.andThen(Ljava/util/function/Function;)Ljava/util/function/BiFunction;")
}

type Java__util__function__BiFunction__dynproxy____Static struct{}

var Java__util__function__BiFunction__dynproxy____Var Java__util__function__BiFunction__dynproxy____Static

func Java__util__function__BiFunction__dynproxy__() *Java__util__function__BiFunction__dynproxy____Static {
	return &Java__util__function__BiFunction__dynproxy____Var
}

func (this *Java__util__function__BiFunction__dynproxy____Static) New() *Java__util__function__BiFunction__dynproxy____Impl {
	v := &Java__util__function__BiFunction__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__util__function__BiFunction__dynproxy____InitDispatch(v)
	return v
}

type Java__util__function__BiFunction__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) Java__util__function__BiFunction__dynproxy____InitDispatch(v Java__util__function__BiFunction__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0 Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance {
	return this._dispatch.Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0)
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0, var1)
}

type Java__util__function__BiFunction__dynproxy____Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__util__function__BiFunction__dynproxy__() *Java__util__function__BiFunction__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__BiFunction__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__util__function__BiFunction__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) RawPtr__Java__util__function__BiFunction__dynproxy__() *Java__util__function__BiFunction__dynproxy____Impl {
	return this
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0 Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance {
	return Java__util__function__BiFunction__defaultmethod__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(this, var0)
}

func (_ *Java__util__function__BiFunction__Static) DynProxy_Create(fn func(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance) Java__util__function__BiFunction__Instance {
	v := &Java__util__function__BiFunction__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__util__function__BiFunction__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__util__function__BiFunction__dynproxy____Impl) Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this.fn(var0, var1)
}

type Java__util__function__BinaryOperator__Static struct{}

var Java__util__function__BinaryOperator__Var Java__util__function__BinaryOperator__Static

func Java__util__function__BinaryOperator() *Java__util__function__BinaryOperator__Static {
	return &Java__util__function__BinaryOperator__Var
}

type Java__util__function__BinaryOperator__Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__BinaryOperator__dynproxy____Static struct{}

var Java__util__function__BinaryOperator__dynproxy____Var Java__util__function__BinaryOperator__dynproxy____Static

func Java__util__function__BinaryOperator__dynproxy__() *Java__util__function__BinaryOperator__dynproxy____Static {
	return &Java__util__function__BinaryOperator__dynproxy____Var
}

func (this *Java__util__function__BinaryOperator__dynproxy____Static) New() *Java__util__function__BinaryOperator__dynproxy____Impl {
	v := &Java__util__function__BinaryOperator__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__util__function__BinaryOperator__dynproxy____InitDispatch(v)
	return v
}

type Java__util__function__BinaryOperator__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) Java__util__function__BinaryOperator__dynproxy____InitDispatch(v Java__util__function__BinaryOperator__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0 Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance {
	return this._dispatch.Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0)
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0, var1)
}

type Java__util__function__BinaryOperator__dynproxy____Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance
	Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__util__function__BinaryOperator__dynproxy__() *Java__util__function__BinaryOperator__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__BinaryOperator__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__util__function__BinaryOperator__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) RawPtr__Java__util__function__BinaryOperator__dynproxy__() *Java__util__function__BinaryOperator__dynproxy____Impl {
	return this
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(var0 Java__util__function__Function__Instance) Java__util__function__BiFunction__Instance {
	return Java__util__function__BiFunction__defaultmethod__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__BiFunction(this, var0)
}

func (_ *Java__util__function__BinaryOperator__Static) DynProxy_Create(fn func(Java__lang__Object__Instance, Java__lang__Object__Instance) Java__lang__Object__Instance) Java__util__function__BinaryOperator__Instance {
	v := &Java__util__function__BinaryOperator__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__util__function__BinaryOperator__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__util__function__BinaryOperator__dynproxy____Impl) Impl__Apply__desc____obj__Java__lang__Object____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance, var1 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this.fn(var0, var1)
}

type Java__util__function__Function__Static struct{}

var Java__util__function__Function__Var Java__util__function__Function__Static

func Java__util__function__Function() *Java__util__function__Function__Static {
	return &Java__util__function__Function__Var
}

func (this *Java__util__function__Function__Static) Impl__Identity__desc____ret____obj__Java__util__function__Function() Java__util__function__Function__Instance {
	panic("Not Implemented - java/util/function/Function.identity()Ljava/util/function/Function;")
}

type Java__util__function__Function__Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
	Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

func Java__util__function__Function__defaultmethod__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(this Java__util__function__Function__Instance, var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	panic("Not Implemented - java/util/function/Function.andThen(Ljava/util/function/Function;)Ljava/util/function/Function;")
}

func Java__util__function__Function__defaultmethod__Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(this Java__util__function__Function__Instance, var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	panic("Not Implemented - java/util/function/Function.compose(Ljava/util/function/Function;)Ljava/util/function/Function;")
}

type Java__util__function__Function__dynproxy____Static struct{}

var Java__util__function__Function__dynproxy____Var Java__util__function__Function__dynproxy____Static

func Java__util__function__Function__dynproxy__() *Java__util__function__Function__dynproxy____Static {
	return &Java__util__function__Function__dynproxy____Var
}

func (this *Java__util__function__Function__dynproxy____Static) New() *Java__util__function__Function__dynproxy____Impl {
	v := &Java__util__function__Function__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__util__function__Function__dynproxy____InitDispatch(v)
	return v
}

type Java__util__function__Function__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
	Impl__Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Impl__Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
}

func (this *Java__util__function__Function__dynproxy____Impl) Java__util__function__Function__dynproxy____InitDispatch(v Java__util__function__Function__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__util__function__Function__dynproxy____Impl) AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	return this._dispatch.Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0)
}

func (this *Java__util__function__Function__dynproxy____Impl) Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this._dispatch.Impl__Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0)
}

func (this *Java__util__function__Function__dynproxy____Impl) Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	return this._dispatch.Impl__Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0)
}

type Java__util__function__Function__dynproxy____Instance interface {
	AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
	Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(Java__lang__Object__Instance) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(Java__util__function__Function__Instance) Java__util__function__Function__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__util__function__Function__dynproxy__() *Java__util__function__Function__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__Function__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__util__function__Function__dynproxy____Dispatch
	fn        func(Java__lang__Object__Instance) Java__lang__Object__Instance
}

func (this *Java__util__function__Function__dynproxy____Impl) RawPtr__Java__util__function__Function__dynproxy__() *Java__util__function__Function__dynproxy____Impl {
	return this
}

func (this *Java__util__function__Function__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (this *Java__util__function__Function__dynproxy____Impl) Impl__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	return Java__util__function__Function__defaultmethod__AndThen__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(this, var0)
}

func (this *Java__util__function__Function__dynproxy____Impl) Impl__Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(var0 Java__util__function__Function__Instance) Java__util__function__Function__Instance {
	return Java__util__function__Function__defaultmethod__Compose__desc____obj__Java__util__function__Function__ret____obj__Java__util__function__Function(this, var0)
}

func (_ *Java__util__function__Function__Static) DynProxy_Create(fn func(Java__lang__Object__Instance) Java__lang__Object__Instance) Java__util__function__Function__Instance {
	v := &Java__util__function__Function__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__util__function__Function__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__util__function__Function__dynproxy____Impl) Impl__Apply__desc____obj__Java__lang__Object__ret____obj__Java__lang__Object(var0 Java__lang__Object__Instance) Java__lang__Object__Instance {
	return this.fn(var0)
}

type Java__util__function__IntFunction__Static struct{}

var Java__util__function__IntFunction__Var Java__util__function__IntFunction__Static

func Java__util__function__IntFunction() *Java__util__function__IntFunction__Static {
	return &Java__util__function__IntFunction__Var
}

type Java__util__function__IntFunction__Instance interface {
	Apply__desc__I__ret____obj__Java__lang__Object(int) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__IntFunction__dynproxy____Static struct{}

var Java__util__function__IntFunction__dynproxy____Var Java__util__function__IntFunction__dynproxy____Static

func Java__util__function__IntFunction__dynproxy__() *Java__util__function__IntFunction__dynproxy____Static {
	return &Java__util__function__IntFunction__dynproxy____Var
}

func (this *Java__util__function__IntFunction__dynproxy____Static) New() *Java__util__function__IntFunction__dynproxy____Impl {
	v := &Java__util__function__IntFunction__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
	}
	v.Java__util__function__IntFunction__dynproxy____InitDispatch(v)
	return v
}

type Java__util__function__IntFunction__dynproxy____Dispatch interface {
	Java__lang__Object__Dispatch
	Impl__Apply__desc__I__ret____obj__Java__lang__Object(int) Java__lang__Object__Instance
}

func (this *Java__util__function__IntFunction__dynproxy____Impl) Java__util__function__IntFunction__dynproxy____InitDispatch(v Java__util__function__IntFunction__dynproxy____Dispatch) {
	this.Java__lang__Object__Impl.Java__lang__Object__InitDispatch(v)
	this._dispatch = v
}

func (this *Java__util__function__IntFunction__dynproxy____Impl) Apply__desc__I__ret____obj__Java__lang__Object(var0 int) Java__lang__Object__Instance {
	return this._dispatch.Impl__Apply__desc__I__ret____obj__Java__lang__Object(var0)
}

type Java__util__function__IntFunction__dynproxy____Instance interface {
	Apply__desc__I__ret____obj__Java__lang__Object(int) Java__lang__Object__Instance
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__util__function__IntFunction__dynproxy__() *Java__util__function__IntFunction__dynproxy____Impl
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__function__IntFunction__dynproxy____Impl struct {
	*Java__lang__Object__Impl
	_dispatch Java__util__function__IntFunction__dynproxy____Dispatch
	fn        func(int) Java__lang__Object__Instance
}

func (this *Java__util__function__IntFunction__dynproxy____Impl) RawPtr__Java__util__function__IntFunction__dynproxy__() *Java__util__function__IntFunction__dynproxy____Impl {
	return this
}

func (this *Java__util__function__IntFunction__dynproxy____Impl) Impl_Self() Java__lang__Object__Instance {
	return this
}

func (_ *Java__util__function__IntFunction__Static) DynProxy_Create(fn func(int) Java__lang__Object__Instance) Java__util__function__IntFunction__Instance {
	v := &Java__util__function__IntFunction__dynproxy____Impl{
		Java__lang__Object__Impl: Java__lang__Object().New(),
		fn:                       fn,
	}
	v.Java__util__function__IntFunction__dynproxy____InitDispatch(v)
	v.Java__lang__Object__Impl.Impl__Instance_Init__desc____ret__V()
	return v
}

func (this *Java__util__function__IntFunction__dynproxy____Impl) Impl__Apply__desc__I__ret____obj__Java__lang__Object(var0 int) Java__lang__Object__Instance {
	return this.fn(var0)
}
