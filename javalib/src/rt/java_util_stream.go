// Generated from Azul Zulu packaged OpenJDK JAR and carries the same
// GPL license with the classpath exception
package rt

type Java__util__stream__BaseStream__Static struct{}

var Java__util__stream__BaseStream__Var Java__util__stream__BaseStream__Static

func Java__util__stream__BaseStream() *Java__util__stream__BaseStream__Static {
	return &Java__util__stream__BaseStream__Var
}

type Java__util__stream__BaseStream__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Close__desc____ret__V()
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IsParallel__desc____ret__Z() bool
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	Parallel__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	Sequential__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Unordered__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}

type Java__util__stream__Stream__Static struct{}

var Java__util__stream__Stream__Var Java__util__stream__Stream__Static

func Java__util__stream__Stream() *Java__util__stream__Stream__Static {
	return &Java__util__stream__Stream__Var
}

func (this *Java__util__stream__Stream__Static) Impl__Concat__desc____obj__Java__util__stream__Stream____obj__Java__util__stream__Stream__ret____obj__Java__util__stream__Stream(var0 Java__util__stream__Stream__Instance, var1 Java__util__stream__Stream__Instance) Java__util__stream__Stream__Instance {
	panic("Not Implemented - java/util/stream/Stream.concat(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;")
}

func (this *Java__util__stream__Stream__Static) Impl__Empty__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance {
	panic("Not Implemented - java/util/stream/Stream.empty()Ljava/util/stream/Stream;")
}

func (this *Java__util__stream__Stream__Static) Impl__Of__desc____obj__Java__lang__Object__ret____obj__Java__util__stream__Stream(var0 Java__lang__Object__Instance) Java__util__stream__Stream__Instance {
	panic("Not Implemented - java/util/stream/Stream.of(Ljava/lang/Object;)Ljava/util/stream/Stream;")
}

func (this *Java__util__stream__Stream__Static) Impl__Of__desc____arr____obj__Java__lang__Object__ret____obj__Java__util__stream__Stream(var0 ObjectArray__Instance) Java__util__stream__Stream__Instance {
	panic("Not Implemented - java/util/stream/Stream.of([Ljava/lang/Object;)Ljava/util/stream/Stream;")
}

type Java__util__stream__Stream__Instance interface {
	Clone__desc____ret____obj__Java__lang__Object() Java__lang__Object__Instance
	Close__desc____ret__V()
	Count__desc____ret__J() int64
	Distinct__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance
	Equals__desc____obj__Java__lang__Object__ret__Z(Java__lang__Object__Instance) bool
	Finalize__desc____ret__V()
	FlatMap__desc____obj__Java__util__function__Function__ret____obj__Java__util__stream__Stream(Java__util__function__Function__Instance) Java__util__stream__Stream__Instance
	GetClass__desc____ret____obj__Java__lang__Class() Java__lang__Class__Instance
	HashCode__desc____ret__I() int
	IsParallel__desc____ret__Z() bool
	Limit__desc__J__ret____obj__Java__util__stream__Stream(int64) Java__util__stream__Stream__Instance
	Map__desc____obj__Java__util__function__Function__ret____obj__Java__util__stream__Stream(Java__util__function__Function__Instance) Java__util__stream__Stream__Instance
	Notify__desc____ret__V()
	NotifyAll__desc____ret__V()
	Parallel__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	Reduce__desc____obj__Java__lang__Object____obj__Java__util__function__BiFunction____obj__Java__util__function__BinaryOperator__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__util__function__BiFunction__Instance, Java__util__function__BinaryOperator__Instance) Java__lang__Object__Instance
	Reduce__desc____obj__Java__lang__Object____obj__Java__util__function__BinaryOperator__ret____obj__Java__lang__Object(Java__lang__Object__Instance, Java__util__function__BinaryOperator__Instance) Java__lang__Object__Instance
	Sequential__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	Skip__desc__J__ret____obj__Java__util__stream__Stream(int64) Java__util__stream__Stream__Instance
	Sorted__desc____ret____obj__Java__util__stream__Stream() Java__util__stream__Stream__Instance
	ToArray__desc____ret____arr____obj__Java__lang__Object() ObjectArray__Instance
	ToArray__desc____obj__Java__util__function__IntFunction__ret____arr____obj__Java__lang__Object(Java__util__function__IntFunction__Instance) ObjectArray__Instance
	ToString__desc____ret____obj__Java__lang__String() Java__lang__String__Instance
	Unordered__desc____ret____obj__Java__util__stream__BaseStream() Java__util__stream__BaseStream__Instance
	Wait__desc____ret__V()
	Wait__desc__J__ret__V(int64)
	Wait__desc__J__I__ret__V(int64, int)
	RawPtr__Java__lang__Object() *Java__lang__Object__Impl
}
