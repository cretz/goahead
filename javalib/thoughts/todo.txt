Code:

* Consider int32 instead of int for JVM int type
  * Also test overflows/underflows...for now we will fail, but we need overflow-safe operators
* Refactor:
  * Type conversion stuff
  * Method and class resolution stuff to all use streams (or other lazy approaches)
  * Get rid of all the constant strings embedded everywhere
* Support Java 9 modules too as a solution to circular imports

Compliance pre-stdlib:

* Unused local var elision - DONE
* Covariant overridden return types - DONE
* Override resetting method to abstract that was concrete - DONE
* Private methods w/ name ambiguity - DONE
* Using .super to jump over certain invocations while inheriting - DONE
* Local var reuse which goes from obj, to array, back to obj of completely different types - DONE
* non-static inner classes - DONE
* private fields - DONE
* static and instance inits - DONE

Compliance post-stdlib:

* Boxed primitives
* Interface calls of an object method
* Object methods on array types
* Enums
* Lambdas
* Monitors and synchronized methods